{"version":3,"file":"index.js","mappings":"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","sources":["webpack://virtual-keyboard-by-Mi/./src/component/helper/signal.js","webpack://virtual-keyboard-by-Mi/./src/component/Store.js","webpack://virtual-keyboard-by-Mi/./src/component/Buffer.js","webpack://virtual-keyboard-by-Mi/./src/component/Editor.js","webpack://virtual-keyboard-by-Mi/./src/component/command/Command.js","webpack://virtual-keyboard-by-Mi/./src/component/command/Add.js","webpack://virtual-keyboard-by-Mi/./src/component/command/Delete.js","webpack://virtual-keyboard-by-Mi/./src/component/EditHistory.js","webpack://virtual-keyboard-by-Mi/./src/component/command/Copy.js","webpack://virtual-keyboard-by-Mi/./src/component/command/Replace.js","webpack://virtual-keyboard-by-Mi/./src/component/command/Cut.js","webpack://virtual-keyboard-by-Mi/./src/component/command/Paste.js","webpack://virtual-keyboard-by-Mi/./src/component/LocalStorage.js","webpack://virtual-keyboard-by-Mi/./src/component/Controller.js","webpack://virtual-keyboard-by-Mi/./src/component/helper/element.js","webpack://virtual-keyboard-by-Mi/./src/component/Header.js","webpack://virtual-keyboard-by-Mi/./src/component/Textarea.js","webpack://virtual-keyboard-by-Mi/./src/component/key/Key.js","webpack://virtual-keyboard-by-Mi/./src/component/key/KeyAlt.js","webpack://virtual-keyboard-by-Mi/./src/component/key/KeyArrow.js","webpack://virtual-keyboard-by-Mi/./src/component/key/KeyCapsLook.js","webpack://virtual-keyboard-by-Mi/./src/component/key/KeyControl.js","webpack://virtual-keyboard-by-Mi/./src/component/key/KeyMeta.js","webpack://virtual-keyboard-by-Mi/./src/component/key/KeyShift.js","webpack://virtual-keyboard-by-Mi/./src/component/Board.js","webpack://virtual-keyboard-by-Mi/./src/component/Main.js","webpack://virtual-keyboard-by-Mi/./src/component/helper/data-api.js","webpack://virtual-keyboard-by-Mi/./src/component/View.js","webpack://virtual-keyboard-by-Mi/./src/component/Keyboard.js","webpack://virtual-keyboard-by-Mi/./src/index.js"],"sourcesContent":["class Signal {\n  constructor() {\n    this._listener = [];\n  }\n\n  add = (listener) => {\n    this._listener.push(listener);\n  };\n\n  remove = (listener) => {\n    this._listener = this._listener.filter((elem) => elem !== listener);\n  };\n\n  emit = (params) => {\n    this._listener.forEach((listener) => listener(params));\n  };\n}\n\nexport { Signal };\n","import { Signal } from './helper/signal';\n\nclass Store {\n  constructor() {\n    this._langIndex = 0;\n    this._langMap = ['en', 'ru'];\n    this._textareaContent = '';\n    this._textareaRow = [''];\n    this._cursor = { line: 0, pos: 0, number: 0 };\n    this._keys = {};\n    this._activeBtns = {};\n    this._lastControl = { id: null, time: null };\n    this._activeControls = {};\n    this._lastKey = null;\n    this._capsLock = false;\n    this._maxLengthOfTextarea = 77;\n  }\n\n  setInitState({ keys, langIndex }) {\n    this._langIndex = langIndex;\n    this._keys = keys;\n    this.onInitState.emit({\n      keys,\n      lang: this._langMap[this._langIndex],\n    });\n  }\n\n  get maxLengthOfTextarea() {\n    return this._maxLengthOfTextarea;\n  }\n\n  set maxLengthOfTextarea(newLength) {\n    this._maxLengthOfTextarea = newLength;\n    this.onChangeLengthOfTextarea.emit(this._maxLengthOfTextarea);\n  }\n\n  get cursor() {\n    return this._cursor;\n  }\n\n  set cursor(newPosition) {\n    this._cursor = newPosition;\n    this.onChangeCursorPosition.emit({\n      start: this._cursor.number,\n      end: this._cursor.number,\n    });\n  }\n\n  get textareaRow() {\n    return this._textareaRow;\n  }\n\n  set textareaRow(textareaRow) {\n    this._textareaRow = textareaRow;\n  }\n\n  get() {\n    return this;\n  }\n\n  get textareaContent() {\n    return this._textareaContent;\n  }\n\n  set textareaContent(content) {\n    this._textareaContent = content;\n    this.onChangeTextareaContent.emit(this._textareaContent);\n  }\n\n  get keys() {\n    return this._keys;\n  }\n\n  set keys(keysMap) {\n    this._keys = keysMap;\n  }\n\n  get langIndex() {\n    return this._langIndex;\n  }\n\n  set langIndex(langIndex) {\n    this._langIndex = langIndex;\n    this.onChangeLang.emit(this._langMap[this._langIndex]);\n    this.onChangeLocalStorageData.emit({\n      lang: this._langMap[this.langIndex],\n      textareaContent: this.textareaContent,\n      textareaRow: this.textareaRow,\n      cursor: this.cursor,\n    });\n  }\n\n  get lang() {\n    return this._langMap;\n  }\n\n  set lang(langMap) {\n    this._langMap = langMap;\n  }\n\n  getKeyContent(code) {\n    return this._keys[code] || false;\n  }\n\n  get activeBtns() {\n    return this._activeBtns;\n  }\n\n  set activeBtns(btnsMap) {\n    this._activeBtns = btnsMap;\n    this.onChangeActiveBtns.emit(btnsMap);\n  }\n\n  get lastControl() {\n    return this._lastControl;\n  }\n\n  set lastControl(newLastControl) {\n    this._lastControl = newLastControl;\n  }\n\n  get activeControls() {\n    return this._activeControls;\n  }\n\n  set activeControls(newActiveControls) {\n    this._activeControls = newActiveControls;\n  }\n\n  get lastKey() {\n    return this._lastKey;\n  }\n\n  set lastKey(newLastKey) {\n    this._lastKey = newLastKey;\n  }\n\n  get capsLock() {\n    return this._capsLock;\n  }\n\n  set capsLock(flag) {\n    this._capsLock = flag;\n  }\n\n  onChangeActiveBtns = new Signal();\n\n  onChangeLengthOfTextarea = new Signal();\n\n  onChangeLocalStorageData = new Signal();\n\n  onChangeTextareaContent = new Signal();\n\n  onChangeLang = new Signal();\n\n  onChangeCursorPosition = new Signal();\n\n  onInitState = new Signal();\n}\n\nexport { Store };\n","class DataBuffer {\n  constructor() {\n    this.buffer = [];\n  }\n\n  getLast = () => this.buffer[this.buffer.length - 1] || '';\n\n  push = (string) => {\n    this.buffer.push(string);\n  };\n}\n\nexport { DataBuffer };\n","import { DataBuffer } from './Buffer';\n\nclass Editor {\n  constructor() {\n    this.textareaContent = '';\n    this.textareaRow = [];\n    this.cursor = { line: 0, pos: 0, number: 0 };\n    this.maxRowLength = 77;\n    this.buffer = new DataBuffer();\n    this.selectPosition = null;\n  }\n\n  prepareTextareaRow = (string) => {\n    const splitText = string.split('\\n').map((row) => `${row}\\n`);\n    const textArr = splitText.map((row) => {\n      if (row.length <= this.maxRowLength) return row;\n      const arr = [];\n      let restString = row;\n      while (restString.length > this.maxRowLength) {\n        const isFull = this.maxRowLength === 77 ? restString.match(/.{1,77}/g) : false;\n        const isDesctop = this.maxRowLength === 60 ? restString.match(/.{1,60}/g) : false;\n        const isTablet = this.maxRowLength === 52 ? restString.match(/.{1,52}/g) : restString.match(/.{1,30}/g);\n        const rows = isFull || isDesctop || isTablet;\n        const lastSpaceIndex = rows[0].lastIndexOf(' ');\n        if (lastSpaceIndex !== -1) {\n          arr.push(restString.slice(0, lastSpaceIndex + 1));\n          restString = string.slice(lastSpaceIndex + 1);\n        } else {\n          arr.push(rows[0].slice(0, -1));\n          restString = string.slice(this.maxRowLength - 1);\n        }\n      }\n      arr.push(restString);\n      return arr;\n    });\n    return textArr.flat();\n  };\n\n  addSymbol(symbol) {\n    const { number } = this.cursor;\n    if (number === this.textareaContent.length) {\n      const newTextareaContent = this.textareaContent + symbol;\n      this.textareaContent = newTextareaContent;\n      this.textareaRow = this.prepareTextareaRow(this.textareaContent);\n      const cursorPosition = this.findCursorPosition(number + symbol.length);\n      this.cursor = {\n        number: number + symbol.length,\n        ...cursorPosition,\n      };\n    } else {\n      this.textareaContent = this.textareaContent.slice(0, number)\n        + symbol + this.textareaContent.slice(number);\n      this.textareaRow = this.prepareTextareaRow(this.textareaContent);\n      const cursorPosition = this.findCursorPosition(number + symbol.length);\n      this.cursor = {\n        number: number + symbol.length,\n        ...cursorPosition,\n      };\n    }\n  }\n\n  setCursorPosition = (number) => {\n    this.cursor = {\n      number,\n      ...this.findCursorPosition(number),\n    };\n  };\n\n  findCursorPosition = (number) => {\n    let sumOfRowsLengths = 0;\n    const position = {};\n    for (let i = 0; i < this.textareaRow.length; i += 1) {\n      if (number - sumOfRowsLengths < this.textareaRow[i].length) {\n        position.line = i;\n        position.pos = number - sumOfRowsLengths;\n        break;\n      }\n      sumOfRowsLengths += this.textareaRow[i].length;\n    }\n    return position;\n  };\n\n  deleteSymbol = (direction) => {\n    const { line, pos, number } = this.cursor;\n    if (number === this.textareaContent.length) {\n      if (direction === 'prev') {\n        const newTextareaContent = this.textareaContent.slice(0, -1);\n        this.textareaContent = newTextareaContent;\n        this.textareaRow = this.prepareTextareaRow(this.textareaContent);\n        this.cursor = {\n          number: (this.textareaContent.length),\n          line: (this.textareaRow.length - 1),\n          pos: (this.textareaRow[this.textareaRow.length - 1].length),\n        };\n      }\n    } else if (direction === 'prev') {\n      if (number !== 0) {\n        this.textareaContent = this.textareaContent.slice(0, number - 1)\n          + this.textareaContent.slice(number);\n        this.textareaRow = this.prepareTextareaRow(this.textareaContent);\n        const cursorPosition = this.findCursorPosition(number - 1);\n        this.cursor = {\n          number: number - 1,\n          ...cursorPosition,\n        };\n      }\n    } else if (number < this.textareaContent.length) {\n      this.textareaContent = this.textareaContent.slice(0, number)\n        + this.textareaContent.slice(number + 1);\n      this.textareaRow = this.prepareTextareaRow(this.textareaContent);\n      this.cursor = {\n        number,\n        line,\n        pos,\n      };\n    }\n  };\n\n  replaceSelect(startSelect, endSelect, part) {\n    const start = Math.min(startSelect, endSelect);\n    const end = Math.max(startSelect, endSelect);\n    this.textareaContent = this.textareaContent.slice(0, start)\n      + part + this.textareaContent.slice(end);\n    this.textareaRow = this.prepareTextareaRow(this.textareaContent);\n\n    const cursorPosition = this.findCursorPosition(start + part.length);\n    this.cursor = {\n      number: start + part.length,\n      ...cursorPosition,\n    };\n  }\n\n  saveSelect = (startSelect, endSelect) => {\n    const start = Math.min(startSelect, endSelect);\n    const end = Math.max(startSelect, endSelect);\n    const copyText = this.textareaContent.slice(start, end);\n    this.buffer.push(copyText);\n  };\n\n  cutSelect = (startSelect, endSelect) => {\n    const start = Math.min(startSelect, endSelect);\n    const end = Math.max(startSelect, endSelect);\n    const cutText = this.textareaContent.slice(start, end);\n    this.buffer.push(cutText);\n    this.textareaContent = this.textareaContent.slice(0, start)\n      + this.textareaContent.slice(end);\n    this.textareaRow = this.prepareTextareaRow(this.textareaContent);\n\n    const cursorPosition = this.findCursorPosition(start);\n    this.cursor = {\n      number: start,\n      ...cursorPosition,\n    };\n  };\n}\n\nexport { Editor };\n","class Command {\n  constructor(controller, editor, onExecute) {\n    this.controller = controller;\n    this.editor = editor;\n    this.backupTextareaContent = '';\n    this.backupCursor = { line: 0, pos: 0, number: 0 };\n    this.textareaRow = [''];\n    this.execute = () => onExecute();\n  }\n\n  saveBackup() {\n    this.backupTextareaContent = this.editor.textareaContent;\n    this.backupCursor = this.editor.cursor;\n    this.textareaRow = this.editor.textareaRow;\n  }\n\n  undo() {\n    this.editor = this.backupTextareaContent;\n  }\n}\n\nexport { Command };\n","import { Command } from './Command';\n\nclass Add extends Command {\n  constructor(controller, editor) {\n    super(controller, editor, () => {\n      editor.addSymbol(controller.newSymbol);\n      this.saveBackup();\n      return true;\n    });\n  }\n}\n\nexport { Add };\n","import { Command } from './Command';\n\nclass Delete extends Command {\n  constructor(controller, editor) {\n    super(controller, editor, () => {\n      editor.deleteSymbol(controller.deleteDirection);\n      this.saveBackup();\n      return true;\n    });\n  }\n}\n\nexport { Delete };\n","class History {\n  constructor(initialData) {\n    this.history = [initialData];\n    this.activeCommandIndex = 0;\n  }\n\n  save(command) {\n    this.activeCommandIndex += 1;\n    if (this.history.length > this.activeCommandIndex) {\n      this.history = this.history.slice(0, this.activeCommandIndex);\n    }\n    this.history[this.activeCommandIndex] = command;\n  }\n\n  back() {\n    if (this.activeCommandIndex === 0) return false;\n    this.activeCommandIndex -= 1;\n    return this.history[this.activeCommandIndex];\n  }\n\n  next() {\n    if (this.activeCommandIndex + 1 === this.history.length) return false;\n    this.activeCommandIndex += 1;\n    return this.history[this.activeCommandIndex];\n  }\n}\n\nexport { History };\n","import { Command } from './Command';\n\nclass Copy extends Command {\n  constructor(controller, editor) {\n    super(controller, editor, () => {\n      editor.saveSelect(\n        controller.selectedTextRange.start,\n        controller.selectedTextRange.end,\n      );\n      return false;\n    });\n  }\n}\n\nexport { Copy };\n","import { Command } from './Command';\n\nclass Replace extends Command {\n  constructor(controller, editor) {\n    super(controller, editor, () => {\n      editor.replaceSelect(\n        controller.selectedTextRange.start,\n        controller.selectedTextRange.end,\n        controller.newSymbol,\n      );\n      this.saveBackup();\n      return true;\n    });\n  }\n}\n\nexport { Replace };\n","import { Command } from './Command';\n\nclass Cut extends Command {\n  constructor(controller, editor) {\n    super(controller, editor, () => {\n      editor.cutSelect(\n        controller.selectedTextRange.start,\n        controller.selectedTextRange.end,\n      );\n      this.saveBackup();\n      return true;\n    });\n  }\n}\n\nexport { Cut };\n","import { Command } from './Command';\n\nclass Paste extends Command {\n  constructor(controller, editor) {\n    super(controller, editor, () => {\n      editor.addSymbol(controller.newSymbol);\n      this.saveBackup();\n      return true;\n    });\n  }\n}\n\nexport { Paste };\n","class LocalStorageData {\n  constructor({\n    lang = 'en',\n    textareaContent = '',\n    textareaRow = [''],\n    cursor = { number: 0, line: 0, pos: 0 },\n  }) {\n    this.lang = lang;\n    this.textareaContent = textareaContent;\n    this.textareaRow = textareaRow;\n    this.cursor = cursor;\n  }\n\n  static toJson(data) {\n    return JSON.stringify(data);\n  }\n\n  static instanceOfISourcesLStorage(object, key) {\n    return key in object;\n  }\n\n  static fromJson(data) {\n    const initData = {};\n\n    if (data === null || typeof data !== 'object') {\n      throw new Error('Not object in localstorage');\n    }\n\n    if (this.instanceOfISourcesLStorage(data, 'lang')) {\n      initData.lang = data.lang;\n    }\n\n    if (this.instanceOfISourcesLStorage(data, 'textareaContent')) {\n      initData.textareaContent = data.textareaContent;\n    }\n\n    if (this.instanceOfISourcesLStorage(data, 'textareaRow')) {\n      initData.textareaRow = data.textareaRow;\n    }\n\n    if (this.instanceOfISourcesLStorage(data, 'cursor')) {\n      initData.cursor = data.cursor;\n    }\n\n    return new LocalStorageData(initData);\n  }\n}\n\nexport { LocalStorageData };\n","import { Editor } from './Editor';\nimport { Add } from './command/Add';\nimport { Delete } from './command/Delete';\nimport { History } from './EditHistory';\nimport { Copy } from './command/Copy';\nimport { Replace } from './command/Replace';\nimport { Cut } from './command/Cut';\nimport { Paste } from './command/Paste';\nimport { LocalStorageData } from './LocalStorage';\n\nclass Controller {\n  constructor(store) {\n    this.store = store;\n    this.editor = new Editor();\n\n    this.history = new History({\n      backupTextareaContent: '',\n      backupCursor: { line: 0, pos: 0, number: 0 },\n      backupTextareaRow: [''],\n    });\n    this.localStorageData = this.getLocalStorageData();\n    const isFull = window.innerWidth >= 1080 ? 77 : false;\n    const isDesctop = window.innerWidth >= 851 ? 60 : false;\n    const isTablet = window.innerWidth >= 768 ? 52 : 30;\n    this.maxLengthOfTextarea = isFull || isDesctop || isTablet;\n    this.activeBtns = {};\n    this.lastControl = { id: null, time: null };\n    this.activeControls = {};\n    this.lastKey = null;\n    this.newSymbol = null;\n    this.selectedTextRange = null;\n\n    this.store.onChangeLocalStorageData.add((data) => this.toLocalStorageData(data));\n  }\n\n  controlCombinations = [\n    ['Control', 'KeyX'],\n    ['Control', 'KeyC'],\n    ['Control', 'KeyV'],\n    ['Control', 'KeyZ'],\n    ['Control', 'KeyY'],\n    ['Control', 'Shift'],\n  ];\n\n  excludeKey = ['F1', 'F2', 'F3', 'F4', 'F5', 'F6', 'F7', 'F8', 'F9', 'F10', 'F11', 'F12'];\n\n  toLocalStorageData = (dataFromLocalSorage) => {\n    localStorage.setItem('virtual_keyboard_by_Mi', LocalStorageData.toJson(dataFromLocalSorage));\n  };\n\n  getLocalStorageData = () => {\n    try {\n      const data = LocalStorageData.fromJson(JSON.parse(localStorage.getItem('virtual_keyboard_by_Mi') || ''));\n      return data;\n    } catch (e) {\n      return new LocalStorageData({\n        lang: 'en',\n        textareaContent: '',\n        textareaRow: [''],\n        cursor: { number: 0, line: 0, pos: 0 },\n      });\n    }\n  };\n\n  hasActiveShift = () => {\n    const activeKeys = Object.keys(this.activeControls)\n      .filter((i) => this.activeControls[i] !== 0);\n    return activeKeys.length === 1 && (activeKeys.includes('ShiftLeft') || activeKeys.includes('ShiftRight'));\n  };\n\n  symbol = (code, { value, value_shift: shiftValue }) => {\n    let symbol = '';\n    if (code.includes('Key')) {\n      symbol = (\n        (this.hasActiveShift() && !this.store.capsLock)\n        || (!this.hasActiveShift() && this.store.capsLock)\n      ) ? shiftValue : value;\n    } else symbol = this.hasActiveShift() ? shiftValue : value;\n    this.resetControls();\n\n    this.add(symbol);\n  };\n\n  delete = (code) => {\n    this.deleteDirection = code === 'Backspace' ? 'prev' : 'next';\n    this.editor.textareaContent = this.store.textareaContent;\n    this.editor.textareaRow = this.store.textareaRow;\n    this.editor.cursor = this.store.cursor;\n    this.editor.maxRowLength = this.store.maxLengthOfTextarea;\n    this.executeCommand(new Delete(this, this.editor));\n    this.store.textareaContent = this.editor.textareaContent;\n    this.store.textareaRow = this.editor.textareaRow;\n    this.store.cursor = this.editor.cursor;\n    this.deleteDirection = null;\n  };\n\n  space = (code, { value }) => {\n    this.add(value);\n  };\n\n  capsLock = () => {\n    const caps = this.store.capsLock;\n    this.store.capsLock = !caps;\n  };\n\n  moveCursor = (code) => {\n    const direction = code.slice(5).toLowerCase();\n    if (this.isSelectedText) {\n      const start = Math.min(this.selectedTextRange.start, this.selectedTextRange.end);\n      const end = Math.max(this.selectedTextRange.start, this.selectedTextRange.end);\n\n      this.editor.textareaContent = this.store.textareaContent;\n      this.editor.textareaRow = this.store.textareaRow;\n      this.editor.cursor = this.store.cursor;\n      this.editor.maxRowLength = this.store.maxLengthOfTextarea;\n      this.editor.setCursorPosition(\n        (direction === 'left' || direction === 'up')\n          ? start : end,\n      );\n      this.store.cursor = this.editor.cursor;\n      this.isSelectedText = false;\n      this.isCopiedText = false;\n      this.selectedTextRange = null;\n      if (direction === 'left' || direction === 'right') return true;\n    }\n\n    this.cursorHandler[direction]();\n    return true;\n  };\n\n  add = (symbol) => {\n    this.newSymbol = symbol;\n\n    if (this.isSelectedText) {\n      this.editor.textareaContent = this.store.textareaContent;\n      this.editor.textareaRow = this.store.textareaRow;\n      this.editor.cursor = this.store.cursor;\n      this.editor.maxRowLength = this.store.maxLengthOfTextarea;\n      this.executeCommand(new Replace(this, this.editor));\n      this.store.textareaContent = this.editor.textareaContent;\n      this.store.textareaRow = this.editor.textareaRow;\n      this.store.cursor = this.editor.cursor;\n      this.isSelectedText = false;\n      this.isCopiedText = false;\n      this.selectedTextRange = null;\n      this.newSymbol = '';\n      return;\n    }\n\n    this.editor.textareaContent = this.store.textareaContent;\n    this.editor.textareaRow = this.store.textareaRow;\n    this.editor.cursor = this.store.cursor;\n    this.editor.maxRowLength = this.store.maxLengthOfTextarea;\n    this.executeCommand(new Add(this, this.editor));\n    this.store.textareaContent = this.editor.textareaContent;\n    this.store.textareaRow = this.editor.textareaRow;\n    this.store.cursor = this.editor.cursor;\n    this.newSymbol = '';\n  };\n\n  mouseDown = (code, time) => {\n    const lang = this.store.lang[this.store.langIndex];\n    const key = this.store.getKeyContent(code);\n    const { type } = key;\n\n    if (type === 'control') {\n      if ((this.lastControl.id && this.lastControl.id === code)\n        && (this.lastControl.time && ((time - this.lastControl.time) < 300))) {\n        this.activeControls[code] = 1;\n        this.activeBtns[code] = 1;\n        this.lastKey = code;\n      } else if (!this.hasControls()) {\n        this.lastControl = { id: code, time };\n        this.activeBtns[code] = 1;\n        this.lastKey = code;\n      } else if (this.activeControls[code]) {\n        this.activeControls[code] = 0;\n        this.activeBtns[code] = 1;\n        this.lastKey = code;\n        this.lastControl = { id: null, time: null };\n      } else if (!this.hasControlCombination(code)) {\n        this.activeControls[code] = 0;\n        this.activeBtns[code] = 1;\n        this.lastKey = code;\n        this.lastControl = { id: code, time };\n      } else {\n        this.resetControls();\n        this.lastControl = { id: null, time: null };\n        this.activeBtns[code] = 1;\n        this.lastKey = code;\n      }\n    } else if (this.hasControls()) {\n      if (this.hasControlCombination(code)) {\n        this.resetControls();\n        this.lastControl = { id: null, time: null };\n        this.lastKey = code;\n        this.activeBtns[code] = 1;\n      } else {\n        if (type === 'meta' || !this.editMap[type]);\n        else this.editMap[type](code, key[lang]);\n        this.resetControls();\n        this.lastControl = { id: null, time: null };\n        this.lastKey = code;\n        this.activeBtns[code] = 1;\n      }\n    } else {\n      this.lastControl = { id: null, time: null };\n      this.lastKey = code;\n      this.activeBtns[code] = 1;\n      if (type === 'meta' || !this.editMap[type]);\n      else this.editMap[type](code, key[lang]);\n    }\n    this.store.activeBtns = this.activeBtns;\n  };\n\n  mouseUp = (code) => {\n    this.activeBtns = this.store.activeBtns;\n    if (this.lastKey === code) {\n      if (this.hasControls()) {\n        if (this.activeControls[code] === 0) this.activeBtns[code] = 0;\n        this.lastKey = null;\n      } else {\n        const arr = Object.keys(this.activeBtns);\n        for (let i = 0; i < arr.length; i += 1) {\n          this.activeBtns[arr[i]] = 0;\n        }\n      }\n    } else if (this.lastKey !== null) {\n      if (this.hasControls()) {\n        if (this.activeControls[this.lastKey] === 0) this.activeBtns[this.lastKey] = 0;\n        this.lastKey = null;\n      } else {\n        const arr = Object.keys(this.activeBtns);\n        for (let i = 0; i < arr.length; i += 1) {\n          this.activeBtns[arr[i]] = 0;\n        }\n      }\n    }\n    this.store.activeBtns = this.activeBtns;\n  };\n\n  resetControls = () => { this.activeControls = {}; };\n\n  hasControlCombination(code) {\n    const controlsKeys = Object.keys(this.activeControls)\n      .filter((i) => (this.activeControls[i] !== 0));\n    controlsKeys.push(code);\n    const activeControlsKeys = controlsKeys\n      .map((i) => {\n        if (i === 'ShiftLeft' || i === 'ShiftRight') return 'Shift';\n        if (i === 'AltLeft' || i === 'AltRight') return 'Alt';\n        if (i === 'ControlLeft' || i === 'ControlRight') return 'Control';\n        return i;\n      });\n    for (let i = 0; i < this.controlCombinations.length; i += 1) {\n      if (this.controlCombinations[i].every((l) => (activeControlsKeys.includes(l)))) {\n        if (this.controlCombinations[i].join('') === 'ControlShift') {\n          this.store.langIndex = (this.store.langIndex + 1) % this.store.lang.length;\n        }\n        if (this.controlCombinations[i].join('') === 'ControlKeyZ') {\n          if (this.isSelectedText) {\n            this.isSelectedText = false;\n            this.isCopiedText = false;\n            this.selectedTextRange = null;\n          }\n\n          const backCommand = this.history.back();\n          if (backCommand) {\n            this.store.textareaContent = backCommand.backupTextareaContent;\n            this.store.cursor = backCommand.backupCursor;\n            this.store.textareaRow = backCommand.textareaRow;\n          }\n        }\n        if (this.controlCombinations[i].join('') === 'ControlKeyY') {\n          if (this.isSelectedText) {\n            this.isSelectedText = false;\n            this.isCopiedText = false;\n            this.selectedTextRange = null;\n          }\n\n          const backCommand = this.history.next();\n          if (backCommand) {\n            this.store.textareaContent = backCommand.backupTextareaContent;\n            this.store.cursor = backCommand.backupCursor;\n            this.store.textareaRow = backCommand.textareaRow;\n          }\n        }\n        if (this.controlCombinations[i].join('') === 'ControlKeyX' && this.isSelectedText) {\n          this.editor.textareaContent = this.store.textareaContent;\n          this.editor.selectPosition = this.selectedTextRange;\n          this.editor.maxRowLength = this.store.maxLengthOfTextarea;\n          this.executeCommand(new Cut(this, this.editor));\n          this.store.textareaContent = this.editor.textareaContent;\n          this.store.textareaRow = this.editor.textareaRow;\n          this.store.cursor = this.editor.cursor;\n\n          this.isSelectedText = false;\n          this.isCopiedText = false;\n          this.selectedTextRange = null;\n        }\n        if (this.controlCombinations[i].join('') === 'ControlKeyV') {\n          this.newSymbol = this.editor.buffer.getLast();\n          if (this.newSymbol === '') return true;\n          this.editor.textareaContent = this.store.textareaContent;\n          this.editor.textareaRow = this.store.textareaRow;\n          this.editor.cursor = this.store.cursor;\n          this.editor.maxRowLength = this.store.maxLengthOfTextarea;\n\n          if (this.isSelectedText) {\n            this.executeCommand(new Replace(this, this.editor));\n            this.store.textareaContent = this.editor.textareaContent;\n            this.store.textareaRow = this.editor.textareaRow;\n            this.store.cursor = this.editor.cursor;\n            this.isSelectedText = false;\n            this.isCopiedText = false;\n            this.selectedTextRange = null;\n            return true;\n          }\n\n          this.executeCommand(new Paste(this, this.editor));\n          this.store.textareaContent = this.editor.textareaContent;\n          this.store.textareaRow = this.editor.textareaRow;\n          this.store.cursor = this.editor.cursor;\n\n          this.isSelectedText = false;\n          this.isCopiedText = false;\n          this.selectedTextRange = null;\n          this.newSymbol = '';\n        }\n        if (this.controlCombinations[i].join('') === 'ControlKeyC' && this.isSelectedText) {\n          this.editor.textareaContent = this.store.textareaContent;\n          this.executeCommand(new Copy(this, this.editor));\n          this.isCopiedText = true;\n        }\n        return true;\n      }\n    }\n    return false;\n  }\n\n  hasControls = () => Object.keys(this.activeControls)\n    .filter((i) => this.activeControls[i] !== 0).length !== 0;\n\n  keyDown = (code) => {\n    if (this.excludeKey.includes(code)) return;\n    const lang = this.store.lang[this.store.langIndex];\n    const key = this.store.getKeyContent(code);\n    if (!key) {\n      if (this.isSelectedText) {\n        this.isSelectedText = false;\n        this.isCopiedText = false;\n        this.editor.maxRowLength = this.store.maxLengthOfTextarea;\n        this.setCursorFromTextarea(this.selectedTextRange.end);\n        this.store.cursor = this.editor.cursor;\n        this.selectedTextRange = null;\n        this.isSelectedText = false;\n        this.isCopiedText = false;\n      }\n      return;\n    }\n    const { type } = key;\n\n    this.activeBtns = this.store.activeBtns;\n    if (type === 'control') {\n      if (!this.hasControls()) {\n        this.activeControls[code] = 1;\n        this.activeBtns[code] = 1;\n      }\n      if (this.hasControls()) {\n        if (this.activeControls[code]) {\n          this.activeBtns[code] = 1;\n        } else if (!this.hasControlCombination(code)) {\n          this.activeControls[code] = 1;\n          this.activeBtns[code] = 1;\n        } else {\n          this.activeBtns[code] = 1;\n        }\n      }\n    } else if (this.hasControls()) {\n      if (this.hasControlCombination(code)) {\n        this.activeBtns[code] = 1;\n      } else {\n        if (type === 'meta' || !this.editMap[type]) {\n          if (this.isSelectedText) {\n            this.isSelectedText = false;\n            this.isCopiedText = false;\n            this.editor.maxRowLength = this.store.maxLengthOfTextarea;\n            this.setCursorFromTextarea(this.selectedTextRange.end);\n            this.store.cursor = this.editor.cursor;\n            this.selectedTextRange = null;\n            this.isSelectedText = false;\n            this.isCopiedText = false;\n          }\n        } else this.editMap[type](code, key[lang]);\n        this.activeBtns[code] = 1;\n      }\n    } else {\n      this.activeBtns[code] = 1;\n      if (type === 'meta' || !this.editMap[type]) {\n        if (this.isSelectedText) {\n          this.isSelectedText = false;\n          this.isCopiedText = false;\n          this.editor.maxRowLength = this.store.maxLengthOfTextarea;\n          this.setCursorFromTextarea(this.selectedTextRange.end);\n          this.store.cursor = this.editor.cursor;\n          this.selectedTextRange = null;\n          this.isSelectedText = false;\n          this.isCopiedText = false;\n        }\n      } else this.editMap[type](code, key[lang]);\n    }\n    this.store.activeBtns = this.activeBtns;\n  };\n\n  keyUp = (code) => {\n    if (this.excludeKey.includes(code)) return;\n\n    const key = this.store.getKeyContent(code);\n    if (!key) {\n      if (this.isSelectedText) {\n        this.isSelectedText = false;\n        this.isCopiedText = false;\n        this.editor.maxRowLength = this.store.maxLengthOfTextarea;\n        this.setCursorFromTextarea(this.selectedTextRange.end);\n        this.store.cursor = this.editor.cursor;\n        this.selectedTextRange = null;\n        this.isSelectedText = false;\n        this.isCopiedText = false;\n      }\n      return;\n    }\n\n    this.activeBtns = this.store.activeBtns;\n    if (this.hasControls()) {\n      this.activeBtns[code] = 0;\n      if (this.activeControls[code] === 1) {\n        this.activeControls[code] = 0;\n      }\n    } else {\n      if (this.activeControls[code] === 1) this.activeControls[code] = 0;\n      const arr = Object.keys(this.activeBtns);\n      for (let i = 0; i < arr.length; i += 1) {\n        this.activeBtns[arr[i]] = 0;\n      }\n    }\n    this.store.activeBtns = this.activeBtns;\n  };\n\n  upCursor = () => {\n    const { line, pos } = this.store.cursor;\n    const textareaRow = [...this.store.textareaRow];\n    if (line !== 0) {\n      const newLine = line - 1;\n      let newNumber = 0;\n\n      if (newLine > 0) {\n        for (let i = 0; i < newLine; i += 1) {\n          newNumber += textareaRow[i].length;\n        }\n      }\n\n      if (textareaRow[newLine].length > pos) {\n        newNumber += pos;\n        this.store.cursor = {\n          number: newNumber,\n          line: newLine,\n          pos,\n        };\n      } else {\n        newNumber += textareaRow[newLine].length - 1;\n        this.store.cursor = {\n          number: newNumber,\n          line: newLine,\n          pos: textareaRow[newLine].length - 1,\n        };\n      }\n    }\n  };\n\n  downCursor = () => {\n    const { line, pos } = this.store.cursor;\n    const textareaRow = [...this.store.textareaRow];\n\n    if (line !== textareaRow.length - 1) {\n      const newLine = line + 1;\n      let newNumber = 0;\n      for (let i = 0; i < newLine; i += 1) {\n        newNumber += textareaRow[i].length;\n      }\n      if (textareaRow[newLine].length > pos) {\n        newNumber += pos;\n        this.store.cursor = {\n          number: newNumber,\n          line: newLine,\n          pos,\n        };\n      } else {\n        newNumber += textareaRow[newLine].length - 1;\n        const newPos = textareaRow[newLine].length - 1;\n        this.store.cursor = {\n          number: newNumber,\n          line: newLine,\n          pos: newPos,\n        };\n      }\n    }\n  };\n\n  leftCursor = () => {\n    const { line, pos, number } = this.store.cursor;\n    const textareaRow = [...this.store.textareaRow];\n    if (pos === 0 && line === 0) return;\n    if (pos - 1 === 0) {\n      let newNumber = 0;\n      if (line !== 0) {\n        for (let i = 0; i < line; i += 1) {\n          newNumber += textareaRow[i].length;\n        }\n      }\n      this.store.cursor = {\n        number: newNumber,\n        line,\n        pos: 0,\n      };\n    } else if (pos === 0) {\n      let newNumber = 0;\n      const newLine = line - 1;\n      for (let i = 0; i < line; i += 1) {\n        newNumber += textareaRow[i].length;\n      }\n      this.store.cursor = {\n        number: newNumber - 1,\n        line: newLine,\n        pos: textareaRow[newLine].length - 1,\n      };\n    } else {\n      const newNumber = number - 1;\n      const newPos = pos - 1;\n      this.store.cursor = {\n        number: newNumber,\n        line,\n        pos: newPos,\n      };\n    }\n  };\n\n  rightCursor = () => {\n    const { line, pos, number } = this.store.cursor;\n    const textareaRow = { ...this.store.textareaRow };\n\n    if (number === this.store.textareaContent.length) return;\n    if (pos + 1 === textareaRow[line].length) {\n      this.store.cursor = {\n        number: number + 1,\n        line: line + 1,\n        pos: 0,\n      };\n    } else {\n      this.store.cursor = {\n        number: number + 1,\n        line,\n        pos: pos + 1,\n      };\n    }\n  };\n\n  setCursorFromTextarea = (number) => {\n    this.editor.textareaContent = this.store.textareaContent;\n    this.editor.textareaRow = this.store.textareaRow;\n    this.editor.cursor = this.store.cursor;\n    this.editor.maxRowLength = this.store.maxLengthOfTextarea;\n    this.editor.setCursorPosition(number);\n    this.store.cursor = this.editor.cursor;\n    if (this.isSelectedText) {\n      this.selectedTextRange = null;\n      this.isSelectedText = false;\n      this.isCopiedText = false;\n    }\n  };\n\n  selectTextRange = (start, end) => {\n    if (this.selectedTextRange) this.selectedTextRange = null;\n    this.selectedTextRange = { start, end };\n    this.isSelectedText = true;\n  };\n\n  editMap = {\n    symbol: this.symbol,\n    delete: this.delete,\n    move: this.moveCursor,\n    capslock: this.capsLock,\n    space: this.space,\n  };\n\n  textareaHandler = {\n    setCursorPosition: this.setCursorFromTextarea,\n    selectTextRange: this.selectTextRange,\n  };\n\n  cursorHandler = {\n    up: this.upCursor,\n    down: this.downCursor,\n    left: this.leftCursor,\n    right: this.rightCursor,\n  };\n\n  keyHandler = {\n    mouseDown: this.mouseDown,\n    mouseUp: this.mouseUp,\n  };\n\n  boardHandler = {\n    keyHandler: this.keyHandler,\n  };\n\n  onResize = (maxLengthOfTextarea) => {\n    if (this.maxLengthOfTextarea === maxLengthOfTextarea) return;\n    this.maxLengthOfTextarea = maxLengthOfTextarea;\n    this.store.maxLengthOfTextarea = maxLengthOfTextarea;\n    this.editor.textareaContent = this.store.textareaContent;\n    this.editor.maxRowLength = this.store.maxLengthOfTextarea;\n    this.store.textareaRow = this.editor.prepareTextareaRow(this.store.textareaContent);\n    this.editor.textareaRow = this.store.textareaRow;\n    this.editor.setCursorPosition(this.store.cursor.number);\n    this.store.cursor = this.editor.cursor;\n    if (this.isSelectedText) {\n      this.selectedTextRange = null;\n      this.isSelectedText = false;\n      this.isCopiedText = false;\n    }\n  };\n\n  initKeyboard = (data) => {\n    const keys = {};\n    data.forEach((key) => {\n      keys[`${key.code}`] = {\n        ...key,\n      };\n    });\n    const langIndexInStore = this.store.lang.indexOf(this.localStorageData.lang);\n    this.store.setInitState({\n      keys,\n      langIndex: langIndexInStore > -1 ? langIndexInStore : 0,\n      maxLengthOfTextarea: this.maxLengthOfTextarea,\n    });\n  };\n\n  executeCommand(command) {\n    if (command.execute()) {\n      this.history.save(command);\n    }\n  }\n\n  setActiveKey = () => {\n    Object.keys(this.activeBtns).forEach((btn) => {\n      if (this.activeBtns[btn] === 0) {\n        delete this.activeBtns[btn];\n      }\n    });\n    this.store.activeBtns = this.activeBtns;\n  };\n}\n\nexport { Controller };\n","class Element {\n  constructor({\n    parent = null,\n    tagName = 'div',\n    className = '',\n    content = '',\n  }) {\n    const element = document.createElement(tagName);\n    element.classList = className;\n    element.innerHTML = content;\n    if (parent) parent.append(element);\n    this.node = element;\n  }\n\n  destroy() {\n    this.node.remove();\n  }\n}\n\nexport { Element };\n","import { Element } from './helper/element';\n\nclass Header extends Element {\n  constructor({\n    parent,\n    className,\n    lang,\n    controller,\n  }) {\n    super({\n      parent,\n      tagName: 'header',\n      className: `${className}__header header`,\n    });\n    this.controller = controller;\n    this.activeLang = lang;\n    this.container = new Element({\n      parent: this.node,\n      className: 'header__container container',\n    });\n    this.lang = new Element({\n      parent: this.container.node,\n      className: 'header__lang lang',\n      content: this.activeLang,\n    });\n    this.description = new Element({\n      parent: this.container.node,\n      className: 'header__description description',\n      content: `\n        <span>Virtual Keyboard реализована для Window OS</span>\n        <span>Для зажатия контрольной кнопки используйте двойной клик</span>\n      `,\n    });\n  }\n\n  onChangeLang = (lang) => {\n    this.activeLang = lang;\n    this.lang.node.textContent = this.activeLang;\n  };\n}\n\nexport { Header };\n","import { Element } from './helper/element';\n\nclass Textarea extends Element {\n  constructor({\n    parent,\n    className,\n    controller,\n  }) {\n    super({\n      parent,\n      tagName: 'textarea',\n      className: `${className}__textarea textarea`,\n    });\n    this.controller = controller;\n    this.node.addEventListener('keydown', (event) => { event.preventDefault(); });\n    this.node.addEventListener('keyup', (event) => { event.preventDefault(); });\n\n    this.node.focus();\n\n    this.node.onmouseup = () => {\n      if (this.node.selectionEnd === this.node.selectionStart) {\n        this.controller.setCursorPosition(this.node.selectionEnd);\n      } else {\n        this.controller.selectTextRange(this.node.selectionStart, this.node.selectionEnd);\n      }\n    };\n  }\n\n  setContent = (content) => {\n    this.node.textContent = content;\n    this.node.focus();\n  };\n}\n\nexport { Textarea };\n","import { Element } from '../helper/element';\n\nclass Key extends Element {\n  constructor({\n    parent,\n    className,\n    code,\n    content,\n    controller,\n  }) {\n    super({\n      parent,\n      tagName: 'button',\n      className: `${className}__btn btn ${code}`,\n    });\n    this.code = code;\n    this.content = content;\n    this.controller = controller;\n    this.node.tabIndex = '-1';\n    this.beforeContent = new Element({\n      parent: this.node,\n      tagName: 'span',\n      className: 'btn__content btn__content--before',\n    });\n    this.mainContent = new Element({\n      parent: this.node,\n      tagName: 'span',\n      className: 'btn__content btn__content--main',\n    });\n    this.update(this.content);\n    this.node.onmousedown = (event) => {\n      event.preventDefault();\n      this.controller.mouseDown(this.code, event.timeStamp);\n      this.node.onmouseover = (e) => this.node.onmouseup(e);\n    };\n    this.node.onmouseup = (event) => {\n      this.controller.mouseUp(this.code, event.timeStamp);\n      this.node.onmouseover = null;\n    };\n  }\n\n  update = (content) => {\n    if (this.content !== content) this.content = content;\n    [this.mainContent.node.textContent] = this.content;\n    this.beforeContent.node.textContent = `${this.content.length === 2 ? this.content[1] : ''}`;\n  };\n}\n\nexport { Key };\n","import { Key } from './Key';\n\nclass KeyAlt extends Key {\n  constructor({\n    parent,\n    className,\n    code,\n    content,\n    controller,\n  }) {\n    super({\n      parent,\n      className,\n      code,\n      content,\n      controller,\n    });\n  }\n}\n\nexport { KeyAlt };\n","import { Key } from './Key';\n\nclass KeyArrow extends Key {\n  constructor({\n    parent,\n    className,\n    code,\n    content,\n    controller,\n  }) {\n    super({\n      parent,\n      className,\n      code,\n      content,\n      controller,\n    });\n  }\n}\n\nexport { KeyArrow };\n","import { Key } from './Key';\n\nclass KeyCapsLook extends Key {\n  constructor({\n    parent,\n    className,\n    code,\n    content,\n    controller,\n  }) {\n    super({\n      parent,\n      className,\n      code,\n      content,\n      controller,\n    });\n  }\n}\n\nexport { KeyCapsLook };\n","import { Key } from './Key';\n\nclass KeyControl extends Key {\n  constructor({\n    parent,\n    className,\n    code,\n    content,\n    controller,\n  }) {\n    super({\n      parent,\n      className,\n      code,\n      content,\n      controller,\n    });\n  }\n}\n\nexport { KeyControl };\n","import { Key } from './Key';\n\nclass KeyMeta extends Key {\n  constructor({\n    parent,\n    className,\n    code,\n    content,\n    controller,\n  }) {\n    super({\n      parent,\n      className,\n      code,\n      content,\n      controller,\n    });\n  }\n}\n\nexport { KeyMeta };\n","import { Key } from './Key';\n\nclass KeyShift extends Key {\n  constructor({\n    parent,\n    className,\n    code,\n    content,\n    controller,\n  }) {\n    super({\n      parent,\n      className,\n      code,\n      content,\n      controller,\n    });\n  }\n}\n\nexport { KeyShift };\n","import { Element } from './helper/element';\nimport { Key } from './key/Key';\nimport { KeyAlt } from './key/KeyAlt';\nimport { KeyArrow } from './key/KeyArrow';\nimport { KeyCapsLook } from './key/KeyCapsLook';\nimport { KeyControl } from './key/KeyControl';\nimport { KeyMeta } from './key/KeyMeta';\nimport { KeyShift } from './key/KeyShift';\n\nconst KeyMap = {\n  ShiftLeft: KeyShift,\n  ShiftRight: KeyShift,\n  ControlLeft: KeyControl,\n  ControlRight: KeyControl,\n  MetaLeft: KeyMeta,\n  AltLeft: KeyAlt,\n  AltRight: KeyAlt,\n  ArrowLeft: KeyArrow,\n  ArrowRight: KeyArrow,\n  CapsLook: KeyCapsLook,\n};\n\nclass Board extends Element {\n  constructor({\n    parent,\n    className,\n    lang,\n    controller,\n  }) {\n    super({\n      parent, className: `${className}__board board`,\n    });\n    this.lang = lang;\n    this.controller = controller;\n    this.rows = {};\n    this.keys = {};\n    this.btns = {};\n    for (let i = 0; i < 5; i += 1) {\n      this.rows[i] = new Element({\n        parent: this.node,\n        className: 'board__row row',\n      });\n    }\n  }\n\n  onChangeActiveBtns = (activeBtnsMap) => {\n    Object.keys(this.btns).forEach((code) => {\n      if (this.btns[code].node.classList.contains('active')) this.btns[code].node.classList.remove('active');\n    });\n    Object.keys(activeBtnsMap).forEach((code) => {\n      if (activeBtnsMap[code]) this.btns[code].node.classList.add('active');\n    });\n  };\n\n  onChangeLang = (lang) => {\n    this.lang = lang;\n    Object.keys(this.btns).forEach((code) => {\n      this.btns[code].update(this.keys[code][`${this.lang}`].name);\n    });\n  };\n\n  init = ({ keys, lang }) => {\n    this.lang = lang;\n    this.keys = keys;\n    Object.keys(this.keys).forEach((key) => {\n      const keyData = this.keys[key];\n      const { row, code } = keyData;\n      const KeyConstructor = KeyMap[code] || Key;\n      this.btns[code] = new KeyConstructor({\n        parent: this.rows[row - 1].node,\n        className: 'board',\n        code,\n        content: keyData[`${this.lang}`].name,\n        controller: this.controller.keyHandler,\n      });\n    });\n  };\n}\n\nexport { Board };\n","import { Element } from './helper/element';\nimport { Textarea } from './Textarea';\nimport { Board } from './Board';\n\nclass Main extends Element {\n  constructor({ parent, className, controller }) {\n    super({\n      parent,\n      tagName: 'main',\n      className: `${className}__main main`,\n    });\n    this.controller = controller;\n    this.container = new Element({\n      parent: this.node,\n      className: 'main__container container',\n    });\n    this.textarea = new Textarea({\n      parent: this.container.node,\n      className,\n      controller: controller.textareaHandler,\n    });\n    this.board = new Board({\n      parent: this.container.node,\n      className,\n      lang: 'en',\n      controller: this.controller.boardHandler,\n    });\n  }\n\n  setFocusOnTextarea = () => this.textarea.node.focus();\n\n  init = (keys) => {\n    this.board.init(keys);\n  };\n\n  onChangeActiveBtns = (activeBtnsMap) => this.board.onChangeActiveBtns(activeBtnsMap);\n\n  onChangeLang = (lang) => {\n    this.board.onChangeLang(lang);\n  };\n\n  onChangeTextareaContent = (content) => {\n    this.textarea.setContent(content);\n  };\n\n  onChangeCursorPosition = ({ start, end }) => {\n    this.textarea.node.setSelectionRange(start, end);\n  };\n\n  onInitState = ({ keys, lang }) => {\n    this.board.init({ keys, lang });\n  };\n}\n\nexport { Main };\n","class DataApi {\n  constructor() {\n    this.data = [];\n  }\n\n  getKeysData() {\n    return fetch('./data/keys.json').then((res) => res.json()).then((data) => {\n      if (!Array.isArray(data)) {\n        throw new Error('Data load error');\n      }\n      this.data = data;\n      return this.data;\n    });\n  }\n}\n\nexport { DataApi };\n","import { Header } from './Header';\nimport { Element } from './helper/element';\nimport { Main } from './Main';\nimport { DataApi } from './helper/data-api';\n\nclass View extends Element {\n  constructor({ parent, controller, store }) {\n    super({ parent, className: 'keyboard' });\n    this.controller = controller;\n    this.store = store;\n    this.node.onresize = () => {\n      const isFull = window.innerWidth >= 1080 ? 77 : false;\n      const isDesctop = window.innerWidth >= 851 ? 60 : false;\n      const isTablet = window.innerWidth >= 768 ? 52 : 30;\n      const maxLengthOfTextarea = isFull || isDesctop || isTablet;\n      this.controller.onResize(maxLengthOfTextarea);\n      this.main.setFocusOnTextarea();\n    };\n\n    this.data = [];\n    this.keys = [];\n    this.header = new Header({\n      parent: this.node,\n      className: 'keyboard',\n      lang: 'en',\n      controller,\n    });\n    this.main = new Main({\n      parent: this.node,\n      className: 'keyboard',\n      controller: this.controller,\n    });\n    document.addEventListener('keydown', (event) => this.controller.keyDown(event.code), true);\n    document.addEventListener('keyup', (event) => this.controller.keyUp(event.code), true);\n    document.addEventListener('click', () => this.main.setFocusOnTextarea());\n\n    this.store.onChangeTextareaContent.add((content) => this.main.onChangeTextareaContent(content));\n    this.store.onChangeLang.add((lang) => {\n      this.header.onChangeLang(lang);\n      this.main.onChangeLang(lang);\n    });\n    this.store.onChangeActiveBtns.add(\n      (activeBtnsMap) => this.main.onChangeActiveBtns(activeBtnsMap),\n    );\n    this.store.onChangeCursorPosition.add(\n      (position) => this.main.onChangeCursorPosition(position),\n    );\n    this.store.onInitState.add(({ keys, lang }) => {\n      this.header.onChangeLang(lang);\n      this.main.onInitState({ keys, lang });\n    });\n  }\n\n  init = () => {\n    const data = new DataApi();\n    data.getKeysData().then((loaded) => {\n      this.data = loaded;\n      this.controller.initKeyboard(this.data);\n    });\n  };\n}\n\nexport { View };\n","import { Store } from './Store';\nimport { Controller } from './Controller';\nimport { View } from './View';\n\nimport '../assets/css/style.scss';\n\nconst Keyboard = (parent) => {\n  const store = new Store();\n  const controller = new Controller(store);\n  const view = new View({\n    parent,\n    controller,\n    store,\n  });\n  view.init();\n};\n\nexport { Keyboard };\n","import { Keyboard } from './component/Keyboard';\n\nconst keyboard = Keyboard(document.body);\nwindow.keyboard = keyboard;\n"],"names":["Signal","_createClass","_this","_classCallCheck","_defineProperty","listener","_listener","push","filter","elem","params","forEach","this","Store","_langIndex","_langMap","_textareaContent","_textareaRow","_cursor","line","pos","number","_keys","_activeBtns","_lastControl","id","time","_activeControls","_lastKey","_capsLock","_maxLengthOfTextarea","key","value","_ref","keys","langIndex","onInitState","emit","lang","get","set","newLength","onChangeLengthOfTextarea","newPosition","onChangeCursorPosition","start","end","textareaRow","content","onChangeTextareaContent","keysMap","onChangeLang","onChangeLocalStorageData","textareaContent","cursor","langMap","code","btnsMap","onChangeActiveBtns","newLastControl","newActiveControls","newLastKey","flag","DataBuffer","buffer","length","string","Editor","split","map","row","concat","maxRowLength","arr","restString","isFull","match","isDesctop","isTablet","rows","lastSpaceIndex","lastIndexOf","slice","flat","_objectSpread","findCursorPosition","sumOfRowsLengths","position","i","direction","_this$cursor","newTextareaContent","prepareTextareaRow","cursorPosition","startSelect","endSelect","Math","min","max","copyText","cutText","selectPosition","symbol","part","Command","controller","editor","onExecute","backupTextareaContent","backupCursor","execute","Add","_Command","_inherits","_super","call","addSymbol","newSymbol","saveBackup","Delete","deleteSymbol","deleteDirection","History","initialData","history","activeCommandIndex","command","Copy","saveSelect","selectedTextRange","Replace","replaceSelect","Cut","cutSelect","Paste","LocalStorageData","_ref$lang","_ref$textareaContent","_ref$textareaRow","_ref$cursor","data","JSON","stringify","object","initData","_typeof","Error","instanceOfISourcesLStorage","Controller","store","dataFromLocalSorage","localStorage","setItem","toJson","fromJson","parse","getItem","e","activeKeys","Object","activeControls","includes","shiftValue","value_shift","hasActiveShift","capsLock","resetControls","add","maxLengthOfTextarea","executeCommand","_ref2","caps","toLowerCase","isSelectedText","setCursorPosition","isCopiedText","cursorHandler","getKeyContent","type","lastControl","activeBtns","lastKey","hasControls","hasControlCombination","editMap","excludeKey","setCursorFromTextarea","_this$store$cursor","_toConsumableArray","newLine","newNumber","_this$store$cursor2","newPos","_this$store$cursor3","_this$store$cursor4","delete","move","moveCursor","capslock","space","selectTextRange","up","upCursor","down","downCursor","left","leftCursor","right","rightCursor","mouseDown","mouseUp","keyHandler","langIndexInStore","indexOf","localStorageData","setInitState","btn","backupTextareaRow","getLocalStorageData","window","innerWidth","toLocalStorageData","_this2","controlsKeys","activeControlsKeys","controlCombinations","every","l","join","backCommand","back","next","getLast","save","Element","_ref$parent","parent","_ref$tagName","tagName","_ref$className","className","_ref$content","element","document","createElement","classList","innerHTML","append","node","remove","Header","_Element","_assertThisInitialized","activeLang","textContent","container","description","Textarea","focus","addEventListener","event","preventDefault","onmouseup","selectionEnd","selectionStart","Key","_this$content","mainContent","beforeContent","tabIndex","update","onmousedown","timeStamp","onmouseover","KeyAlt","_Key","KeyArrow","KeyCapsLook","KeyControl","KeyMeta","KeyShift","KeyMap","ShiftLeft","ShiftRight","ControlLeft","ControlRight","MetaLeft","AltLeft","AltRight","ArrowLeft","ArrowRight","CapsLook","Board","activeBtnsMap","btns","contains","name","keyData","KeyConstructor","Main","textarea","board","init","setContent","setSelectionRange","_ref3","textareaHandler","boardHandler","DataApi","fetch","then","res","json","Array","isArray","View","getKeysData","loaded","initKeyboard","onresize","onResize","main","setFocusOnTextarea","header","keyDown","keyUp","keyboard","body"],"sourceRoot":""}