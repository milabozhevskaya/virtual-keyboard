{"version":3,"file":"index.js","mappings":"k7BAAMA,EAAMC,GACV,SAAAD,IAAc,IAAAE,EAAA,M,4FAAAC,CAAA,KAAAH,GAAAI,EAAA,YAIR,SAACC,GACLH,EAAKI,UAAUC,KAAKF,EACtB,IAACD,EAAA,eAEQ,SAACI,GACRN,EAAKI,UAAYJ,EAAKI,UAAUG,QAAO,SAAAC,GAAI,OAAIA,IAASL,QAAQ,GAClE,IAACD,EAAA,aAEM,SAACO,GACNT,EAAKI,UAAUM,SAAQ,SAAAP,GAAQ,OAAIA,EAASM,EAAO,GACrD,IAbEE,KAAKP,UAAY,EACnB,I,+yBCHuC,IAEnCQ,EAAK,WACT,SAAAA,K,4FAAcX,CAAA,KAAAW,GAAAV,EAAA,gCAuJa,IAAIJ,GAAQI,EAAA,+BACb,IAAIJ,GAAQI,EAAA,oBACvB,IAAIJ,GAAQI,EAAA,8BACF,IAAIJ,GAAQI,EAAA,mBACvB,IAAIJ,GA1JhBa,KAAKE,WAAa,EAClBF,KAAKG,SAAW,CAAC,KAAM,MACvBH,KAAKI,iBAAmB,GACxBJ,KAAKK,aAAe,CAAC,IACrBL,KAAKM,QAAU,CAAEC,KAAM,EAAGC,IAAK,EAAGC,OAAQ,GAC1CT,KAAKU,MAAQ,CAAC,EACdV,KAAKW,YAAc,CAAC,EACpBX,KAAKY,aAAe,CAAEC,GAAI,KAAMC,KAAM,MACtCd,KAAKe,gBAAkB,CAAC,EACxBf,KAAKgB,SAAW,KAChBhB,KAAKiB,WAAY,CAEnB,C,QAwIC,O,EAxIAhB,G,EAAA,EAAAiB,IAAA,eAAAC,MAED,SAAAC,GAAkC,IAAnBC,EAAID,EAAJC,KAAMC,EAASF,EAATE,UACnBtB,KAAKE,WAAaoB,EAClBtB,KAAKU,MAAQW,EACbrB,KAAKuB,YAAYC,KAAK,CACpBH,KAAAA,EACAI,KAAMzB,KAAKG,SAASmB,IAExB,GAAC,CAAAJ,IAAA,SAAAQ,IAED,WACE,OAAO1B,KAAKM,OACd,EAACqB,IAED,SAAWC,GACT5B,KAAKM,QAAUsB,EACf5B,KAAK6B,uBAAuBL,KAAK,CAC/BM,MAAO9B,KAAKM,QAAQG,OACpBsB,IAAK/B,KAAKM,QAAQG,QAQtB,GAAC,CAAAS,IAAA,cAAAQ,IAED,WACE,OAAO1B,KAAKK,YACd,EAACsB,IAED,SAAgBK,GACdhC,KAAKK,aAAe2B,CAOtB,GAAC,CAAAd,IAAA,MAAAC,MAED,WACE,OAAOnB,IACT,GAAC,CAAAkB,IAAA,kBAAAQ,IAED,WACE,OAAO1B,KAAKI,gBACd,EAACuB,IAED,SAAoBM,GAClBjC,KAAKI,iBAAmB6B,EACxBjC,KAAKkC,wBAAwBV,KAAKxB,KAAKI,iBAQzC,GAAC,CAAAc,IAAA,OAAAQ,IAED,WACE,OAAO1B,KAAKU,KACd,EAACiB,IAED,SAASQ,GACPnC,KAAKU,MAAQyB,CACf,GAAC,CAAAjB,IAAA,YAAAQ,IAED,WACE,OAAO1B,KAAKE,UACd,EAACyB,IAED,SAAcL,GACZtB,KAAKE,WAAaoB,EAClBtB,KAAKoC,aAAaZ,KAAKxB,KAAKG,SAASH,KAAKE,aAC1CF,KAAKqC,yBAAyBb,KAAK,CACjCC,KAAMzB,KAAKG,SAASH,KAAKsB,WACzBgB,gBAAiBtC,KAAKsC,gBACtBN,YAAahC,KAAKgC,YAClBO,OAAQvC,KAAKuC,QAEjB,GAAC,CAAArB,IAAA,OAAAQ,IAED,WACE,OAAO1B,KAAKG,QACd,EAACwB,IAED,SAASa,GACPxC,KAAKG,SAAWqC,CAClB,GAAC,CAAAtB,IAAA,gBAAAC,MAED,SAAcsB,GACZ,OAAOzC,KAAKU,MAAM+B,KAAS,CAC7B,GAAC,CAAAvB,IAAA,aAAAQ,IAED,WACE,OAAO1B,KAAKW,WACd,EAACgB,IAED,SAAee,GACb1C,KAAKW,YAAc+B,CACrB,GAAC,CAAAxB,IAAA,cAAAQ,IAED,WACE,OAAO1B,KAAKY,YACd,EAACe,IAED,SAAgBgB,GACd3C,KAAKY,aAAe+B,CACtB,GAAC,CAAAzB,IAAA,iBAAAQ,IAED,WACE,OAAO1B,KAAKe,eACd,EAACY,IAED,SAAmBiB,GACjB5C,KAAKe,gBAAkB6B,CACzB,GAAC,CAAA1B,IAAA,UAAAQ,IAED,WACE,OAAO1B,KAAKgB,QACd,EAACW,IAED,SAAYkB,GACV7C,KAAKgB,SAAW6B,CAClB,GAAC,CAAA3B,IAAA,WAAAQ,IAED,WACE,OAAO1B,KAAKiB,SACd,EAACU,IAED,SAAamB,GACX9C,KAAKiB,UAAY6B,CACnB,M,oEAAC7C,CAAA,CAtJQ,G,+5BCFL8C,EAAM3D,GACV,SAAA2D,IAAc,IAAA1D,EAAA,M,4FAAAC,CAAA,KAAAyD,GAAAxD,EAAA,gBAIJ,WACR,OAAOF,EAAK2D,OAAO3D,EAAK2D,OAAOC,OAAS,IAAM,EAChD,IAAC1D,EAAA,aAEM,SAAC2D,GACN7D,EAAK2D,OAAOtD,KAAKwD,EACnB,IATElD,KAAKgD,OAAS,EAChB,I,82CCHgC,IAC5BG,EAAM,WACV,SAAAA,IAAc,IAAA9D,EAAA,M,4FAAAC,CAAA,KAAA6D,GAAA5D,EAAA,2BAQO,SAAC2D,GAmBpB,OAlBkBA,EAAOE,MAAM,MAAMC,KAAI,SAACC,GAAG,SAAAC,OAAQD,EAAG,SAE9BD,KAAI,SAACC,GAC7B,GAAIA,EAAIL,QAAU5D,EAAKmE,aAAc,OAAOF,EAG5C,IAFA,IAAMG,EAAM,GACRC,EAAaJ,EACXI,EAAWT,OAAS,IAAI,CAC5B,IACMU,EADOD,EAAWE,MAAM,YACF,GAAGC,YAAY,MACnB,IAApBF,IACFF,EAAI/D,KAAKgE,EAAWI,MAAM,EAAGH,EAAiB,IAC9CD,EAAaR,EAAOY,MAAMH,EAAiB,GAG/C,CAEA,OADAF,EAAI/D,KAAKgE,GACFD,CACT,IACeM,MACjB,IAACxE,EAAA,0BAsEmB,SAACkB,GACnBpB,EAAKkD,OAAMyB,EAAA,CACTvD,OAAAA,GACGpB,EAAK4E,mBAAmBxD,GAE/B,IAAClB,EAAA,2BAEoB,SAACkB,GAGpB,IAFA,IAAIyD,EAAmB,EACjBC,EAAW,CAAC,EACTC,EAAI,EAAGA,EAAI/E,EAAK2C,YAAYiB,OAAQmB,IAAK,CAChD,GAAI3D,EAASyD,EAAmB7E,EAAK2C,YAAYoC,GAAGnB,OAAQ,CAC1DkB,EAAS5D,KAAO6D,EAChBD,EAAS3D,IAAMC,EAASyD,EACxB,KACF,CACAA,GAAoB7E,EAAK2C,YAAYoC,GAAGnB,MAC1C,CACA,OAAOkB,CACT,IAAC5E,EAAA,mBAsDY,SAAC8E,EAAaC,GACzB,IAAMxC,EAAQyC,KAAKC,IAAIH,EAAaC,GAC9BvC,EAAMwC,KAAKE,IAAIJ,EAAaC,GAC5BI,EAAWrF,EAAKiD,gBAAgBwB,MAAMhC,EAAOC,GACnD1C,EAAK2D,OAAOtD,KAAKgF,EACnB,IAACnF,EAAA,kBAEW,SAAC8E,EAAaC,GACxB,IAAMxC,EAAQyC,KAAKC,IAAIH,EAAaC,GAC9BvC,EAAMwC,KAAKE,IAAIJ,EAAaC,GAC5BK,EAAUtF,EAAKiD,gBAAgBwB,MAAMhC,EAAOC,GAClD1C,EAAK2D,OAAOtD,KAAKiF,GACjBtF,EAAKiD,gBAAkBjD,EAAKiD,gBAAgBwB,MAAM,EAAGhC,GAASzC,EAAKiD,gBAAgBwB,MAAM/B,GACzF1C,EAAK2C,YAAc3C,EAAKuF,mBAAmBvF,EAAKiD,iBAEhD,IAAMuC,EAAiBxF,EAAK4E,mBAAmBnC,GAC/CzC,EAAKkD,OAAMyB,EAAA,CACTvD,OAAQqB,GACL+C,EAEP,IA9LE7E,KAAKsC,gBAAkB,GACvBtC,KAAKgC,YAAc,GACnBhC,KAAKuC,OAAS,CAAEhC,KAAM,EAAGC,IAAK,EAAGC,OAAQ,GACzCT,KAAKwD,aAAe,GACpBxD,KAAKgD,OAAS,IAAID,EAClB/C,KAAK8E,eAAiB,IACxB,C,QAsMA,O,EAtMC3B,G,EAAA,EAAAjC,IAAA,YAAAC,MA+BD,SAAU4D,GACR,IAAAC,EAA8BhF,KAAKuC,OAAhB9B,GAAPuE,EAAJzE,KAASyE,EAAHxE,IAAWwE,EAANvE,QACnB,GAAIA,IAAWT,KAAKsC,gBAAgBW,OAAQ,CAC1C,IAAMgC,EAAqBjF,KAAKsC,gBAAkByC,EAClD/E,KAAKsC,gBAAkB2C,EACvBjF,KAAKgC,YAAchC,KAAK4E,mBAAmB5E,KAAKsC,iBAChD,IAAMuC,EAAiB7E,KAAKiE,mBAAmBxD,EAASsE,EAAO9B,QAC/DjD,KAAKuC,OAAMyB,EAAA,CACTvD,OAAQA,EAASsE,EAAO9B,QACrB4B,EA0BP,KAAO,CAEL7E,KAAKsC,gBAAkBtC,KAAKsC,gBAAgBwB,MAAM,EAAGrD,GAAUsE,EAAS/E,KAAKsC,gBAAgBwB,MAAMrD,GACnGT,KAAKgC,YAAchC,KAAK4E,mBAAmB5E,KAAKsC,iBAChD,IAAMuC,EAAiB7E,KAAKiE,mBAAmBxD,EAASsE,EAAO9B,QAC/DjD,KAAKuC,OAAMyB,EAAA,CACTvD,OAAQA,EAASsE,EAAO9B,QACrB4B,EAeP,CACF,GAAC,CAAA3D,IAAA,eAAAC,MAuBD,SAAa+D,GACX,IAAAC,EAA8BnF,KAAKuC,OAA3BhC,EAAI4E,EAAJ5E,KAAMC,EAAG2E,EAAH3E,IAAKC,EAAM0E,EAAN1E,OACnB,GAAIA,IAAWT,KAAKsC,gBAAgBW,QAClC,GAAkB,SAAdiC,EAAsB,CACxB,IAAMD,EAAqBjF,KAAKsC,gBAAgBwB,MAAM,GAAI,GAC1D9D,KAAKsC,gBAAkB2C,EACvBjF,KAAKgC,YAAchC,KAAK4E,mBAAmB5E,KAAKsC,iBAChDtC,KAAKuC,OAAS,CACZ9B,OAAST,KAAKsC,gBAAgBW,OAC9B1C,KAAOP,KAAKgC,YAAYiB,OAAS,EACjCzC,IAAMR,KAAKgC,YAAYhC,KAAKgC,YAAYiB,OAAS,GAAGA,OAGxD,OACK,GAAkB,SAAdiC,GACT,GAAe,IAAXzE,EAAc,CAChBT,KAAKsC,gBAAkBtC,KAAKsC,gBAAgBwB,MAAM,EAAGrD,EAAS,GAAKT,KAAKsC,gBAAgBwB,MAAMrD,GAC9FT,KAAKgC,YAAchC,KAAK4E,mBAAmB5E,KAAKsC,iBAChD,IAAMuC,EAAiB7E,KAAKiE,mBAAmBxD,EAAS,GACxDT,KAAKuC,OAAMyB,EAAA,CACTvD,OAAQA,EAAS,GACdoE,EAEP,OAEIpE,EAAST,KAAKsC,gBAAgBW,SAChCjD,KAAKsC,gBAAkBtC,KAAKsC,gBAAgBwB,MAAM,EAAGrD,GAAUT,KAAKsC,gBAAgBwB,MAAMrD,EAAS,GACnGT,KAAKgC,YAAchC,KAAK4E,mBAAmB5E,KAAKsC,iBAChDtC,KAAKuC,OAAS,CACZ9B,OAAAA,EACAF,KAAAA,EACAC,IAAAA,GAKR,GAAC,CAAAU,IAAA,gBAAAC,MAED,SAAckD,EAAaC,EAAWc,GACpC,IAAMtD,EAAQyC,KAAKC,IAAIH,EAAaC,GAC9BvC,EAAMwC,KAAKE,IAAIJ,EAAaC,GAClCtE,KAAKsC,gBAAkBtC,KAAKsC,gBAAgBwB,MAAM,EAAGhC,GAASsD,EAAOpF,KAAKsC,gBAAgBwB,MAAM/B,GAChG/B,KAAKgC,YAAchC,KAAK4E,mBAAmB5E,KAAKsC,iBAEhD,IAAMuC,EAAiB7E,KAAKiE,mBAAmBnC,EAAQsD,EAAKnC,QAC5DjD,KAAKuC,OAAMyB,EAAA,CACTvD,OAAQqB,EAAQsD,EAAKnC,QAClB4B,EAGP,M,oEAoCA1B,CAAA,CA9MU,G,uqBCDNkC,EAAO,WACX,SAAAA,EAAYC,EAAYC,EAAQC,I,4FAAWlG,CAAA,KAAA+F,GACzCrF,KAAKsF,WAAaA,EAClBtF,KAAKuF,OAASA,EACdvF,KAAKyF,sBAAwB,GAC7BzF,KAAK0F,aAAe,CAAEnF,KAAM,EAAGC,IAAK,EAAGC,OAAQ,GAC/CT,KAAKgC,YAAc,CAAC,IACpBhC,KAAK2F,QAAU,kBAAMH,GAAW,CAClC,C,QAUC,O,EAVAH,G,EAAA,EAAAnE,IAAA,aAAAC,MAED,WACEnB,KAAKyF,sBAAwBzF,KAAKuF,OAAOjD,gBACzCtC,KAAK0F,aAAe1F,KAAKuF,OAAOhD,OAChCvC,KAAKgC,YAAchC,KAAKuF,OAAOvD,WACjC,GAAC,CAAAd,IAAA,OAAAC,MAED,WACEnB,KAAKuF,OAASvF,KAAKyF,qBACrB,M,oEAACJ,CAAA,CAlBU,G,weCA0B,IAEjCO,EAAG,SAAAC,I,qRAAAC,CAAAF,EAAAC,GAAA,I,MAAAE,G,EAAAH,E,qrBACP,SAAAA,EAAYN,EAAYC,GAAQ,IAAAlG,EAAA,O,4FAAAC,CAAA,KAAAsG,GAAAvG,EAAA0G,EAAAC,KAAA,KACxBV,EAAYC,GAAQ,WAGxB,OAFAA,EAAOU,UAAUX,EAAWY,WAC5B7G,EAAK8G,cACE,CACT,GACF,CAAC,O,EAAAP,E,oDAAA,CAPM,CAASP,G,weCFqB,IAEjCe,EAAM,SAAAP,I,qRAAAC,CAAAM,EAAAP,GAAA,I,MAAAE,G,EAAAK,E,qrBACV,SAAAA,EAAYd,EAAYC,GAAQ,IAAAlG,EAAA,O,4FAAAC,CAAA,KAAA8G,GAAA/G,EAAA0G,EAAAC,KAAA,KACxBV,EAAYC,GAAQ,WAGxB,OAFAA,EAAOc,aAAaf,EAAWgB,iBAC/BjH,EAAK8G,cACE,CACT,GACF,CAAC,O,EAAAC,E,oDAAA,CAPS,CAASf,G,uqBCFfkB,EAAO,WACX,SAAAA,EAAYC,I,4FAAalH,CAAA,KAAAiH,GACvBvG,KAAKyG,QAAU,CAACD,GAChBxG,KAAK0G,mBAAqB,CAC5B,C,QAoBC,O,EApBAH,G,EAAA,EAAArF,IAAA,OAAAC,MAED,SAAKwF,GACH3G,KAAK0G,oBAAsB,EACvB1G,KAAKyG,QAAQxD,OAASjD,KAAK0G,qBAC7B1G,KAAKyG,QAAUzG,KAAKyG,QAAQ3C,MAAM,EAAG9D,KAAK0G,qBAE5C1G,KAAKyG,QAAQzG,KAAK0G,oBAAsBC,CAC1C,GAAC,CAAAzF,IAAA,OAAAC,MAED,WACE,OAAgC,IAA5BnB,KAAK0G,qBACT1G,KAAK0G,oBAAsB,EACpB1G,KAAKyG,QAAQzG,KAAK0G,oBAC3B,GAAC,CAAAxF,IAAA,OAAAC,MAED,WACE,OAAInB,KAAK0G,mBAAqB,IAAM1G,KAAKyG,QAAQxD,SACjDjD,KAAK0G,oBAAsB,EACpB1G,KAAKyG,QAAQzG,KAAK0G,oBAC3B,M,oEAACH,CAAA,CAxBU,G,weCA0B,IAEjCK,EAAI,SAAAf,I,qRAAAC,CAAAc,EAAAf,GAAA,I,MAAAE,G,EAAAa,E,qrBACR,SAAAA,EAAYtB,EAAYC,GAAQ,O,4FAAAjG,CAAA,KAAAsH,GAAAb,EAAAC,KAAA,KACxBV,EAAYC,GAAQ,WAExB,OADAA,EAAOsB,WAAWvB,EAAWwB,kBAAkBhF,MAAOwD,EAAWwB,kBAAkB/E,MAC5E,CACT,GACF,CAAC,O,EAAA6E,E,oDAAA,CANO,CAASvB,G,weCFoB,IAEjC0B,EAAO,SAAAlB,I,qRAAAC,CAAAiB,EAAAlB,GAAA,I,MAAAE,G,EAAAgB,E,qrBACX,SAAAA,EAAYzB,EAAYC,GAAQ,IAAAlG,EAAA,O,4FAAAC,CAAA,KAAAyH,GAAA1H,EAAA0G,EAAAC,KAAA,KACxBV,EAAYC,GAAQ,WAGxB,OAFAA,EAAOyB,cAAc1B,EAAWwB,kBAAkBhF,MAAOwD,EAAWwB,kBAAkB/E,IAAKuD,EAAWY,WACtG7G,EAAK8G,cACE,CACT,GACF,CAAC,O,EAAAY,E,oDAAA,CAPU,CAAS1B,G,weCFiB,IAEjC4B,EAAG,SAAApB,I,qRAAAC,CAAAmB,EAAApB,GAAA,I,MAAAE,G,EAAAkB,E,qrBACP,SAAAA,EAAY3B,EAAYC,GAAQ,IAAAlG,EAAA,O,4FAAAC,CAAA,KAAA2H,GAAA5H,EAAA0G,EAAAC,KAAA,KACxBV,EAAYC,GAAQ,WAGxB,OAFAA,EAAO2B,UAAU5B,EAAWwB,kBAAkBhF,MAAOwD,EAAWwB,kBAAkB/E,KAClF1C,EAAK8G,cACE,CACT,GACF,CAAC,O,EAAAc,E,oDAAA,CAPM,CAAS5B,G,weCFqB,IAEjC8B,EAAK,SAAAtB,I,qRAAAC,CAAAqB,EAAAtB,GAAA,I,MAAAE,G,EAAAoB,E,qrBACT,SAAAA,EAAY7B,EAAYC,GAAQ,IAAAlG,EAAA,O,4FAAAC,CAAA,KAAA6H,GAAA9H,EAAA0G,EAAAC,KAAA,KACxBV,EAAYC,GAAQ,WAGxB,OAFAA,EAAOU,UAAUX,EAAWY,WAC5B7G,EAAK8G,cACE,CACT,GACF,CAAC,O,EAAAgB,E,oDAAA,CAPQ,CAAS9B,G,8qBCFd+B,GAAgB,WACpB,SAAAA,EAAAhG,GAA8G,IAAAiG,EAAAjG,EAAhGK,KAAAA,OAAI,IAAA4F,EAAG,KAAIA,EAAAC,EAAAlG,EAAEkB,gBAAAA,OAAe,IAAAgF,EAAG,GAAEA,EAAAC,EAAAnG,EAAEY,YAAAA,OAAW,IAAAuF,EAAG,CAAC,IAAGA,EAAAC,EAAApG,EAAEmB,OAAAA,OAAM,IAAAiF,EAAG,CAAE/G,OAAQ,EAAGF,KAAM,EAAGC,IAAI,GAAEgH,G,4FAAAlI,CAAA,KAAA8H,GACxGpH,KAAKyB,KAAOA,EACZzB,KAAKsC,gBAAkBA,EACvBtC,KAAKgC,YAAcA,EACnBhC,KAAKuC,OAASA,CAChB,C,QAoCC,O,EApCA6E,E,EAAA,EAAAlG,IAAA,SAAAC,MAED,SAAcsG,GACZ,OAAOC,KAAKC,UAAUF,EACxB,GAAC,CAAAvG,IAAA,6BAAAC,MAED,SAAkCyG,EAAQ1G,GACxC,OAAOA,KAAO0G,CAChB,GAEA,CAAA1G,IAAA,WAAAC,MACA,SAAgBsG,GAEd,IAAMI,EAAW,CAAC,EAElB,GAAa,OAATJ,GAAiC,WAAhBK,GAAOL,GAC1B,MAAM,IAAIM,MAAM,8BAmBlB,OAhBI/H,KAAKgI,2BAA2BP,EAAM,UACxCI,EAASpG,KAAOgG,EAAKhG,MAGnBzB,KAAKgI,2BAA2BP,EAAM,qBACxCI,EAASvF,gBAAkBmF,EAAKnF,iBAG9BtC,KAAKgI,2BAA2BP,EAAM,iBACxCI,EAAS7F,YAAcyF,EAAKzF,aAG1BhC,KAAKgI,2BAA2BP,EAAM,YACxCI,EAAStF,OAASkF,EAAKlF,QAGlB,IAAI6E,EAAiBS,EAC9B,IApCC,M,eAAA,M,8DAoCAT,CAAA,CA1CmB,G,yhCCQ4B,IAE5Ca,GAAU,WACd,SAAAA,EAAYC,GAAO,IAAA7I,EAAA,M,4FAAAC,CAAA,KAAA2I,GAAA1I,GAAA,2BAoBG,CAGpB,CAAC,UAAW,QACZ,CAAC,UAAW,QACZ,CAAC,UAAW,QACZ,CAAC,UAAW,QAWZ,CAAC,UAAW,QACZ,CAAC,UAAW,WACbA,GAAA,kBAEY,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,MAAO,QAAMA,GAAA,2BAEnE,SAAC4I,GACpBC,aAAaC,QAAQ,yBAA0BjB,GAAiBkB,OAAOH,GACzE,IAAC5I,GAAA,4BAGqB,WACpB,IAEE,OADa6H,GAAiBmB,SAASb,KAAKc,MAAMJ,aAAaK,QAAQ,2BAA6B,IAEtG,CAAE,MAAOC,GACP,OAAO,IAAItB,EACb,CACF,IAAC7H,GAAA,uBAGgB,WACf,IAAMoJ,EAAaC,OAAOvH,KAAKhC,EAAKwJ,gBACjCjJ,QAAO,SAACwE,GAAC,OAAgC,IAA3B/E,EAAKwJ,eAAezE,EAAQ,IAC7C,OAA6B,IAAtBuE,EAAW1F,SAAiB0F,EAAWG,SAAS,cAAgBH,EAAWG,SAAS,cAC7F,IAACvJ,GAAA,eAEQ,SAACkD,EAAIrB,GAAyC,IACjD2D,EADY5D,EAAKC,EAALD,MAAoB4H,EAAU3H,EAAvB4H,YAGrBjE,EADEtC,EAAKqG,SAAS,OAEbzJ,EAAK4J,mBAAqB5J,EAAK6I,MAAMgB,WAAe7J,EAAK4J,kBAAoB5J,EAAK6I,MAAMgB,SACvFH,EAAa5H,EAEL9B,EAAK4J,iBAAmBF,EAAa5H,EAEnD9B,EAAK8J,IAAIpE,EACX,IAACxF,GAAA,eAEQ,SAACkD,EAAI2G,GAASA,EAALjI,MAChB9B,EAAKiH,gBAA2B,cAAT7D,EAAuB,OAAS,OACvDpD,EAAKkG,OAAOjD,gBAAkBjD,EAAK6I,MAAM5F,gBACzCjD,EAAKkG,OAAOvD,YAAc3C,EAAK6I,MAAMlG,YACrC3C,EAAKkG,OAAOhD,OAASlD,EAAK6I,MAAM3F,OAChClD,EAAKgK,eAAe,IAAIjD,EAAO/G,EAAMA,EAAKkG,SAC1ClG,EAAK6I,MAAM5F,gBAAkBjD,EAAKkG,OAAOjD,gBACzCjD,EAAK6I,MAAMlG,YAAc3C,EAAKkG,OAAOvD,YACrC3C,EAAK6I,MAAM3F,OAASlD,EAAKkG,OAAOhD,OAChClD,EAAKiH,gBAAkB,IACzB,IAAC/G,GAAA,cAEO,SAACkD,EAAI6G,GAAgB,IAAZnI,EAAKmI,EAALnI,MACf9B,EAAK8J,IAAIhI,EACX,IAAC5B,GAAA,iBAEU,SAACkD,EAAI8G,GAASA,EAALpI,MAAY,IACxBqI,EAAOnK,EAAK6I,MAAMgB,SACxB7J,EAAK6I,MAAMgB,UAAYM,CACzB,IAACjK,GAAA,mBAEY,SAACkD,GACZ,IAAMyC,EAAYzC,EAAKqB,MAAM,GAAG2F,cAChC,GAAIpK,EAAKqK,eAAgB,CAEvB,IAAM5H,EAAQyC,KAAKC,IAAInF,EAAKyH,kBAAkBhF,MAAOzC,EAAKyH,kBAAkB/E,KACtEA,EAAMwC,KAAKE,IAAIpF,EAAKyH,kBAAkBhF,MAAOzC,EAAKyH,kBAAkB/E,KAa1E,GAXA1C,EAAKkG,OAAOjD,gBAAkBjD,EAAK6I,MAAM5F,gBACzCjD,EAAKkG,OAAOvD,YAAc3C,EAAK6I,MAAMlG,YACrC3C,EAAKkG,OAAOhD,OAASlD,EAAK6I,MAAM3F,OAChClD,EAAKkG,OAAOoE,kBACK,SAAdzE,GAAsC,OAAdA,EACrBpD,EAAQC,GAEd1C,EAAK6I,MAAM3F,OAASlD,EAAKkG,OAAOhD,OAChClD,EAAKqK,gBAAiB,EACtBrK,EAAKuK,cAAe,EACpBvK,EAAKyH,kBAAoB,KACP,SAAd5B,GAAsC,UAAdA,EAAuB,OAAO,CAC5D,CAGA,OADA7F,EAAKwK,cAAc3E,MACZ,CACT,IAAC3F,GAAA,YAEK,SAACwF,GAGL,GAFA1F,EAAK6G,UAAYnB,EAEb1F,EAAKqK,eAaP,OAXArK,EAAKkG,OAAOjD,gBAAkBjD,EAAK6I,MAAM5F,gBACzCjD,EAAKkG,OAAOvD,YAAc3C,EAAK6I,MAAMlG,YACrC3C,EAAKkG,OAAOhD,OAASlD,EAAK6I,MAAM3F,OAChClD,EAAKgK,eAAe,IAAItC,EAAQ1H,EAAMA,EAAKkG,SAC3ClG,EAAK6I,MAAM5F,gBAAkBjD,EAAKkG,OAAOjD,gBACzCjD,EAAK6I,MAAMlG,YAAc3C,EAAKkG,OAAOvD,YACrC3C,EAAK6I,MAAM3F,OAASlD,EAAKkG,OAAOhD,OAChClD,EAAKqK,gBAAiB,EACtBrK,EAAKuK,cAAe,EACpBvK,EAAKyH,kBAAoB,UACzBzH,EAAK6G,UAAY,IAInB7G,EAAKkG,OAAOjD,gBAAkBjD,EAAK6I,MAAM5F,gBACzCjD,EAAKkG,OAAOvD,YAAc3C,EAAK6I,MAAMlG,YACrC3C,EAAKkG,OAAOhD,OAASlD,EAAK6I,MAAM3F,OAChClD,EAAKgK,eAAe,IAAIzD,EAAIvG,EAAMA,EAAKkG,SACvClG,EAAK6I,MAAM5F,gBAAkBjD,EAAKkG,OAAOjD,gBACzCjD,EAAK6I,MAAMlG,YAAc3C,EAAKkG,OAAOvD,YACrC3C,EAAK6I,MAAM3F,OAASlD,EAAKkG,OAAOhD,OAChClD,EAAK6G,UAAY,EAInB,IAAC3G,GAAA,kBAEW,SAACkD,EAAM3B,GACjB,IAAMW,EAAOpC,EAAK6I,MAAMzG,KAAKpC,EAAK6I,MAAM5G,WAClCJ,EAAM7B,EAAK6I,MAAM4B,cAAcrH,GAC7BsH,EAAS7I,EAAT6I,KAMK,YAATA,EACG1K,EAAK2K,YAAYnJ,IAAMxB,EAAK2K,YAAYnJ,KAAO4B,GAC9CpD,EAAK2K,YAAYlJ,MAAUA,EAAOzB,EAAK2K,YAAYlJ,KAAQ,KAI/DzB,EAAKwJ,eAAepG,GAAQ,EAG5BpD,EAAK4K,WAAWxH,GAAQ,EAExBpD,EAAK6K,QAAUzH,GAEVpD,EAAK8K,cAOJ9K,EAAKwJ,eAAepG,IACtBpD,EAAKwJ,eAAepG,GAAQ,EAC5BpD,EAAK4K,WAAWxH,GAAQ,EACxBpD,EAAK6K,QAAUzH,EACfpD,EAAK2K,YAAc,CAAEnJ,GAAI,KAAMC,KAAM,OAC3BzB,EAAK+K,sBAAsB3H,IAQrCpD,EAAKgL,gBACLhL,EAAK2K,YAAc,CAAEnJ,GAAI,KAAMC,KAAM,MACrCzB,EAAK4K,WAAWxH,GAAQ,EACxBpD,EAAK6K,QAAUzH,IAVfpD,EAAKwJ,eAAepG,GAAQ,EAC5BpD,EAAK4K,WAAWxH,GAAQ,EACxBpD,EAAK6K,QAAUzH,EACfpD,EAAK2K,YAAc,CAAEnJ,GAAI4B,EAAM3B,KAAAA,KAbjCzB,EAAK2K,YAAc,CAAEnJ,GAAI4B,EAAM3B,KAAAA,GAC/BzB,EAAK4K,WAAWxH,GAAQ,EACxBpD,EAAK6K,QAAUzH,GAsBVpD,EAAK8K,cACV9K,EAAK+K,sBAAsB3H,IAC7BpD,EAAKgL,gBACLhL,EAAK2K,YAAc,CAAEnJ,GAAI,KAAMC,KAAM,MACrCzB,EAAK6K,QAAUzH,EACfpD,EAAK4K,WAAWxH,GAAQ,IAMX,SAATsH,GAAoB1K,EAAKiL,QAAQP,IAChC1K,EAAKiL,QAAQP,GAAMtH,EAAMvB,EAAIO,IAClCpC,EAAKgL,gBACLhL,EAAK2K,YAAc,CAAEnJ,GAAI,KAAMC,KAAM,MACrCzB,EAAK6K,QAAUzH,EACfpD,EAAK4K,WAAWxH,GAAQ,IAI1BpD,EAAK2K,YAAc,CAAEnJ,GAAI,KAAMC,KAAM,MACrCzB,EAAK6K,QAAUzH,EACfpD,EAAK4K,WAAWxH,GAAQ,EACX,SAATsH,GAAoB1K,EAAKiL,QAAQP,IAChC1K,EAAKiL,QAAQP,GAAMtH,EAAMvB,EAAIO,KAEpCpC,EAAK6I,MAAM+B,WAAa5K,EAAK4K,UAC/B,IAAC1K,GAAA,gBAES,SAACkD,EAAM3B,GAEFzB,EAAK6I,MAAMzG,KAAKpC,EAAK6I,MAAM5G,WAAxC,IAEQyI,EADI1K,EAAK6I,MAAM4B,cAAcrH,GAC7BsH,KAGR,GADA1K,EAAK4K,WAAa5K,EAAK6I,MAAM+B,WACzB5K,EAAK6K,UAAYzH,EACnB,GAAIpD,EAAK8K,cAC2B,IAA9B9K,EAAKwJ,eAAepG,KAAapD,EAAK4K,WAAWxH,GAAQ,GAC7DpD,EAAK6K,QAAU,UAGf,IADA,IAAMzG,EAAMmF,OAAOvH,KAAKhC,EAAK4K,YACpB7F,EAAI,EAAGA,EAAIX,EAAIR,OAAQmB,GAAK,EACnC/E,EAAK4K,WAAWxG,EAAIW,IAAM,OAGzB,GAAqB,OAAjB/E,EAAK6K,QACd,GAAI7K,EAAK8K,cACmC,IAAtC9K,EAAKwJ,eAAexJ,EAAK6K,WAAgB7K,EAAK4K,WAAW5K,EAAK6K,SAAW,GAC7E7K,EAAK6K,QAAU,UAGf,IADA,IAAMzG,EAAMmF,OAAOvH,KAAKhC,EAAK4K,YACpB7F,EAAI,EAAGA,EAAIX,EAAIR,OAAQmB,GAAK,EACnC/E,EAAK4K,WAAWxG,EAAIW,IAAM,EAIhC/E,EAAK6I,MAAM+B,WAAa5K,EAAK4K,WAEd,YAATF,GAA+B,aAATA,GAAgC,SAATA,GAAoB1K,EAAKqK,iBAAmBrK,EAAKuK,eAElGvK,EAAKqK,gBAAiB,EAE1B,IAACnK,GAAA,sBAEe,WAAQF,EAAKwJ,eAAiB,CAAC,CAAG,IAACtJ,GAAA,oBAmGrC,kBAC4C,IADtCqJ,OAAOvH,KAAKhC,EAAKwJ,gBAClCjJ,QAAO,SAACwE,GAAC,OAAgC,IAA3B/E,EAAKwJ,eAAezE,EAAQ,IAAEnB,MAAY,IAAA1D,GAAA,gBAEjD,SAACkD,GACT,IAAIpD,EAAKkL,WAAWzB,SAASrG,GAA7B,CACA,IAAMhB,EAAOpC,EAAK6I,MAAMzG,KAAKpC,EAAK6I,MAAM5G,WAClCJ,EAAM7B,EAAK6I,MAAM4B,cAAcrH,GACrC,GAAKvB,EAAL,CAYA,IAAQ6I,EAAS7I,EAAT6I,KAER1K,EAAK4K,WAAa5K,EAAK6I,MAAM+B,WAChB,YAATF,GACG1K,EAAK8K,gBACR9K,EAAKwJ,eAAepG,GAAQ,EAC5BpD,EAAK4K,WAAWxH,GAAQ,GAEtBpD,EAAK8K,gBACH9K,EAAKwJ,eAAepG,IAEZpD,EAAK+K,sBAAsB3H,KACrCpD,EAAKwJ,eAAepG,GAAQ,GAF5BpD,EAAK4K,WAAWxH,GAAQ,IAQnBpD,EAAK8K,eACV9K,EAAK+K,sBAAsB3H,KAGhB,SAATsH,GAAoB1K,EAAKiL,QAAQP,GAWhC1K,EAAKiL,QAAQP,GAAMtH,EAAMvB,EAAIO,IAV5BpC,EAAKqK,iBACPrK,EAAKqK,gBAAiB,EACtBrK,EAAKuK,cAAe,EACpBvK,EAAKmL,sBAAsBnL,EAAKyH,kBAAkB/E,KAClD1C,EAAK6I,MAAM3F,OAASlD,EAAKkG,OAAOhD,OAChClD,EAAKyH,kBAAoB,KACzBzH,EAAKqK,gBAAiB,EACtBrK,EAAKuK,cAAe,IAVxBvK,EAAK4K,WAAWxH,GAAQ,IAiB1BpD,EAAK4K,WAAWxH,GAAQ,EACX,SAATsH,GAAoB1K,EAAKiL,QAAQP,GAWhC1K,EAAKiL,QAAQP,GAAMtH,EAAMvB,EAAIO,IAV5BpC,EAAKqK,iBACPrK,EAAKqK,gBAAiB,EACtBrK,EAAKuK,cAAe,EACpBvK,EAAKmL,sBAAsBnL,EAAKyH,kBAAkB/E,KAClD1C,EAAK6I,MAAM3F,OAASlD,EAAKkG,OAAOhD,OAChClD,EAAKyH,kBAAoB,KACzBzH,EAAKqK,gBAAiB,EACtBrK,EAAKuK,cAAe,IAK1BvK,EAAK6I,MAAM+B,WAAa5K,EAAK4K,UApD7B,MAVM5K,EAAKqK,iBACPrK,EAAKqK,gBAAiB,EACtBrK,EAAKuK,cAAe,EACpBvK,EAAKmL,sBAAsBnL,EAAKyH,kBAAkB/E,KAClD1C,EAAK6I,MAAM3F,OAASlD,EAAKkG,OAAOhD,OAChClD,EAAKyH,kBAAoB,KACzBzH,EAAKqK,gBAAiB,EACtBrK,EAAKuK,cAAe,EAXkB,CAmE5C,IAACrK,GAAA,cAGO,SAACkD,GACP,IAAIpD,EAAKkL,WAAWzB,SAASrG,GAA7B,CAEapD,EAAK6I,MAAMzG,KAAKpC,EAAK6I,MAAM5G,WAAxC,IACMJ,EAAM7B,EAAK6I,MAAM4B,cAAcrH,GACrC,GAAKvB,EAAL,CAaA,IAAQ6I,EAAS7I,EAAT6I,KAGR,GADA1K,EAAK4K,WAAa5K,EAAK6I,MAAM+B,WACzB5K,EAAK8K,cACP9K,EAAK4K,WAAWxH,GAAQ,EACU,IAA9BpD,EAAKwJ,eAAepG,KACtBpD,EAAKwJ,eAAepG,GAAQ,OAEzB,CAC6B,IAA9BpD,EAAKwJ,eAAepG,KAAapD,EAAKwJ,eAAepG,GAAQ,GAEjE,IADA,IAAMgB,EAAMmF,OAAOvH,KAAKhC,EAAK4K,YACpB7F,EAAI,EAAGA,EAAIX,EAAIR,OAAQmB,GAAK,EACnC/E,EAAK4K,WAAWxG,EAAIW,IAAM,CAE9B,CACA/E,EAAK6I,MAAM+B,WAAa5K,EAAK4K,WAEd,YAATF,GAA+B,aAATA,GAAgC,SAATA,GAAoB1K,EAAKqK,iBAAmBrK,EAAKuK,eAElGvK,EAAKqK,gBAAiB,EArBxB,MAVMrK,EAAKqK,iBACPrK,EAAKqK,gBAAiB,EACtBrK,EAAKuK,cAAe,EACpBvK,EAAKmL,sBAAsBnL,EAAKyH,kBAAkB/E,KAClD1C,EAAK6I,MAAM3F,OAASlD,EAAKkG,OAAOhD,OAChClD,EAAKyH,kBAAoB,KACzBzH,EAAKqK,gBAAiB,EACtBrK,EAAKuK,cAAe,EAZkB,CAsC5C,IAACrK,GAAA,iBAEU,WACT,IAAAkL,EAA8BpL,EAAK6I,MAAM3F,OAAjChC,EAAIkK,EAAJlK,KAAMC,EAAGiK,EAAHjK,IACRwB,GADmByI,EAANhK,OACCpB,EAAK6I,MAAMlG,aAC/B,GAAa,IAATzB,EAAY,CACd,IAAMmK,EAAUnK,EAAO,EACnBoK,EAAY,EAEhB,GAAID,EAAU,EACZ,IAAK,IAAItG,EAAI,EAAGA,EAAIsG,EAAStG,IAC3BuG,GAAa3I,EAAYoC,GAAGnB,OAI5BjB,EAAY0I,GAASzH,OAASzC,GAChCmK,GAAanK,EACbnB,EAAK6I,MAAM3F,OAAS,CAClB9B,OAAQkK,EACRpK,KAAMmK,EACNlK,IAAAA,KAGFmK,GAAa3I,EAAY0I,GAASzH,OAAS,EAC3C5D,EAAK6I,MAAM3F,OAAS,CAClB9B,OAAQkK,EACRpK,KAAMmK,EACNlK,IAAKwB,EAAY0I,GAASzH,OAAS,GAIzC,CAEF,IAAC1D,GAAA,mBAEY,WACX,IAAAqL,EAA8BvL,EAAK6I,MAAM3F,OAAjChC,EAAIqK,EAAJrK,KAAMC,EAAGoK,EAAHpK,IACRwB,GADmB4I,EAANnK,OACCpB,EAAK6I,MAAMlG,aAE/B,GAAIzB,IAASyB,EAAYiB,OAAS,EAAG,CAGnC,IAFA,IAAMyH,EAAUnK,EAAO,EACnBoK,EAAY,EACPvG,EAAI,EAAGA,EAAIsG,EAAStG,IAC3BuG,GAAa3I,EAAYoC,GAAGnB,OAE9B,GAAIjB,EAAY0I,GAASzH,OAASzC,EAChCmK,GAAanK,EACbnB,EAAK6I,MAAM3F,OAAS,CAClB9B,OAAQkK,EACRpK,KAAMmK,EACNlK,IAAAA,OAEG,CACLmK,GAAa3I,EAAY0I,GAASzH,OAAS,EAC3C,IAAI4H,EAAS7I,EAAY0I,GAASzH,OAAS,EAK3C5D,EAAK6I,MAAM3F,OAAS,CAClB9B,OAAQkK,EACRpK,KAAMmK,EACNlK,IAAKqK,EAET,CACF,CAEF,IAACtL,GAAA,mBAEY,WACX,IAAAuL,EAA8BzL,EAAK6I,MAAM3F,OAAjChC,EAAIuK,EAAJvK,KAAMC,EAAGsK,EAAHtK,IAAKC,EAAMqK,EAANrK,OACbuB,EAAc3C,EAAK6I,MAAMlG,YAC/B,GAAY,IAARxB,GAAsB,IAATD,EACjB,GAAIC,EAAM,GAAM,EAAG,CACjB,IAAImK,EAAY,EAChB,GAAa,IAATpK,EACF,IAAK,IAAI6D,EAAI,EAAGA,EAAI7D,EAAM6D,IACxBuG,GAAa3I,EAAYoC,GAAGnB,OAGhC5D,EAAK6I,MAAM3F,OAAS,CAClB9B,OAAQkK,EACRpK,KAAAA,EACAC,IAAK,EAET,MAAO,GAAY,IAARA,EAAW,CAGpB,IAFA,IAAImK,EAAY,EACVD,EAAUnK,EAAO,EACd6D,EAAI,EAAGA,EAAI7D,EAAM6D,IACxBuG,GAAa3I,EAAYoC,GAAGnB,OAE9B5D,EAAK6I,MAAM3F,OAAS,CAClB9B,OAAQkK,EAAY,EACpBpK,KAAMmK,EACNlK,IAAKwB,EAAY0I,GAASzH,OAAS,EAEvC,KAAO,CACL,IAAM0H,EAAYlK,EAAS,EACrBoK,EAASrK,EAAM,EACrBnB,EAAK6I,MAAM3F,OAAS,CAClB9B,OAAQkK,EACRpK,KAAAA,EACAC,IAAKqK,EAET,CAEF,IAACtL,GAAA,oBAEa,WACZ,IAAAwL,EAA8B1L,EAAK6I,MAAM3F,OAAjChC,EAAIwK,EAAJxK,KAAMC,EAAGuK,EAAHvK,IAAKC,EAAMsK,EAANtK,OACbuB,EAAc3C,EAAK6I,MAAMlG,YAE3BvB,IAAWpB,EAAK6I,MAAM5F,gBAAgBW,SACtCzC,EAAM,IAAMwB,EAAYzB,GAAM0C,OAChC5D,EAAK6I,MAAM3F,OAAS,CAClB9B,OAAQA,EAAS,EACjBF,KAAMA,EAAO,EACbC,IAAK,GAGPnB,EAAK6I,MAAM3F,OAAS,CAClB9B,OAAQA,EAAS,EACjBF,KAAAA,EACAC,IAAKA,EAAM,GAIjB,IAACjB,GAAA,8BAEuB,SAACkB,GACvBpB,EAAKkG,OAAOjD,gBAAkBjD,EAAK6I,MAAM5F,gBACzCjD,EAAKkG,OAAOvD,YAAc3C,EAAK6I,MAAMlG,YACrC3C,EAAKkG,OAAOhD,OAASlD,EAAK6I,MAAM3F,OAChClD,EAAKkG,OAAOoE,kBAAkBlJ,GAC9BpB,EAAK6I,MAAM3F,OAASlD,EAAKkG,OAAOhD,OAC5BlD,EAAKqK,iBACPrK,EAAKyH,kBAAoB,KACzBzH,EAAKqK,gBAAiB,EACtBrK,EAAKuK,cAAe,EAExB,IAACrK,GAAA,wBAEiB,SAACuC,EAAOC,GACpB1C,EAAKyH,oBAAmBzH,EAAKyH,kBAAoB,MACrDzH,EAAKyH,kBAAqB,CAAEhF,MAAAA,EAAOC,IAAAA,GACnC1C,EAAKqK,gBAAiB,CACxB,IAACnK,GAAA,eAES,CACR,OAAUS,KAAK+E,OACf,OAAU/E,KAAI,OACd,KAAQA,KAAKgL,WACb,SAAYhL,KAAKkJ,SACjB,MAASlJ,KAAKiL,QACf1L,GAAA,uBAEiB,CAChBoK,kBAAoB3J,KAAKwK,sBACzBU,gBAAiBlL,KAAKkL,kBACvB3L,GAAA,qBAEe,CACd,GAAMS,KAAKmL,SACX,KAAQnL,KAAKoL,WACb,KAAQpL,KAAKqL,WACb,MAASrL,KAAKsL,cACf/L,GAAA,kBAEY,CACXgM,UAAWvL,KAAKuL,UAChBC,QAASxL,KAAKwL,UACfjM,GAAA,oBAEc,CACbkM,WAAYzL,KAAKyL,aAClBlM,GAAA,qBAEc,SAACkI,GACd,IAAMpG,EAAO,CAAC,EACdoG,EAAK1H,SAAQ,SAACmB,GACZG,EAAK,GAADkC,OAAIrC,EAAIuB,O,kWAAOuB,CAAA,GACd9C,EAEP,IACA7B,EAAK6I,MAAMwD,aAAa,CAAErK,KAAAA,EAAMC,UAAWjC,EAAK6I,MAAMzG,KAAKkK,QAAQtM,EAAKuM,iBAAiBnK,OAC3F,IAxpBEzB,KAAKkI,MAAQA,EACblI,KAAKuF,OAAS,IAAIpC,EAClBnD,KAAKyG,QAAU,IAAIF,EAAQ,CACzBd,sBAAuB,GACvBC,aAAc,CAAEnF,KAAM,EAAGC,IAAK,EAAGC,OAAQ,GACzCoL,kBAAmB,CAAC,MAEtB7L,KAAK4L,iBAAmB5L,KAAK8L,sBAC7B9L,KAAKiK,WAAa,CAAC,EACnBjK,KAAKgK,YAAc,CAAEnJ,GAAI,KAAMC,KAAM,MACrCd,KAAK6I,eAAiB,CAAC,EACvB7I,KAAKkK,QAAU,KACflK,KAAKkG,UAAY,KACjBlG,KAAK8G,kBAAoB,KAEzB9G,KAAKkI,MAAM7F,yBAAyB8G,KAAI,SAAC1B,GAAI,OAAKpI,EAAK0M,mBAAmBtE,EAAK,GAEjF,C,QA6oBC,O,EA7oBAQ,G,EAAA,EAAA/G,IAAA,wBAAAC,MA4PD,SAAsBsB,GAAM,IAAAuJ,EAAA,KACpBC,EAAerD,OAAOvH,KAAKrB,KAAK6I,gBACnCjJ,QAAO,SAACwE,GAAC,OAAiC,IAA3B4H,EAAKnD,eAAezE,EAAQ,IAC9C6H,EAAavM,KAAK+C,GAQlB,IAPA,IAAMyJ,EAAqBD,EACxB5I,KAAI,SAACe,GACJ,MAAU,cAANA,GAA2B,eAANA,EAA2B,QAC1C,YAANA,GAAyB,aAANA,EAAyB,MACtC,gBAANA,GAA6B,iBAANA,EAA6B,UACjDA,CACT,IACOA,EAAI,EAAGA,EAAIpE,KAAKmM,oBAAoBlJ,OAAQmB,GAAK,EACxD,GAAIpE,KAAKmM,oBAAoB/H,GAAGgI,OAAM,SAACC,GAAC,OAAMH,EAAmBpD,SAASuD,EAAE,IAAI,CAC9E,GAA6C,iBAAzCrM,KAAKmM,oBAAoB/H,GAAGkI,KAAK,IAAwB,CAC3D,IAAMhL,EAAYtB,KAAKkI,MAAM5G,UAC7BtB,KAAKkI,MAAM5G,WAAaA,EAAY,GAAKtB,KAAKkI,MAAMzG,KAAKwB,MAE3D,CACA,GAA6C,gBAAzCjD,KAAKmM,oBAAoB/H,GAAGkI,KAAK,IAAuB,CACtDtM,KAAK0J,iBACP1J,KAAK0J,gBAAiB,EACtB1J,KAAK4J,cAAe,EACpB5J,KAAK8G,kBAAoB,MAG3B,IAAMyF,EAAcvM,KAAKyG,QAAQ+F,OAC7BD,IACFvM,KAAKkI,MAAM5F,gBAAkBiK,EAAY9G,sBACzCzF,KAAKkI,MAAM3F,OAASgK,EAAY7G,aAChC1F,KAAKkI,MAAMlG,YAAcuK,EAAYvK,YAEzC,CACA,GAA6C,gBAAzChC,KAAKmM,oBAAoB/H,GAAGkI,KAAK,IAAuB,CACtDtM,KAAK0J,iBACP1J,KAAK0J,gBAAiB,EACtB1J,KAAK4J,cAAe,EACpB5J,KAAK8G,kBAAoB,MAG3B,IAAMyF,EAAcvM,KAAKyG,QAAQgG,OAC7BF,IACFvM,KAAKkI,MAAM5F,gBAAkBiK,EAAY9G,sBACzCzF,KAAKkI,MAAM3F,OAASgK,EAAY7G,aAChC1F,KAAKkI,MAAMlG,YAAcuK,EAAYvK,YAEzC,CAaA,GAZ6C,gBAAzChC,KAAKmM,oBAAoB/H,GAAGkI,KAAK,KAAyBtM,KAAK0J,iBACjE1J,KAAKuF,OAAOjD,gBAAkBtC,KAAKkI,MAAM5F,gBACzCtC,KAAKuF,OAAOT,eAAiB9E,KAAK8G,kBAClC9G,KAAKqJ,eAAe,IAAIpC,EAAIjH,KAAMA,KAAKuF,SACvCvF,KAAKkI,MAAM5F,gBAAkBtC,KAAKuF,OAAOjD,gBACzCtC,KAAKkI,MAAMlG,YAAchC,KAAKuF,OAAOvD,YACrChC,KAAKkI,MAAM3F,OAASvC,KAAKuF,OAAOhD,OAEhCvC,KAAK0J,gBAAiB,EACtB1J,KAAK4J,cAAe,EACpB5J,KAAK8G,kBAAoB,MAEkB,gBAAzC9G,KAAKmM,oBAAoB/H,GAAGkI,KAAK,IAAuB,CAM1D,GALAtM,KAAKkG,UAAYlG,KAAKuF,OAAOvC,OAAO0J,UACpC1M,KAAKuF,OAAOjD,gBAAkBtC,KAAKkI,MAAM5F,gBACzCtC,KAAKuF,OAAOvD,YAAchC,KAAKkI,MAAMlG,YACrChC,KAAKuF,OAAOhD,OAASvC,KAAKkI,MAAM3F,OAE5BvC,KAAK0J,eASP,OAPA1J,KAAKqJ,eAAe,IAAItC,EAAQ/G,KAAMA,KAAKuF,SAC3CvF,KAAKkI,MAAM5F,gBAAkBtC,KAAKuF,OAAOjD,gBACzCtC,KAAKkI,MAAMlG,YAAchC,KAAKuF,OAAOvD,YACrChC,KAAKkI,MAAM3F,OAASvC,KAAKuF,OAAOhD,OAChCvC,KAAK0J,gBAAiB,EACtB1J,KAAK4J,cAAe,OACpB5J,KAAK8G,kBAAoB,MAI3B9G,KAAKqJ,eAAe,IAAIlC,EAAMnH,KAAMA,KAAKuF,SACzCvF,KAAKkI,MAAM5F,gBAAkBtC,KAAKuF,OAAOjD,gBACzCtC,KAAKkI,MAAMlG,YAAchC,KAAKuF,OAAOvD,YACrChC,KAAKkI,MAAM3F,OAASvC,KAAKuF,OAAOhD,OAEhCvC,KAAK0J,gBAAiB,EACtB1J,KAAK4J,cAAe,EACpB5J,KAAK8G,kBAAoB,KACzB9G,KAAKkG,UAAY,EACnB,CAMA,MAL6C,gBAAzClG,KAAKmM,oBAAoB/H,GAAGkI,KAAK,KAAyBtM,KAAK0J,iBACjE1J,KAAKuF,OAAOjD,gBAAkBtC,KAAKkI,MAAM5F,gBACzCtC,KAAKqJ,eAAe,IAAIzC,EAAK5G,KAAMA,KAAKuF,SACxCvF,KAAK4J,cAAe,GAEf5J,KAAKmM,oBAAoB/H,EAClC,CAEF,OAAO,IACT,GAAC,CAAAlD,IAAA,iBAAAC,MA8SD,SAAewF,GACTA,EAAQhB,WACV3F,KAAKyG,QAAQkG,KAAKhG,EAEtB,M,qEAACsB,CAAA,CAhqBa,G,8qBCVV2E,GAAO,WACX,SAAAA,EAAAxL,GAKG,IAAAyL,EAAAzL,EAJD0L,OAAAA,OAAM,IAAAD,EAAG,KAAIA,EAAAE,EAAA3L,EACb4L,QAAAA,OAAO,IAAAD,EAAG,MAAKA,EAAAE,EAAA7L,EACf8L,UAAAA,OAAS,IAAAD,EAAG,GAAEA,EAAAE,EAAA/L,EACda,QAAAA,OAAO,IAAAkL,EAAG,GAAEA,G,4FAAA7N,CAAA,KAAAsN,GAEZ,IAAMQ,EAAUC,SAASC,cAAcN,GACvCI,EAAQG,UAAYL,EACpBE,EAAQI,UAAYvL,EAChB6K,GAAQA,EAAOW,OAAOL,GAC1BpN,KAAK0N,KAAON,CACd,C,QAIC,O,EAJAR,G,EAAA,EAAA1L,IAAA,UAAAC,MAED,WACEnB,KAAK0N,KAAKC,QACZ,M,qEAACf,CAAA,CAhBU,G,o5BCAiC,IAExCgB,GAAM,SAAAC,I,sRAAA/H,CAAA8H,EAAAC,GAAA,I,MAAA9H,G,EAAA6H,E,ikBACV,SAAAA,EAAAxM,GAAqD,IAAA/B,E,MAAvCyN,EAAM1L,EAAN0L,OAAQI,EAAS9L,EAAT8L,UAAWzL,EAAIL,EAAJK,KAAM6D,EAAUlE,EAAVkE,WAwBlC,O,4FAxB4ChG,CAAA,KAAAsO,G,EAK5CE,GAJHzO,EAAA0G,EAAAC,KAAA,KAAM,CACF8G,OAAAA,EACAE,QAAS,SACTE,UAAW,GAAF3J,OAAK2J,EAAS,sB,EAuBd,SAACzL,GACdpC,EAAK0O,WAAatM,EAClBpC,EAAKoC,KAAKiM,KAAKM,YAAc3O,EAAK0O,UACpC,G,OAzBK,mB,wFACH1O,EAAKiG,WAAaA,EAClBjG,EAAK0O,WAAatM,EAClBpC,EAAK4O,UAAY,IAAIrB,GAAQ,CAC3BE,OAAQzN,EAAKqO,KACbR,UAAW,gCAEb7N,EAAKoC,KAAO,IAAImL,GAAQ,CACpBE,OAAQzN,EAAK4O,UAAUP,KACvBR,UAAW,oBACXjL,QAAS5C,EAAK0O,aAElB1O,EAAK6O,YAAc,IAAItB,GAAQ,CAC3BE,OAAQzN,EAAK4O,UAAUP,KACvBR,UAAW,kCACXjL,QAAS,4JAIV5C,CACL,CAAC,O,EAAAuO,E,oDAAA,CA1BS,CAAShB,I,o5BCFsB,IAErCuB,GAAQ,SAAAN,I,sRAAA/H,CAAAqI,EAAAN,GAAA,I,MAAA9H,G,EAAAoI,E,ikBACZ,SAAAA,EAAA/M,GAIG,IAAA/B,E,MAHDyN,EAAM1L,EAAN0L,OACAI,EAAS9L,EAAT8L,UACA5H,EAAUlE,EAAVkE,WA0BE,O,4FA1BQhG,CAAA,KAAA6O,G,EAMPL,GAJHzO,EAAA0G,EAAAC,KAAA,KAAM,CACJ8G,OAAAA,EACAE,QAAS,WACTE,UAAW,GAAF3J,OAAK2J,EAAS,0B,EAyBd,SAACjL,GACZ5C,EAAKqO,KAAKM,YAAc/L,EACxB5C,EAAKqO,KAAKU,OACZ,G,OA3BK,iB,wFACH/O,EAAKiG,WAAaA,EAClBjG,EAAKqO,KAAKW,iBAAiB,WAAW,SAACC,GAAWA,EAAMC,gBAAiB,IACzElP,EAAKqO,KAAKW,iBAAiB,SAAS,SAACC,GAAWA,EAAMC,gBAAiB,IAQvElP,EAAKqO,KAAKU,QAEV/O,EAAKqO,KAAKc,UAAY,SAACF,GACjBjP,EAAKqO,KAAKe,eAAiBpP,EAAKqO,KAAKgB,eACvCrP,EAAKiG,WAAWqE,kBAAkBtK,EAAKqO,KAAKe,cAE5CpP,EAAKiG,WAAW4F,gBAAgB7L,EAAKqO,KAAKgB,eAAgBrP,EAAKqO,KAAKe,aAGxE,EAAEpP,CAEJ,CAAC,O,EAAA8O,E,oDAAA,CAhCW,CAASvB,I,o5BCFwB,IAEzC+B,GAAG,SAAAd,I,sRAAA/H,CAAA6I,EAAAd,GAAA,I,MAAA9H,G,EAAA4I,E,ikBACP,SAAAA,EAAAvN,GAMI,IAAA/B,E,MALFyN,EAAM1L,EAAN0L,OACAI,EAAS9L,EAAT8L,UACAzK,EAAIrB,EAAJqB,KACAR,EAAOb,EAAPa,QACAqD,EAAUlE,EAAVkE,WA+BE,O,4FA/BQhG,CAAA,KAAAqP,G,EAMPb,GAJHzO,EAAA0G,EAAAC,KAAA,KAAM,CACF8G,OAAAA,EACAE,QAAS,SACTE,UAAW,GAAF3J,OAAK2J,EAAS,cAAA3J,OAAad,M,EA8BjC,SAACR,GACJ5C,EAAK4C,UAAYA,IAAS5C,EAAK4C,QAAUA,GAC7C5C,EAAKuP,YAAYlB,KAAKM,YAAc3O,EAAK4C,QAAQ,GACjD5C,EAAKwP,cAAcnB,KAAKM,YAAc,GAAHzK,OAA8B,IAAxBlE,EAAK4C,QAAQgB,OAAe5D,EAAK4C,QAAQ,GAAK,GACzF,G,OAjCK,a,wFACH5C,EAAKoD,KAAOA,EACZpD,EAAK4C,QAAUA,EACf5C,EAAKiG,WAAaA,EAClBjG,EAAKqO,KAAKoB,SAAW,KACrBzP,EAAKwP,cAAgB,IAAIjC,GAAQ,CAC/BE,OAAQzN,EAAKqO,KACbV,QAAS,OACTE,UAAW,sCAEb7N,EAAKuP,YAAc,IAAIhC,GAAQ,CAC7BE,OAAQzN,EAAKqO,KACbV,QAAS,OACTE,UAAW,oCAEb7N,EAAK0P,OAAO1P,EAAK4C,SACjB5C,EAAKqO,KAAKsB,YAAc,SAACV,GACvBA,EAAMC,iBACNlP,EAAKiG,WAAWiG,UAAUlM,EAAKoD,KAAM6L,EAAMW,WAC3C5P,EAAKqO,KAAKwB,YAAc,SAACZ,GAAK,OAAKjP,EAAKqO,KAAKc,UAAUF,EAAM,CAC/D,EAEAjP,EAAKqO,KAAKc,UAAY,SAACF,GACrBjP,EAAKiG,WAAWkG,QAAQnM,EAAKoD,KAAM6L,EAAMW,WACzC5P,EAAKqO,KAAKwB,YAAc,IAC1B,EAAE7P,CAEJ,CAAC,O,EAAAsP,E,oDAAA,CAvCM,CAAS/B,I,ifCFU,IAEtBuC,GAAM,SAAAC,I,sRAAAtJ,CAAAqJ,EAAAC,GAAA,I,MAAArJ,G,EAAAoJ,E,wrBACV,SAAAA,EAAA/N,GAMG,IALD0L,EAAM1L,EAAN0L,OACAI,EAAS9L,EAAT8L,UACAzK,EAAIrB,EAAJqB,KACAR,EAAOb,EAAPa,QACAqD,EAAUlE,EAAVkE,WAAU,O,4FAAAhG,CAAA,KAAA6P,GAAApJ,EAAAC,KAAA,KAEJ,CACJ8G,OAAAA,EACAI,UAAAA,EACAzK,KAAAA,EACAR,QAAAA,EACAqD,WAAAA,GAEJ,CAAC,O,EAAA6J,E,oDAAA,CAfS,CAASR,I,ifCFO,IAEtBU,GAAQ,SAAAD,I,sRAAAtJ,CAAAuJ,EAAAD,GAAA,I,MAAArJ,G,EAAAsJ,E,wrBACZ,SAAAA,EAAAjO,GAMG,IALD0L,EAAM1L,EAAN0L,OACAI,EAAS9L,EAAT8L,UACAzK,EAAIrB,EAAJqB,KACAR,EAAOb,EAAPa,QACAqD,EAAUlE,EAAVkE,WAAU,O,4FAAAhG,CAAA,KAAA+P,GAAAtJ,EAAAC,KAAA,KAEJ,CACJ8G,OAAAA,EACAI,UAAAA,EACAzK,KAAAA,EACAR,QAAAA,EACAqD,WAAAA,GAEJ,CAAC,O,EAAA+J,E,oDAAA,CAfW,CAASV,I,ifCFK,IAEtBW,GAAW,SAAAF,I,sRAAAtJ,CAAAwJ,EAAAF,GAAA,I,MAAArJ,G,EAAAuJ,E,wrBACf,SAAAA,EAAAlO,GAMG,IALD0L,EAAM1L,EAAN0L,OACAI,EAAS9L,EAAT8L,UACAzK,EAAIrB,EAAJqB,KACAR,EAAOb,EAAPa,QACAqD,EAAUlE,EAAVkE,WAAU,O,4FAAAhG,CAAA,KAAAgQ,GAAAvJ,EAAAC,KAAA,KAEJ,CACJ8G,OAAAA,EACAI,UAAAA,EACAzK,KAAAA,EACAR,QAAAA,EACAqD,WAAAA,GAEJ,CAAC,O,EAAAgK,E,oDAAA,CAfc,CAASX,I,ifCFE,IAEtBY,GAAU,SAAAH,I,sRAAAtJ,CAAAyJ,EAAAH,GAAA,I,MAAArJ,G,EAAAwJ,E,wrBACd,SAAAA,EAAAnO,GAMC,IALC0L,EAAM1L,EAAN0L,OACAI,EAAS9L,EAAT8L,UACAzK,EAAIrB,EAAJqB,KACAR,EAAOb,EAAPa,QACAqD,EAAUlE,EAAVkE,WAAU,O,4FAAAhG,CAAA,KAAAiQ,GAAAxJ,EAAAC,KAAA,KAEJ,CACJ8G,OAAAA,EACAI,UAAAA,EACAzK,KAAAA,EACAR,QAAAA,EACAqD,WAAAA,GAEJ,CAAC,O,EAAAiK,E,oDAAA,CAfa,CAASZ,I,ifCFG,IAEtBa,GAAO,SAAAJ,I,sRAAAtJ,CAAA0J,EAAAJ,GAAA,I,MAAArJ,G,EAAAyJ,E,wrBACX,SAAAA,EAAApO,GAMG,IALD0L,EAAM1L,EAAN0L,OACAI,EAAS9L,EAAT8L,UACAzK,EAAIrB,EAAJqB,KACAR,EAAOb,EAAPa,QACAqD,EAAUlE,EAAVkE,WAAU,O,4FAAAhG,CAAA,KAAAkQ,GAAAzJ,EAAAC,KAAA,KAEJ,CACJ8G,OAAAA,EACAI,UAAAA,EACAzK,KAAAA,EACAR,QAAAA,EACAqD,WAAAA,GAEJ,CAAC,O,EAAAkK,E,oDAAA,CAfU,CAASb,I,ifCFM,IAEtBc,GAAQ,SAAAL,I,sRAAAtJ,CAAA2J,EAAAL,GAAA,I,MAAArJ,G,EAAA0J,E,wrBACZ,SAAAA,EAAArO,GAMC,IALC0L,EAAM1L,EAAN0L,OACAI,EAAS9L,EAAT8L,UACAzK,EAAIrB,EAAJqB,KACAR,EAAOb,EAAPa,QACAqD,EAAUlE,EAAVkE,WAAU,O,4FAAAhG,CAAA,KAAAmQ,GAAA1J,EAAAC,KAAA,KAEJ,CACJ8G,OAAAA,EACAI,UAAAA,EACAzK,KAAAA,EACAR,QAAAA,EACAqD,WAAAA,GAEJ,CAAC,O,EAAAmK,E,oDAAA,CAfW,CAASd,I,mhCCOvB,IAAMe,GAAS,CACb,UAAaD,GACb,WAAcA,GACd,YAAeF,GACf,aAAgBA,GAChB,SAAYC,GACZ,QAAWL,GACX,SAAYA,GACZ,UAAaE,GACb,WAAcA,GACd,SAAYC,IAGRK,GAAK,SAAA9B,I,sRAAA/H,CAAA6J,EAAA9B,GAAA,I,MAAA9H,G,EAAA4J,E,ikBACT,SAAAA,EAAAvO,GAAqD,IAAA/B,EAAvCyN,EAAM1L,EAAN0L,OAAQI,EAAS9L,EAAT8L,UAAWzL,EAAIL,EAAJK,KAAM6D,EAAUlE,EAAVkE,Y,4FAAUhG,CAAA,KAAAqQ,GAI5CpQ,GAAAuO,GAHHzO,EAAA0G,EAAAC,KAAA,KAAM,CACF8G,OAAAA,EACAI,UAAW,GAAF3J,OAAK2J,EAAS,oBACxB,gBAkBU,SAACzL,GACdpC,EAAKoC,KAAOA,EACZmH,OAAOvH,KAAKhC,EAAKuQ,MAAM7P,SAAQ,SAAC0C,EAAMoN,GACpCxQ,EAAKuQ,KAAKnN,GAAMsM,OAAO1P,EAAKgC,KAAKoB,GAAM,GAADc,OAAIlE,EAAKoC,OAAQqO,KACzD,GACF,IAACvQ,GAAAuO,GAAAzO,GAAA,QAEM,SAAA+J,GAAoB,IAAjB/H,EAAI+H,EAAJ/H,KAAMI,EAAI2H,EAAJ3H,KACdpC,EAAKoC,KAAOA,EACZpC,EAAKgC,KAAOA,EACZuH,OAAOvH,KAAKhC,EAAKgC,MAAMtB,SAAQ,SAACmB,EAAK2O,GACnC,IAAME,EAAU1Q,EAAKgC,KAAKH,GAClBoC,EAAcyM,EAAdzM,IAAKb,EAASsN,EAATtN,KACPuN,EAAiBN,GAAOjN,IAASkM,GACvCtP,EAAKuQ,KAAKnN,GAAQ,IAAIuN,EAAe,CACnClD,OAAQzN,EAAK4Q,KAAK3M,EAAM,GAAGoK,KAC3BR,UAAW,QACXzK,KAAAA,EACAR,QAAS8N,EAAQ,GAADxM,OAAIlE,EAAKoC,OAAQqO,KACjCxK,WAAYjG,EAAKiG,WAAWmG,YAQhC,GACF,IA7CEpM,EAAKoC,KAAOA,EACZpC,EAAKiG,WAAaA,EAClBjG,EAAK4Q,KAAO,CAAC,EACb5Q,EAAKgC,KAAO,CAAC,EACbhC,EAAKuQ,KAAO,CAAC,EACb,IAAK,IAAIxL,EAAI,EAAGA,EAAI,EAAGA,GAAK,EAC1B/E,EAAK4Q,KAAK7L,GAAK,IAAIwI,GAAQ,CACzBE,OAAQzN,EAAKqO,KACbR,UAAW,mBAMd,OAAA7N,CACH,CAAC,O,EAAAsQ,E,oDAAA,CArBQ,CAAS/C,I,mhCCpBY,IAE1BsD,GAAI,SAAArC,I,sRAAA/H,CAAAoK,EAAArC,GAAA,I,MAAA9H,G,EAAAmK,E,ikBACR,SAAAA,EAAA9O,GAA+C,IAAA/B,EAAjCyN,EAAM1L,EAAN0L,OAAQI,EAAS9L,EAAT8L,UAAW5H,EAAUlE,EAAVkE,WA2B/B,O,4FA3ByChG,CAAA,KAAA4Q,GAKtC3Q,GAAAuO,GAJHzO,EAAA0G,EAAAC,KAAA,KAAM,CACJ8G,OAAAA,EACAE,QAAS,OACTE,UAAW,GAAF3J,OAAK2J,EAAS,kBACtB,sBAyBgB,kBAAM7N,EAAK8Q,SAASzC,KAAKU,OAAO,IAAA7O,GAAAuO,GAAAzO,GAAA,QAE9C,SAACgC,GACNhC,EAAK+Q,MAAMC,KAAKhP,EAClB,IAAC9B,GAAAuO,GAAAzO,GAAA,gBAEc,SAACoC,GACdpC,EAAK+Q,MAAMhO,aAAaX,EAC1B,IAAClC,GAAAuO,GAAAzO,GAAA,2BAEyB,SAAC4C,GACzB5C,EAAK8Q,SAASG,WAAWrO,EAC3B,IAAC1C,GAAAuO,GAAAzO,GAAA,0BAEwB,SAAA+J,GAAoB,IAAjBtH,EAAKsH,EAALtH,MAAOC,EAAGqH,EAAHrH,IACjC1C,EAAK8Q,SAASzC,KAAK6C,kBAAkBzO,EAAOC,EAC9C,IAACxC,GAAAuO,GAAAzO,GAAA,eAEa,SAAAiK,GAAoB,IAAjBjI,EAAIiI,EAAJjI,KAAMI,EAAI6H,EAAJ7H,KACrBpC,EAAK+Q,MAAMC,KAAK,CAAEhP,KAAAA,EAAMI,KAAAA,GAC1B,IA5CEpC,EAAKiG,WAAaA,EAClBjG,EAAK4O,UAAY,IAAIrB,GAAQ,CAC3BE,OAAQzN,EAAKqO,KACbR,UAAW,8BAEb7N,EAAK8Q,SAAW,IAAIhC,GAAS,CACzBrB,OAAQzN,EAAK4O,UAAUP,KACvBR,UAAAA,EACA5H,WAAYA,EAAWkL,kBAE3BnR,EAAK+Q,MAAQ,IAAIT,GAAM,CACnB7C,OAAQzN,EAAK4O,UAAUP,KACvBR,UAAAA,EACAzL,KAAM,KACN6D,WAAYjG,EAAKiG,WAAWmL,eAOhCpR,CACF,CAAC,O,EAAA6Q,E,oDAAA,CA7BO,CAAStD,I,8qBCJb8D,GAAO,WACX,SAAAA,K,4FAAcpR,CAAA,KAAAoR,GACZ1Q,KAAKyH,KAAO,EACd,C,QAUC,O,EAVAiJ,G,EAAA,EAAAxP,IAAA,cAAAC,MAED,WAAc,IAAA9B,EAAA,KACZ,OAAOsR,MAAM,oBAAoBC,MAAK,SAACC,GAAG,OAAKA,EAAIC,MAAM,IAAEF,MAAK,SAACnJ,GAC/D,IAAKsJ,MAAMC,QAAQvJ,GACjB,MAAM,IAAIM,MAAM,mBAGlB,OADA1I,EAAKoI,KAAOA,EACLpI,EAAKoI,IACd,GACF,M,qEAACiJ,CAAA,CAbU,G,o5BCG+B,ICIpCxI,GDFF+I,GAAI,SAAApD,I,sRAAA/H,CAAAmL,EAAApD,GAAA,I,MAAA9H,G,EAAAkL,E,ikBACR,SAAAA,EAAA7P,GAA2C,IAAA/B,E,MAA7ByN,EAAM1L,EAAN0L,OAAQxH,EAAUlE,EAAVkE,WAAY4C,EAAK9G,EAAL8G,MA8B7B,O,4FA9BkC5I,CAAA,KAAA2R,G,EACInD,GAAzCzO,EAAA0G,EAAAC,KAAA,KAAM,CAAE8G,OAAAA,EAAQI,UAAW,c,EAiCtB,YACQ,IAAIwD,IACZQ,cAAcN,MAAK,SAACO,GACvB9R,EAAKoI,KAAO0J,EACZ9R,EAAKiG,WAAW8L,aAAa/R,EAAKoI,KACpC,GAIF,G,OA1C2C,W,wFACzCpI,EAAKiG,WAAaA,EAClBjG,EAAK6I,MAAQA,EACb7I,EAAKoI,KAAO,GACZpI,EAAKgC,KAAO,GACZhC,EAAKgS,OAAS,IAAIzD,GAAO,CACrBd,OAAQzN,EAAKqO,KACbR,UAAW,WACXzL,KAAM,KACN6D,WAAAA,IAEJjG,EAAKiS,KAAO,IAAIpB,GAAK,CACjBpD,OAAQzN,EAAKqO,KACbR,UAAW,WACX5H,WAAYjG,EAAKiG,aAErB+H,SAASgB,iBAAiB,WAAW,SAACC,GAAK,OAAKjP,EAAKiG,WAAWiM,QAAQjD,EAAM7L,KAAK,IAAE,GACrF4K,SAASgB,iBAAiB,SAAS,SAACC,GAAK,OAAKjP,EAAKiG,WAAWkM,MAAMlD,EAAM7L,KAAK,IAAE,GACjF4K,SAASgB,iBAAiB,SAAS,kBAAMhP,EAAKiS,KAAKG,oBAAoB,IAEvEpS,EAAK6I,MAAMhG,wBAAwBiH,KAAI,SAAClH,GAAO,OAAK5C,EAAKiS,KAAKpP,wBAAwBD,EAAQ,IAC9F5C,EAAK6I,MAAM9F,aAAa+G,KAAI,SAAC1H,GAC3BpC,EAAKgS,OAAOjP,aAAaX,GACzBpC,EAAKiS,KAAKlP,aAAaX,EACzB,IACApC,EAAK6I,MAAMrG,uBAAuBsH,KAAI,SAAChF,GAAQ,OAAK9E,EAAKiS,KAAKzP,uBAAuBsC,EAAS,IAC9F9E,EAAK6I,MAAM3G,YAAY4H,KAAI,SAAAC,GAAoB,IAAjB/H,EAAI+H,EAAJ/H,KAAMI,EAAI2H,EAAJ3H,KAClCpC,EAAKgS,OAAOjP,aAAaX,GACzBpC,EAAKiS,KAAK/P,YAAY,CAAEF,KAAAA,EAAMI,KAAAA,GAChC,IAAGpC,CACL,CAAC,O,EAAA4R,E,oDAAA,CAhCO,CAASrE,IEHb8E,QDOS,IAAIT,GAAK,CACpBnE,OCRsBO,SAASsE,KDS/BrM,WAHiB,IAAI2C,GADjBC,GAAQ,IAAIjI,GAKhBiI,MAAAA,KAEGmI,OCXPuB,OAAOF,SAAWA,E","sources":["webpack://my-webpack-project/./src/component/helper/signal.js","webpack://my-webpack-project/./src/component/Store.js","webpack://my-webpack-project/./src/component/Buffer.js","webpack://my-webpack-project/./src/component/Editor.js","webpack://my-webpack-project/./src/component/command/Command.js","webpack://my-webpack-project/./src/component/command/Add.js","webpack://my-webpack-project/./src/component/command/Delete.js","webpack://my-webpack-project/./src/component/EditHistory.js","webpack://my-webpack-project/./src/component/command/Copy.js","webpack://my-webpack-project/./src/component/command/Replace.js","webpack://my-webpack-project/./src/component/command/Cut.js","webpack://my-webpack-project/./src/component/command/Paste.js","webpack://my-webpack-project/./src/component/LocalStorage.js","webpack://my-webpack-project/./src/component/Controller.js","webpack://my-webpack-project/./src/component/helper/element.js","webpack://my-webpack-project/./src/component/Header.js","webpack://my-webpack-project/./src/component/Textarea.js","webpack://my-webpack-project/./src/component/key/Key.js","webpack://my-webpack-project/./src/component/key/KeyAlt.js","webpack://my-webpack-project/./src/component/key/KeyArrow.js","webpack://my-webpack-project/./src/component/key/KeyCapsLook.js","webpack://my-webpack-project/./src/component/key/KeyControl.js","webpack://my-webpack-project/./src/component/key/KeyMeta.js","webpack://my-webpack-project/./src/component/key/KeyShift.js","webpack://my-webpack-project/./src/component/Board.js","webpack://my-webpack-project/./src/component/Main.js","webpack://my-webpack-project/./src/component/helper/data-api.js","webpack://my-webpack-project/./src/component/View.js","webpack://my-webpack-project/./src/component/Keyboard.js","webpack://my-webpack-project/./src/index.js"],"sourcesContent":["class Signal {\n  constructor() {\n    this._listener = [];\n  }\n  \n  add = (listener) => {\n    this._listener.push(listener);\n  };\n  \n  remove = (param) => {\n    this._listener = this._listener.filter(elem => elem !== listener);\n  };\n  \n  emit = (params) => {\n    this._listener.forEach(listener => listener(params));\n  };\n}\n\nexport { Signal };\n","import { Signal } from \"./helper/signal\";\n\nclass Store {\n  constructor() {\n    this._langIndex = 0;\n    this._langMap = ['en', 'ru'];\n    this._textareaContent = '';\n    this._textareaRow = [''];\n    this._cursor = { line: 0, pos: 0, number: 0 };\n    this._keys = {};\n    this._activeBtns = {};\n    this._lastControl = { id: null, time: null };\n    this._activeControls = {};\n    this._lastKey = null;\n    this._capsLock = false;\n    \n  }\n  \n  setInitState({ keys, langIndex }) {\n    this._langIndex = langIndex;\n    this._keys = keys;\n    this.onInitState.emit({\n      keys,\n      lang: this._langMap[langIndex],\n    });\n  }\n  \n  get cursor() {\n    return this._cursor;\n  }\n\n  set cursor(newPosition) {\n    this._cursor = newPosition;\n    this.onChangeCursorPosition.emit({\n      start: this._cursor.number,\n      end: this._cursor.number,\n    });\n    // this.onChangeLocalStorageData.emit({\n    //   lang: this.langMap[this.langIndex],\n    //   textareaContent: this.textareaContent,\n    //   textareaRow: this.textareaRow,\n    //   cursor: this.cursor,\n    // });\n  }\n\n  get textareaRow() {\n    return this._textareaRow;\n  }\n\n  set textareaRow(textareaRow) {\n    this._textareaRow = textareaRow;\n    // this.onChangeLocalStorageData.emit({\n    //   lang: this.langMap[this.langIndex],\n    //   textareaContent: this.textareaContent,\n    //   textareaRow: this.textareaRow,\n    //   cursor: this.cursor,\n    // });\n  }\n\n  get() {\n    return this;\n  }\n  \n  get textareaContent() {\n    return this._textareaContent;\n  }\n  \n  set textareaContent(content) {\n    this._textareaContent = content;\n    this.onChangeTextareaContent.emit(this._textareaContent);\n    // this.onChangeLocalStorageData.emit({\n    //   lang: this.langMap[this.langIndex],\n    //   textareaContent: this.textareaContent,\n    //   textareaRow: this.textareaRow,\n    //   cursor: this.cursor,\n    // });\n\n  }\n  \n  get keys() {\n    return this._keys;\n  }\n  \n  set keys(keysMap) {\n    this._keys = keysMap;\n  }\n  \n  get langIndex() {\n    return this._langIndex;\n  }\n  \n  set langIndex(langIndex) {\n    this._langIndex = langIndex;\n    this.onChangeLang.emit(this._langMap[this._langIndex]);\n    this.onChangeLocalStorageData.emit({\n      lang: this._langMap[this.langIndex],\n      textareaContent: this.textareaContent,\n      textareaRow: this.textareaRow,\n      cursor: this.cursor,\n    });\n  }\n  \n  get lang() {\n    return this._langMap;\n  }\n  \n  set lang(langMap) {\n    this._langMap = langMap;\n  }\n  \n  getKeyContent(code) {\n    return this._keys[code] || false;\n  }\n  \n  get activeBtns() {\n    return this._activeBtns;\n  }\n  \n  set activeBtns(btnsMap) {\n    this._activeBtns = btnsMap;\n  }\n  \n  get lastControl() {\n    return this._lastControl;\n  }\n  \n  set lastControl(newLastControl) {\n    this._lastControl = newLastControl;\n  }\n  \n  get activeControls() {\n    return this._activeControls;\n  }\n  \n  set activeControls(newActiveControls) {\n    this._activeControls = newActiveControls;\n  }\n  \n  get lastKey() {\n    return this._lastKey;\n  }\n  \n  set lastKey(newLastKey) {\n    this._lastKey = newLastKey;\n  }\n  \n  get capsLock() {\n    return this._capsLock;\n  }\n  \n  set capsLock(flag) {\n    this._capsLock = flag;\n  }\n  \n  onChangeLocalStorageData = new Signal();\n  onChangeTextareaContent = new Signal();\n  onChangeLang = new Signal();\n  onChangeCursorPosition = new Signal();\n  onInitState = new Signal();\n}\n\nexport { Store };\n","class Buffer {\n  constructor() {\n    this.buffer = [];\n  }\n  \n  getLast = () => {\n    return this.buffer[this.buffer.length - 1] || '';\n  };\n  \n  push = (string) => {\n    this.buffer.push(string);\n  }\n}\n\nexport { Buffer };\n","import { Buffer } from './Buffer';\nclass Editor {\n  constructor() {\n    this.textareaContent = '';\n    this.textareaRow = [];\n    this.cursor = { line: 0, pos: 0, number: 0 };\n    this.maxRowLength = 77;\n    this.buffer = new Buffer();\n    this.selectPosition = null;\n  }\n  prepareTextareaRow = (string) => {\n    const splitText = string.split('\\n').map((row) => `${row}\\n`);\n    // if (splitText.length === 1) splitText[0] = splitText[0].slice(0, splitText[0].length - 1);\n    const textArr = splitText.map((row) => {\n      if (row.length <= this.maxRowLength) return row;\n      const arr = [];\n      let restString = row;\n      while(restString.length > 77) {\n        const rows = restString.match(/.{1,77}/g);\n        const lastSpaceIndex = rows[0].lastIndexOf(' ');\n        if (lastSpaceIndex !== -1) {\n          arr.push(restString.slice(0, lastSpaceIndex + 1));\n          restString = string.slice(lastSpaceIndex + 1);\n        }\n\n      }\n      arr.push(restString);\n      return arr;\n    });\n    return textArr.flat();\n  }\n  \n  // overloadLastRow = (string) => {\n  //   const lastSpaceIndex = string.lastIndexOf(' ');\n  //   if (lastSpaceIndex !== -1) {\n  //     const row = string.slice(0, lastSpaceIndex) + '\\n';\n  //     const lastRow = string.slice(lastSpaceIndex + 1);\n  //     return [ row, lastRow ];\n  //   }\n  // }\n  addSymbol(symbol) {\n    const { line, pos, number } = this.cursor;\n    if (number === this.textareaContent.length) {\n      const newTextareaContent = this.textareaContent + symbol;\n      this.textareaContent = newTextareaContent;\n      this.textareaRow = this.prepareTextareaRow(this.textareaContent);\n      const cursorPosition = this.findCursorPosition(number + symbol.length);\n      this.cursor = {\n        number: number + symbol.length,\n        ...cursorPosition,\n      }\n\n      // if (symbol === '\\n') {\n      //   this.textareaRow[line] += symbol;\n      //   this.textareaRow.push('');\n      //   this.cursor = { line: (line + 1), pos: 0, number: (number + 1) };\n      // } else if (this.textareaRow[line].length === this.maxRowLength) {\n      //   if (symbol === ' ') {\n      //     this.textareaRow[line] += `\\n`;\n      //     this.textareaRow.push('');\n      //     this.cursor = { line: (line + 1), pos: 0, number: (number + 1) };\n      //   } else if (symbol === '    ') {\n      //     this.textareaRow[line] += `\\n`;\n      //     this.textareaRow.push('   ');\n      //     this.cursor = { line: (line + 1), pos: 3, number: (number + 4) };\n      //   } else {\n      //     const lastTwoRows = this.overloadLastRow(this.textareaRow[line] + symbol);\n      //     this.textareaRow.pop();\n      //     this.textareaRow.push(...lastTwoRows);\n      //     this.cursor = { line: (line + 1), pos: lastTwoRows[1].length, number: (number + 1) };\n      //   }\n      // } else {\n      //   this.textareaRow[line] += symbol;\n      //   this.cursor = { line, pos: (pos + 1), number: (number + 1) };\n      // }\n    } else {\n      // если курсор внутри текста\n      this.textareaContent = this.textareaContent.slice(0, number) + symbol + this.textareaContent.slice(number);\n      this.textareaRow = this.prepareTextareaRow(this.textareaContent);\n      const cursorPosition = this.findCursorPosition(number + symbol.length);\n      this.cursor = {\n        number: number + symbol.length,\n        ...cursorPosition,\n      }\n      // if (symbol === '\\n') {\n      //   this.cursor = {\n      //     line: (line + 1),\n      //     pos: 0,\n      //     number: (number + 1),\n      //   };\n      // } else {\n      //   this.cursor = {\n      //     line,\n      //     pos: (pos + 1),\n      //     number: (number + 1),\n      //   };\n      // }\n    }\n  }\n  \n  setCursorPosition = (number) => {\n    this.cursor = {\n      number,\n      ...this.findCursorPosition(number),\n    };\n  };\n  \n  findCursorPosition = (number) => {\n    let sumOfRowsLengths = 0;\n    const position = {};\n    for (let i = 0; i < this.textareaRow.length; i++) {\n      if (number - sumOfRowsLengths < this.textareaRow[i].length) {\n        position.line = i;\n        position.pos = number - sumOfRowsLengths;\n        break;\n      }\n      sumOfRowsLengths += this.textareaRow[i].length;\n    }\n    return position;\n  }\n\n  deleteSymbol(direction) {\n    const { line, pos, number } = this.cursor;\n    if (number === this.textareaContent.length) {\n      if (direction === 'prev') {\n        const newTextareaContent = this.textareaContent.slice(0, -1);\n        this.textareaContent = newTextareaContent;\n        this.textareaRow = this.prepareTextareaRow(this.textareaContent);\n        this.cursor = {\n          number: (this.textareaContent.length),\n          line: (this.textareaRow.length - 1),\n          pos: (this.textareaRow[this.textareaRow.length - 1].length),\n        };\n  \n      }\n    } else if (direction === 'prev') {\n      if (number !== 0) {\n        this.textareaContent = this.textareaContent.slice(0, number - 1) + this.textareaContent.slice(number);\n        this.textareaRow = this.prepareTextareaRow(this.textareaContent);\n        const cursorPosition = this.findCursorPosition(number - 1);\n        this.cursor = {\n          number: number - 1,\n          ...cursorPosition,\n        }\n      }\n    } else {\n      if (number < this.textareaContent.length) {\n        this.textareaContent = this.textareaContent.slice(0, number) + this.textareaContent.slice(number + 1);\n        this.textareaRow = this.prepareTextareaRow(this.textareaContent);\n        this.cursor = {\n          number,\n          line,\n          pos,\n        };\n      }\n    }\n    \n  };\n\n  replaceSelect(startSelect, endSelect, part) {\n    const start = Math.min(startSelect, endSelect);\n    const end = Math.max(startSelect, endSelect);\n    this.textareaContent = this.textareaContent.slice(0, start) + part + this.textareaContent.slice(end);\n    this.textareaRow = this.prepareTextareaRow(this.textareaContent);\n\n    const cursorPosition = this.findCursorPosition(start + part.length);\n    this.cursor = {\n      number: start + part.length,\n      ...cursorPosition,\n    };\n\n  }\n  \n  saveSelect = (startSelect, endSelect) => {\n    const start = Math.min(startSelect, endSelect);\n    const end = Math.max(startSelect, endSelect);\n    const copyText = this.textareaContent.slice(start, end);\n    this.buffer.push(copyText);\n  }\n\n  cutSelect = (startSelect, endSelect) => {\n    const start = Math.min(startSelect, endSelect);\n    const end = Math.max(startSelect, endSelect);\n    const cutText = this.textareaContent.slice(start, end);\n    this.buffer.push(cutText);\n    this.textareaContent = this.textareaContent.slice(0, start) + this.textareaContent.slice(end);\n    this.textareaRow = this.prepareTextareaRow(this.textareaContent);\n\n    const cursorPosition = this.findCursorPosition(start);\n    this.cursor = {\n      number: start,\n      ...cursorPosition,\n    };\n  }\n\n  // replaceSelect(selectText) {\n  //   this.selectText = selectText;\n  // }\n\n  // changeTextareaRow() {\n  //   const splitText = this.textareaContent.split('\\n').map((row) => `${row}\\n`);\n  //   if (splitText.length === 1) splitText[0] = splitText[0].slice(0, splitText[0].length - 1);\n  //   const textArr = splitText.map((row) => {\n  //     if (row.length <= this.maxRowLength) return row;\n  //     return row.match(/.{1,77}/g);\n  //   });\n  //   return textArr.flat();\n  // }\n}\n\nexport { Editor };\n","class Command {\n  constructor(controller, editor, onExecute) {\n    this.controller = controller;\n    this.editor = editor;\n    this.backupTextareaContent = '';\n    this.backupCursor = { line: 0, pos: 0, number: 0 };\n    this.textareaRow = [''];\n    this.execute = () => onExecute();\n  }\n\n  saveBackup() {\n    this.backupTextareaContent = this.editor.textareaContent;\n    this.backupCursor = this.editor.cursor;\n    this.textareaRow = this.editor.textareaRow;\n  }\n\n  undo() {\n    this.editor = this.backupTextareaContent;\n  }\n}\n\nexport { Command };\n","import { Command } from './Command.js';\n\nclass Add extends Command {\n  constructor(controller, editor) {\n    super(controller, editor, () => {\n      editor.addSymbol(controller.newSymbol);\n      this.saveBackup();\n      return true;\n    });\n  }\n}\n\nexport { Add };\n","import { Command } from './Command.js';\n\nclass Delete extends Command {\n  constructor(controller, editor) {\n    super(controller, editor, () => {\n      editor.deleteSymbol(controller.deleteDirection);\n      this.saveBackup();\n      return true;\n    });\n  }\n}\n\nexport { Delete };\n","class History {\n  constructor(initialData) {\n    this.history = [initialData];\n    this.activeCommandIndex = 0;\n  }\n\n  save(command) {\n    this.activeCommandIndex += 1;\n    if (this.history.length > this.activeCommandIndex) {\n      this.history = this.history.slice(0, this.activeCommandIndex);\n    }\n    this.history[this.activeCommandIndex] = command;\n  }\n\n  back() {\n    if (this.activeCommandIndex === 0) return false;\n    this.activeCommandIndex -= 1;\n    return this.history[this.activeCommandIndex];\n  }\n\n  next() {\n    if (this.activeCommandIndex + 1 === this.history.length) return false;\n    this.activeCommandIndex += 1;\n    return this.history[this.activeCommandIndex];\n  }\n}\n\nexport { History };\n","import { Command } from './Command.js';\n\nclass Copy extends Command {\n  constructor(controller, editor) {\n    super(controller, editor, () => {\n      editor.saveSelect(controller.selectedTextRange.start, controller.selectedTextRange.end);\n      return false;\n    });\n  }\n}\n\nexport { Copy };\n","import { Command } from './Command.js';\n\nclass Replace extends Command {\n  constructor(controller, editor) {\n    super(controller, editor, () => {\n      editor.replaceSelect(controller.selectedTextRange.start, controller.selectedTextRange.end, controller.newSymbol);\n      this.saveBackup();\n      return true;\n    });\n  }\n}\n\nexport { Replace };\n","import { Command } from './Command.js';\n\nclass Cut extends Command {\n  constructor(controller, editor) {\n    super(controller, editor, () => {\n      editor.cutSelect(controller.selectedTextRange.start, controller.selectedTextRange.end);\n      this.saveBackup();\n      return true;\n    });\n  }\n}\n\nexport { Cut };\n","import { Command } from './Command.js';\n\nclass Paste extends Command {\n  constructor(controller, editor) {\n    super(controller, editor, () => {\n      editor.addSymbol(controller.newSymbol);\n      this.saveBackup();\n      return true;\n    });\n  }\n}\n\nexport { Paste };\n","class LocalStorageData {\n  constructor({ lang = 'en', textareaContent = '', textareaRow = [''], cursor = { number: 0, line: 0, pos:0} }) {\n    this.lang = lang;\n    this.textareaContent = textareaContent;\n    this.textareaRow = textareaRow;\n    this.cursor = cursor;\n  }\n\n  static toJson(data) {\n    return JSON.stringify(data);\n  }\n\n  static instanceOfISourcesLStorage(object, key) {\n    return key in object;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  static fromJson(data) {\n    \n    const initData = {};\n\n    if (data === null || typeof data !== 'object') {\n      throw new Error('Not object in localstorage');\n    }\n\n    if (this.instanceOfISourcesLStorage(data, 'lang')) {\n      initData.lang = data.lang;\n    }\n\n    if (this.instanceOfISourcesLStorage(data, 'textareaContent')) {\n      initData.textareaContent = data.textareaContent;\n    }\n\n    if (this.instanceOfISourcesLStorage(data, 'textareaRow')) {\n      initData.textareaRow = data.textareaRow;\n    }\n\n    if (this.instanceOfISourcesLStorage(data, 'cursor')) {\n      initData.cursor = data.cursor;\n    }\n\n    return new LocalStorageData(initData);\n  }\n}\n\nexport { LocalStorageData };\n","import { Editor } from \"./Editor\";\nimport { Add } from './command/Add';\nimport { Delete } from './command/Delete';\nimport { History } from \"./EditHistory\";\nimport { Copy } from \"./command/Copy\";\nimport { Replace } from \"./command/Replace\";\nimport { Cut } from \"./command/Cut\";\nimport { Paste } from \"./command/Paste\";\nimport { LocalStorageData } from \"./LocalStorage\";\n\nclass Controller {\n  constructor(store) {\n    this.store = store;\n    this.editor = new Editor();\n    this.history = new History({\n      backupTextareaContent: '',\n      backupCursor: { line: 0, pos: 0, number: 0 },\n      backupTextareaRow: [''],\n    });\n    this.localStorageData = this.getLocalStorageData();\n    this.activeBtns = {};\n    this.lastControl = { id: null, time: null };\n    this.activeControls = {};\n    this.lastKey = null;\n    this.newSymbol = null;\n    this.selectedTextRange = null;\n    \n    this.store.onChangeLocalStorageData.add((data) => this.toLocalStorageData(data));\n\n  }\n\n  controlCombinations = [\n    // ['Control', 'Delete'],\n    // ['Control', 'Backspace'],\n    ['Control', 'KeyX'],\n    ['Control', 'KeyC'],\n    ['Control', 'KeyV'],\n    ['Control', 'KeyZ'],\n    // ['Control', 'KeyS'],\n    // ['Control', 'KeyA'],\n    // ['Control', 'KeyB'],\n    // ['Control', 'KeyI'],\n    // ['Control', 'KeyU'],\n    // ['Control', 'BracketLeft'],\n    // ['Control', 'BracketRight'],\n    // ['Control', 'KeyL'],\n    // ['Control', 'KeyE'],\n    // ['Control', 'KeyR'],\n    ['Control', 'KeyY'],\n    ['Control', 'Shift'],\n  ];\n\n  excludeKey = ['F1', 'F2', 'F3', 'F4', 'F5', 'F6', 'F7', 'F8', 'F9', 'F10', 'F11', 'F12'];\n  \n  toLocalStorageData = (dataFromLocalSorage) => {\n    localStorage.setItem('virtual_keyboard_by_Mi', LocalStorageData.toJson(dataFromLocalSorage));\n  }\n\n  \n  getLocalStorageData = () => {\n    try {\n      const data = LocalStorageData.fromJson(JSON.parse(localStorage.getItem('virtual_keyboard_by_Mi') || ''));\n      return data;\n    } catch (e) {\n      return new LocalStorageData();\n    }\n  }\n\n\n  hasActiveShift = () => {\n    const activeKeys = Object.keys(this.activeControls)\n      .filter((i) => this.activeControls[i] !== 0);\n    return activeKeys.length === 1 && (activeKeys.includes('ShiftLeft') || activeKeys.includes('ShiftRight'));\n  };\n\n  symbol = (code, { value, value_shift: shiftValue }) => {\n    let symbol = '';\n    if (code.includes('Key')) {\n      symbol = (\n        (this.hasActiveShift() && !this.store.capsLock) || (!this.hasActiveShift() && this.store.capsLock)\n      ) ? shiftValue : value;\n    }\n    else symbol = this.hasActiveShift() ? shiftValue : value;\n\n    this.add(symbol);\n  };\n\n  delete = (code, { value }) => {\n    this.deleteDirection = code === 'Backspace' ? 'prev' : 'next';\n    this.editor.textareaContent = this.store.textareaContent;\n    this.editor.textareaRow = this.store.textareaRow;\n    this.editor.cursor = this.store.cursor;\n    this.executeCommand(new Delete(this, this.editor));\n    this.store.textareaContent = this.editor.textareaContent;\n    this.store.textareaRow = this.editor.textareaRow;\n    this.store.cursor = this.editor.cursor;\n    this.deleteDirection = null;\n  };\n\n  space = (code, { value }) => {\n    this.add(value);\n  };\n\n  capsLock = (code, { value }) => {\n    const caps = this.store.capsLock;\n    this.store.capsLock = !caps;\n  };\n\n  moveCursor = (code) => {\n    const direction = code.slice(5).toLowerCase();\n    if (this.isSelectedText) {\n      \n      const start = Math.min(this.selectedTextRange.start, this.selectedTextRange.end);\n      const end = Math.max(this.selectedTextRange.start, this.selectedTextRange.end);\n      \n      this.editor.textareaContent = this.store.textareaContent;\n      this.editor.textareaRow = this.store.textareaRow;\n      this.editor.cursor = this.store.cursor;\n      this.editor.setCursorPosition(\n        (direction === 'left' || direction === 'up')\n          ? start : end\n      );\n      this.store.cursor = this.editor.cursor;\n      this.isSelectedText = false;\n      this.isCopiedText = false;\n      this.selectedTextRange = null;\n      if (direction === 'left' || direction === 'right') return true;;\n    }\n\n    this.cursorHandler[direction]();\n    return true;\n  }\n\n  add = (symbol) => {\n    this.newSymbol = symbol;\n\n    if (this.isSelectedText) {\n      \n      this.editor.textareaContent = this.store.textareaContent;\n      this.editor.textareaRow = this.store.textareaRow;\n      this.editor.cursor = this.store.cursor;\n      this.executeCommand(new Replace(this, this.editor));\n      this.store.textareaContent = this.editor.textareaContent;\n      this.store.textareaRow = this.editor.textareaRow;\n      this.store.cursor = this.editor.cursor;\n      this.isSelectedText = false;\n      this.isCopiedText = false;\n      this.selectedTextRange = null;\n      this.newSymbol = '';\n      return;\n    }\n\n    this.editor.textareaContent = this.store.textareaContent;\n    this.editor.textareaRow = this.store.textareaRow;\n    this.editor.cursor = this.store.cursor;\n    this.executeCommand(new Add(this, this.editor));\n    this.store.textareaContent = this.editor.textareaContent;\n    this.store.textareaRow = this.editor.textareaRow;\n    this.store.cursor = this.editor.cursor;\n    this.newSymbol = '';\n    // const textareaContent = this.store.textareaContent + symbol;\n    // this.store.textareaContent = textareaContent;\n\n  };\n\n  mouseDown = (code, time) => {\n    const lang = this.store.lang[this.store.langIndex];\n    const key = this.store.getKeyContent(code);\n    const { type } = key;\n    // this.activeBtns = this.store.activeBtns;\n    // this.lastControl = this.store.lastControl;\n    // this.activeControls = this.store.activeControls;\n    // this.lastKey = this.store.lastKey;\n\n    if (type === 'control') {\n      if ((this.lastControl.id && this.lastControl.id === code)\n        && (this.lastControl.time && ((time - this.lastControl.time) < 300))) {\n        // если последняя контольная есть и совпадает с пришедшей \n        // и отличие во времени меньше 300 мсек\n        // то добавляем в активные контролы\n        this.activeControls[code] = 1;\n        // возможно можно убрать - это активные бтны сохраняются\n        // также по коду\n        this.activeBtns[code] = 1;\n        // также заменяем последнюю кнопку на пришедшую\n        this.lastKey = code;\n      } else {\n        if (!this.hasControls()) {\n          // если контрольных точек до этого еще не выбрано\n          // то просто записывает в последнюю контрльную\n          this.lastControl = { id: code, time };\n          this.activeBtns[code] = 1;\n          this.lastKey = code;\n        } else {\n          if (this.activeControls[code]) {\n            this.activeControls[code] = 0;\n            this.activeBtns[code] = 1;\n            this.lastKey = code;\n            this.lastControl = { id: null, time: null };\n          } else if (!this.hasControlCombination(code)) {\n            this.activeControls[code] = 0;\n            this.activeBtns[code] = 1;\n            this.lastKey = code;\n            this.lastControl = { id: code, time };\n            // здесь надо еще проверка на колво акт.контролов\n            // чтоб не превышала цепочка в 4 контрола, иначе сброс\n          } else {\n            this.resetControls();\n            this.lastControl = { id: null, time: null };\n            this.activeBtns[code] = 1;\n            this.lastKey = code;\n          }\n        }\n      }\n    } else if (this.hasControls()) {\n      if (this.hasControlCombination(code)) {\n        this.resetControls();\n        this.lastControl = { id: null, time: null };\n        this.lastKey = code;\n        this.activeBtns[code] = 1;\n      } else {\n        // if (type === 'capsLock') this.state.changeCapsLock();\n        // else if (type === 'move') this.moveCursor(code);\n        // else if (type === 'delete') this.delete(code);\n        // else \n        if (type === 'meta' || !this.editMap[type]);\n        else this.editMap[type](code, key[lang]);\n        this.resetControls();\n        this.lastControl = { id: null, time: null };\n        this.lastKey = code;\n        this.activeBtns[code] = 1;\n      }\n    } else {\n      // если нет выбранных контрольных\n      this.lastControl = { id: null, time: null };\n      this.lastKey = code;\n      this.activeBtns[code] = 1;\n      if (type === 'meta' || !this.editMap[type]);\n      else this.editMap[type](code, key[lang]);\n    }\n    this.store.activeBtns = this.activeBtns;\n  }\n\n  mouseUp = (code, time) => {\n    // console.log(code);\n    const lang = this.store.lang[this.store.langIndex];\n    const key = this.store.getKeyContent(code);\n    const { type } = key;\n\n    this.activeBtns = this.store.activeBtns;\n    if (this.lastKey === code) {\n      if (this.hasControls()) {\n        if (this.activeControls[code] === 0) this.activeBtns[code] = 0;\n        this.lastKey = null;\n      } else {\n        const arr = Object.keys(this.activeBtns);\n        for (let i = 0; i < arr.length; i += 1) {\n          this.activeBtns[arr[i]] = 0;\n        }\n      }\n    } else if (this.lastKey !== null) {\n      if (this.hasControls()) {\n        if (this.activeControls[this.lastKey] === 0) this.activeBtns[this.lastKey] = 0;\n        this.lastKey = null;\n      } else {\n        const arr = Object.keys(this.activeBtns);\n        for (let i = 0; i < arr.length; i += 1) {\n          this.activeBtns[arr[i]] = 0;\n        }\n      }\n    }\n    this.store.activeBtns = this.activeBtns;\n    \n    if (!(type === 'control' || type === 'capslock' || type === 'meta') && this.isSelectedText && !this.isCopiedText) {\n      // this.selectedTextRange = null;\n      this.isSelectedText = false;\n    }\n  }\n\n  resetControls = () => { this.activeControls = {}; };\n\n  hasControlCombination(code) {\n    const controlsKeys = Object.keys(this.activeControls)\n      .filter((i) => (this.activeControls[i] !== 0));\n    controlsKeys.push(code);\n    const activeControlsKeys = controlsKeys\n      .map((i) => {\n        if (i === 'ShiftLeft' || i === 'ShiftRight') return 'Shift';\n        if (i === 'AltLeft' || i === 'AltRight') return 'Alt';\n        if (i === 'ControlLeft' || i === 'ControlRight') return 'Control';\n        return i;\n      });\n    for (let i = 0; i < this.controlCombinations.length; i += 1) {\n      if (this.controlCombinations[i].every((l) => (activeControlsKeys.includes(l)))) {\n        if (this.controlCombinations[i].join('') === 'ControlShift') {\n          const langIndex = this.store.langIndex;\n          this.store.langIndex = (langIndex + 1) % this.store.lang.length;\n          // localStorage.setItem('key_lang', lang);\n        }\n        if (this.controlCombinations[i].join('') === 'ControlKeyZ') {\n          if (this.isSelectedText) {\n            this.isSelectedText = false;\n            this.isCopiedText = false;\n            this.selectedTextRange = null;\n          }\n      \n          const backCommand = this.history.back();\n          if (backCommand) {\n            this.store.textareaContent = backCommand.backupTextareaContent;\n            this.store.cursor = backCommand.backupCursor;\n            this.store.textareaRow = backCommand.textareaRow;\n          }\n        }\n        if (this.controlCombinations[i].join('') === 'ControlKeyY') {\n          if (this.isSelectedText) {\n            this.isSelectedText = false;\n            this.isCopiedText = false;\n            this.selectedTextRange = null;\n          }\n\n          const backCommand = this.history.next();\n          if (backCommand) {\n            this.store.textareaContent = backCommand.backupTextareaContent;\n            this.store.cursor = backCommand.backupCursor;\n            this.store.textareaRow = backCommand.textareaRow;\n          }\n        }\n        if (this.controlCombinations[i].join('') === 'ControlKeyX' && this.isSelectedText) {\n          this.editor.textareaContent = this.store.textareaContent;\n          this.editor.selectPosition = this.selectedTextRange;\n          this.executeCommand(new Cut(this, this.editor));\n          this.store.textareaContent = this.editor.textareaContent;\n          this.store.textareaRow = this.editor.textareaRow;\n          this.store.cursor = this.editor.cursor;\n      \n          this.isSelectedText = false;\n          this.isCopiedText = false;\n          this.selectedTextRange = null;\n        }\n        if (this.controlCombinations[i].join('') === 'ControlKeyV') {\n          this.newSymbol = this.editor.buffer.getLast();\n          this.editor.textareaContent = this.store.textareaContent;\n          this.editor.textareaRow = this.store.textareaRow;\n          this.editor.cursor = this.store.cursor;\n          \n          if (this.isSelectedText) {\n            \n            this.executeCommand(new Replace(this, this.editor));\n            this.store.textareaContent = this.editor.textareaContent;\n            this.store.textareaRow = this.editor.textareaRow;\n            this.store.cursor = this.editor.cursor;\n            this.isSelectedText = false;\n            this.isCopiedText = false;\n            this.selectedTextRange = null;\n            return;\n          }\n      \n          this.executeCommand(new Paste(this, this.editor));\n          this.store.textareaContent = this.editor.textareaContent;\n          this.store.textareaRow = this.editor.textareaRow;\n          this.store.cursor = this.editor.cursor;\n      \n          this.isSelectedText = false;\n          this.isCopiedText = false;\n          this.selectedTextRange = null;\n          this.newSymbol = '';\n        }\n        if (this.controlCombinations[i].join('') === 'ControlKeyC' && this.isSelectedText) {\n          this.editor.textareaContent = this.store.textareaContent;\n          this.executeCommand(new Copy(this, this.editor));\n          this.isCopiedText = true;\n        }\n        return this.controlCombinations[i];\n      }\n    }\n    return null;\n  }\n\n  hasControls = () => Object.keys(this.activeControls)\n    .filter((i) => this.activeControls[i] !== 0).length !== 0;\n\n  keyDown = (code) => {\n    if (this.excludeKey.includes(code)) return;\n    const lang = this.store.lang[this.store.langIndex];\n    const key = this.store.getKeyContent(code);\n    if (!key) {\n      if (this.isSelectedText) {\n        this.isSelectedText = false;\n        this.isCopiedText = false;\n        this.setCursorFromTextarea(this.selectedTextRange.end);\n        this.store.cursor = this.editor.cursor;\n        this.selectedTextRange = null;\n        this.isSelectedText = false;\n        this.isCopiedText = false;\n      }\n      return;\n    }\n    const { type } = key;\n\n    this.activeBtns = this.store.activeBtns;\n    if (type === 'control') {\n      if (!this.hasControls()) {\n        this.activeControls[code] = 1;\n        this.activeBtns[code] = 1;\n      }\n      if (this.hasControls()) {\n        if (this.activeControls[code]) {\n          this.activeBtns[code] = 1;\n        } else if (!this.hasControlCombination(code)) {\n          this.activeControls[code] = 1;\n          this.activeBtns[code] = 1;\n        } else {\n          this.activeBtns[code] = 1;\n        }\n      }\n    } else if (this.hasControls()) {\n      if (this.hasControlCombination(code)) {\n        this.activeBtns[code] = 1;\n      } else {\n        if (type === 'meta' || !this.editMap[type]) {\n          if (this.isSelectedText) {\n            this.isSelectedText = false;\n            this.isCopiedText = false;\n            this.setCursorFromTextarea(this.selectedTextRange.end);\n            this.store.cursor = this.editor.cursor;\n            this.selectedTextRange = null;\n            this.isSelectedText = false;\n            this.isCopiedText = false;\n          }\n        }\n        else this.editMap[type](code, key[lang]);\n        this.activeBtns[code] = 1;\n      }\n    } else {\n      this.activeBtns[code] = 1;\n      if (type === 'meta' || !this.editMap[type]) {\n        if (this.isSelectedText) {\n          this.isSelectedText = false;\n          this.isCopiedText = false;\n          this.setCursorFromTextarea(this.selectedTextRange.end);\n          this.store.cursor = this.editor.cursor;\n          this.selectedTextRange = null;\n          this.isSelectedText = false;\n          this.isCopiedText = false;\n        }\n      }\n      else this.editMap[type](code, key[lang]);\n    }\n    this.store.activeBtns = this.activeBtns;\n  }\n\n\n  keyUp = (code) => {\n    if (this.excludeKey.includes(code)) return;\n\n    const lang = this.store.lang[this.store.langIndex];\n    const key = this.store.getKeyContent(code);\n    if (!key) {\n      if (this.isSelectedText) {\n        this.isSelectedText = false;\n        this.isCopiedText = false;\n        this.setCursorFromTextarea(this.selectedTextRange.end);\n        this.store.cursor = this.editor.cursor;\n        this.selectedTextRange = null;\n        this.isSelectedText = false;\n        this.isCopiedText = false;\n      }\n      return;\n    }\n\n    const { type } = key;\n\n    this.activeBtns = this.store.activeBtns;\n    if (this.hasControls()) {\n      this.activeBtns[code] = 0;\n      if (this.activeControls[code] === 1) {\n        this.activeControls[code] = 0;\n      }\n    } else {\n      if (this.activeControls[code] === 1) this.activeControls[code] = 0;\n      const arr = Object.keys(this.activeBtns);\n      for (let i = 0; i < arr.length; i += 1) {\n        this.activeBtns[arr[i]] = 0;\n      }\n    }\n    this.store.activeBtns = this.activeBtns;\n    \n    if (!(type === 'control' || type === 'capslock' || type === 'meta') && this.isSelectedText && !this.isCopiedText) {\n      // this.selectedTextRange = null;\n      this.isSelectedText = false;\n    }\n  }\n\n  upCursor = () => {\n    const { line, pos, number } = this.store.cursor;\n    const textareaRow = this.store.textareaRow;\n    if (line !== 0) {\n      const newLine = line - 1;\n      let newNumber = 0;\n\n      if (newLine > 0) {\n        for (let i = 0; i < newLine; i++) {\n          newNumber += textareaRow[i].length;\n        }\n      }\n\n      if (textareaRow[newLine].length > pos) {\n        newNumber += pos;\n        this.store.cursor = {\n          number: newNumber,\n          line: newLine,\n          pos,\n        };\n      } else {\n        newNumber += textareaRow[newLine].length - 1;\n        this.store.cursor = {\n          number: newNumber,\n          line: newLine,\n          pos: textareaRow[newLine].length - 1,\n        };\n      }\n\n    }\n\n  };\n\n  downCursor = () => {\n    const { line, pos, number } = this.store.cursor;\n    const textareaRow = this.store.textareaRow;\n\n    if (line !== textareaRow.length - 1) {\n      const newLine = line + 1;\n      let newNumber = 0;\n      for (let i = 0; i < newLine; i++) {\n        newNumber += textareaRow[i].length;\n      }\n      if (textareaRow[newLine].length > pos) {\n        newNumber += pos;\n        this.store.cursor = {\n          number: newNumber,\n          line: newLine,\n          pos,\n        };\n      } else {\n        newNumber += textareaRow[newLine].length - 1;\n        let newPos = textareaRow[newLine].length - 1;\n        // if (newLine !== textareaRow.length - 1) {\n        //   // newNumber -= 1;\n        //   // newPos -= 1;\n        // }\n        this.store.cursor = {\n          number: newNumber,\n          line: newLine,\n          pos: newPos,\n        };\n      }\n    }\n\n  };\n\n  leftCursor = () => {\n    const { line, pos, number } = this.store.cursor;\n    const textareaRow = this.store.textareaRow;\n    if (pos === 0 && line === 0) return;\n    if (pos - 1 === 0) {\n      let newNumber = 0;\n      if (line !== 0) {\n        for (let i = 0; i < line; i++) {\n          newNumber += textareaRow[i].length;\n        }\n      }\n      this.store.cursor = {\n        number: newNumber,\n        line,\n        pos: 0,\n      };\n    } else if (pos === 0) {\n      let newNumber = 0;\n      const newLine = line - 1;\n      for (let i = 0; i < line; i++) {\n        newNumber += textareaRow[i].length;\n      }\n      this.store.cursor = {\n        number: newNumber - 1,\n        line: newLine,\n        pos: textareaRow[newLine].length - 1,\n      };\n    } else {\n      const newNumber = number - 1;\n      const newPos = pos - 1;\n      this.store.cursor = {\n        number: newNumber,\n        line,\n        pos: newPos,\n      };\n    }\n\n  };\n\n  rightCursor = () => {\n    const { line, pos, number } = this.store.cursor;\n    const textareaRow = this.store.textareaRow;\n\n    if (number === this.store.textareaContent.length) return;\n    if (pos + 1 === textareaRow[line].length) {\n      this.store.cursor = {\n        number: number + 1,\n        line: line + 1,\n        pos: 0,\n      };\n    } else {\n      this.store.cursor = {\n        number: number + 1,\n        line,\n        pos: pos + 1,\n      };\n\n    }\n  };\n  \n  setCursorFromTextarea = (number) => {\n    this.editor.textareaContent = this.store.textareaContent;\n    this.editor.textareaRow = this.store.textareaRow;\n    this.editor.cursor = this.store.cursor;\n    this.editor.setCursorPosition(number)\n    this.store.cursor = this.editor.cursor;\n    if (this.isSelectedText) {\n      this.selectedTextRange = null;\n      this.isSelectedText = false;\n      this.isCopiedText = false; \n    }\n  };\n  \n  selectTextRange = (start, end) => {\n    if (this.selectedTextRange) this.selectedTextRange = null;\n    this.selectedTextRange =  { start, end };\n    this.isSelectedText = true;\n  }\n\n  editMap = {\n    'symbol': this.symbol,\n    'delete': this.delete,\n    'move': this.moveCursor,\n    'capslock': this.capsLock,\n    'space': this.space,\n  };\n  \n  textareaHandler = {\n    setCursorPosition:  this.setCursorFromTextarea,\n    selectTextRange: this.selectTextRange,\n  }\n\n  cursorHandler = {\n    'up': this.upCursor,\n    'down': this.downCursor,\n    'left': this.leftCursor,\n    'right': this.rightCursor,\n  }\n\n  keyHandler = {\n    mouseDown: this.mouseDown,\n    mouseUp: this.mouseUp,\n  };\n\n  boardHandler = {\n    keyHandler: this.keyHandler,\n  };\n\n  initKeyboard = (data) => {\n    const keys = {};\n    data.forEach((key) => {\n      keys[`${key.code}`] = {\n        ...key,\n      }\n    });\n    this.store.setInitState({ keys, langIndex: this.store.lang.indexOf(this.localStorageData.lang) });\n  };\n\n  executeCommand(command) {\n    if (command.execute()) {\n      this.history.save(command);\n    }\n  }\n\n}\n\nexport { Controller };\n","class Element {\n  constructor({\n    parent = null,\n    tagName = 'div',\n    className = '',\n    content = '',\n  }) {\n    const element = document.createElement(tagName);\n    element.classList = className;\n    element.innerHTML = content;\n    if (parent) parent.append(element);\n    this.node = element;\n  }\n\n  destroy() {\n    this.node.remove();\n  }\n}\n\nexport { Element };\n","import { Element } from './helper/element.js';\n\nclass Header extends Element {\n  constructor({ parent, className, lang, controller }) {\n    super({ \n        parent, \n        tagName: 'header', \n        className: `${className}__header header` ,\n    });\n    this.controller = controller;\n    this.activeLang = lang;\n    this.container = new Element({\n      parent: this.node,\n      className: `header__container container`,\n    });\n    this.lang = new Element({\n        parent: this.container.node,\n        className: `header__lang lang`,\n        content: this.activeLang,\n    });\n    this.description = new Element({\n        parent: this.container.node,\n        className: `header__description description`,\n        content: `\n        <span>Virtual Keyboard реализована для Window OS</span>\n        <span>Для зажатия контрольной кнопки используйте двойной клик</span>\n      `,\n    });\n  }\n  \n  onChangeLang = (lang) => {\n    this.activeLang = lang;\n    this.lang.node.textContent = this.activeLang;\n  }\n}\n\nexport { Header };\n","import { Element } from './helper/element';\n\nclass Textarea extends Element {\n  constructor({\n    parent,\n    className,\n    controller,\n  }) {\n    super({\n      parent,\n      tagName: 'textarea',\n      className: `${className}__textarea textarea`,\n    });\n    this.controller = controller;\n    this.node.addEventListener('keydown', (event) => {event.preventDefault();});\n    this.node.addEventListener('keyup', (event) => {event.preventDefault();});\n    // this.node.onkeydown = (event) => {console.log(event.code); event.preventDefault();}\n    // this.node.onkeyup = (event) => event.preventDefault();\n\n    // this.node.onclick = () => {\n    //   this.controller.setCursorPosition(this.node.selectionStart);\n    // }\n\n    this.node.focus();\n\n    this.node.onmouseup = (event) => {\n      if (this.node.selectionEnd === this.node.selectionStart) {\n        this.controller.setCursorPosition(this.node.selectionEnd);\n      } else {\n        this.controller.selectTextRange(this.node.selectionStart, this.node.selectionEnd);\n        \n      }\n    };\n\n  }\n  \n  setContent = (content) => {\n    this.node.textContent = content;\n    this.node.focus();\n  }\n}\n\nexport { Textarea };\n","import { Element } from '../helper/element.js';\n\nclass Key extends Element {\n  constructor({ \n    parent, \n    className, \n    code,\n    content,\n    controller,\n   }) {\n    super({ \n        parent,\n        tagName: 'button',\n        className: `${className}__btn btn ${code}` ,\n    });\n    this.code = code;\n    this.content = content;\n    this.controller = controller;\n    this.node.tabIndex = '-1';\n    this.beforeContent = new Element({\n      parent: this.node,\n      tagName: 'span',\n      className: 'btn__content btn__content--before',\n    });\n    this.mainContent = new Element({\n      parent: this.node,\n      tagName: 'span',\n      className: 'btn__content btn__content--main',\n    });\n    this.update(this.content);\n    this.node.onmousedown = (event) => {\n      event.preventDefault();\n      this.controller.mouseDown(this.code, event.timeStamp);\n      this.node.onmouseover = (event) => this.node.onmouseup(event);\n    };\n    // this.node.onmousedown = (event) => { onClick('mouseDown', event.timeStamp); this.node.onmouseover = () => this.node.onmouseup(); };\n    this.node.onmouseup = (event) => {\n      this.controller.mouseUp(this.code, event.timeStamp);\n      this.node.onmouseover = null;\n    };\n\n  }\n  \n  update = (content) => {\n    if (this.content !== content) this.content = content;\n    this.mainContent.node.textContent = this.content[0];\n    this.beforeContent.node.textContent = `${this.content.length === 2 ? this.content[1] : ''}`;\n  };\n  \n  \n}\n\nexport { Key };\n","import { Key } from \"./Key\";\n\nclass KeyAlt extends Key {\n  constructor({\n    parent, \n    className, \n    code,\n    content,\n    controller,\n  }) {\n    super({ \n      parent, \n      className, \n      code,\n      content,\n      controller,\n    });\n  }\n}\n\nexport { KeyAlt };\n","import { Key } from \"./Key\";\n\nclass KeyArrow extends Key {\n  constructor({\n    parent, \n    className, \n    code,\n    content,\n    controller,\n  }) {\n    super({ \n      parent, \n      className, \n      code,\n      content,\n      controller,\n    });\n  }\n}\n\nexport { KeyArrow };\n","import { Key } from \"./Key\";\n\nclass KeyCapsLook extends Key {\n  constructor({\n    parent, \n    className, \n    code,\n    content,\n    controller,\n  }) {\n    super({ \n      parent, \n      className, \n      code,\n      content,\n      controller,\n    });\n  }\n}\n\nexport { KeyCapsLook };\n","import { Key } from \"./Key\";\n\nclass KeyControl extends Key {\n  constructor({\n    parent, \n    className, \n    code,\n    content,\n    controller,\n}) {\n    super({ \n      parent, \n      className, \n      code,\n      content,\n      controller,\n    });\n  }\n}\n\nexport { KeyControl };\n","import { Key } from \"./Key\";\n\nclass KeyMeta extends Key {\n  constructor({\n    parent, \n    className, \n    code,\n    content,\n    controller,\n  }) {\n    super({ \n      parent, \n      className, \n      code,\n      content,\n      controller,\n    });\n  }\n}\n\nexport { KeyMeta };\n","import { Key } from \"./Key\";\n\nclass KeyShift extends Key {\n  constructor({       \n    parent, \n    className, \n    code,\n    content,\n    controller,\n}) {\n    super({ \n      parent, \n      className, \n      code,\n      content,\n      controller,\n    });\n  }\n}\n\nexport { KeyShift };\n","import { Element } from './helper/element';\nimport { Key } from './key/Key';\nimport { KeyAlt } from './key/KeyAlt';\nimport { KeyArrow } from './key/KeyArrow';\nimport { KeyCapsLook } from './key/KeyCapsLook';\nimport { KeyControl } from './key/KeyControl';\nimport { KeyMeta } from './key/KeyMeta';\nimport { KeyShift } from './key/KeyShift';\n\nconst KeyMap = {\n  'ShiftLeft': KeyShift,\n  'ShiftRight': KeyShift,\n  'ControlLeft': KeyControl,\n  'ControlRight': KeyControl,\n  'MetaLeft': KeyMeta,\n  'AltLeft': KeyAlt,\n  'AltRight': KeyAlt,\n  'ArrowLeft': KeyArrow,\n  'ArrowRight': KeyArrow,\n  'CapsLook': KeyCapsLook,\n}\n\nclass Board extends Element {\n  constructor({ parent, className, lang, controller }) {\n    super({ \n        parent, \n        className: `${className}__board board` ,\n    });\n    this.lang = lang;\n    this.controller = controller;\n    this.rows = {};\n    this.keys = {};\n    this.btns = {};\n    for (let i = 0; i < 5; i += 1) {\n      this.rows[i] = new Element({\n        parent: this.node,\n        className: `board__row row`,\n      });\n      // this.rows.push(new Element({\n      //   parent: this.node,\n      //   className: `board__row row`,\n      // }));\n    }\n  }\n  \n  onChangeLang = (lang) => {\n    this.lang = lang;\n    Object.keys(this.btns).forEach((code, index) => {\n      this.btns[code].update(this.keys[code][`${this.lang}`].name);\n    });\n  }\n  \n  init = ({ keys, lang }) => {\n    this.lang = lang;\n    this.keys = keys;\n    Object.keys(this.keys).forEach((key, index) => {\n      const keyData = this.keys[key];\n      const { row, code } = keyData;\n      const KeyConstructor = KeyMap[code] || Key;\n      this.btns[code] = new KeyConstructor({\n        parent: this.rows[row - 1].node,\n        className: `board`,\n        code,\n        content: keyData[`${this.lang}`].name,\n        controller: this.controller.keyHandler,\n      });\n      // this.btns.push(new Button({\n      //   parent: this.rows[row - 1].node,\n      //   className: `board`,\n      //   lang: this.lang,\n      //   data: btn,\n      // }));\n    });\n  }\n}\n\nexport { Board };\n","import { Element } from './helper/element';\nimport { Textarea } from './Textarea';\nimport { Board } from './Board';\n\nclass Main extends Element {\n  constructor({ parent, className, controller }) {\n    super({ \n      parent, \n      tagName: 'main', \n      className: `${className}__main main` ,\n    });\n    this.controller = controller;\n    this.container = new Element({\n      parent: this.node,\n      className: `main__container container`,\n  });\n    this.textarea = new Textarea({\n        parent: this.container.node,\n        className,\n        controller: controller.textareaHandler,\n    });\n    this.board = new Board({\n        parent: this.container.node,\n        className,\n        lang: 'en',\n        controller: this.controller.boardHandler,\n    });\n    // this.node.onmousedown = (event) => {\n    //   this.textarea.node.focus();\n    // };\n    // this.node.onmouseup = (event) => {\n    //   this.textarea.node.focus();\n    // }\n  }\n  \n  setFocusOnTextarea = () => this.textarea.node.focus();\n  \n  init = (keys) => {\n    this.board.init(keys);\n  };\n  \n  onChangeLang = (lang) => {\n    this.board.onChangeLang(lang);\n  }\n  \n  onChangeTextareaContent = (content) => {\n    this.textarea.setContent(content);\n  };\n  \n  onChangeCursorPosition = ({ start, end }) => {\n    this.textarea.node.setSelectionRange(start, end);\n  };\n  \n  onInitState = ({ keys, lang }) => {\n    this.board.init({ keys, lang });\n  }\n}\n\nexport { Main };\n","class DataApi {\n  constructor() {\n    this.data = [];\n  }\n\n  getKeysData() {\n    return fetch('./data/keys.json').then((res) => res.json()).then((data) => {\n      if (!Array.isArray(data)) {\n        throw new Error('Data load error');\n      }\n      this.data = data;\n      return this.data;\n    });\n  }\n}\n\nexport { DataApi };\n","import { Header } from './Header';\nimport { Element } from './helper/element';\nimport { Main } from './Main';\nimport { DataApi } from './helper/data-api';\n\nclass View extends Element {\n  constructor({ parent, controller, store }) {\n    super({ parent, className: 'keyboard' });\n    this.controller = controller;\n    this.store = store;\n    this.data = [];\n    this.keys = [];\n    this.header = new Header({\n        parent: this.node,\n        className: 'keyboard',\n        lang: 'en',\n        controller,\n    });\n    this.main = new Main({\n        parent: this.node,\n        className: 'keyboard',\n        controller: this.controller,\n    });\n    document.addEventListener('keydown', (event) => this.controller.keyDown(event.code), true);\n    document.addEventListener('keyup', (event) => this.controller.keyUp(event.code), true);\n    document.addEventListener('click', () => this.main.setFocusOnTextarea());\n    \n    this.store.onChangeTextareaContent.add((content) => this.main.onChangeTextareaContent(content));\n    this.store.onChangeLang.add((lang) => {\n      this.header.onChangeLang(lang);\n      this.main.onChangeLang(lang);\n    });\n    this.store.onChangeCursorPosition.add((position) => this.main.onChangeCursorPosition(position));\n    this.store.onInitState.add(({ keys, lang }) => {\n      this.header.onChangeLang(lang);\n      this.main.onInitState({ keys, lang })\n    });\n  }\n  \n  \n  init = () => {\n    const data = new DataApi();\n    data.getKeysData().then((loaded) => {\n      this.data = loaded;\n      this.controller.initKeyboard(this.data);\n    });\n      // .then(() => {\n      //   this.main.init(this.data);\n      // });\n  }\n}\n\nexport { View };\n","import { Store } from './Store';\nimport { Controller } from './Controller';\nimport { View } from './View';\n\nimport '../assets/css/style.scss';\n\nconst Keyboard = (parent) => {\n  const store = new Store();\n  const controller = new Controller(store);\n  const view = new View({\n    parent,\n    controller,\n    store,\n  });\n  view.init();\n};\n\nexport { Keyboard };\n","import { Keyboard } from './component/Keyboard.js';\n\nconst keyboard = Keyboard(document.body);\nwindow.keyboard = keyboard;\n"],"names":["Signal","_createClass","_this","_classCallCheck","_defineProperty","listener","_listener","push","param","filter","elem","params","forEach","this","Store","_langIndex","_langMap","_textareaContent","_textareaRow","_cursor","line","pos","number","_keys","_activeBtns","_lastControl","id","time","_activeControls","_lastKey","_capsLock","key","value","_ref","keys","langIndex","onInitState","emit","lang","get","set","newPosition","onChangeCursorPosition","start","end","textareaRow","content","onChangeTextareaContent","keysMap","onChangeLang","onChangeLocalStorageData","textareaContent","cursor","langMap","code","btnsMap","newLastControl","newActiveControls","newLastKey","flag","Buffer","buffer","length","string","Editor","split","map","row","concat","maxRowLength","arr","restString","lastSpaceIndex","match","lastIndexOf","slice","flat","_objectSpread","findCursorPosition","sumOfRowsLengths","position","i","startSelect","endSelect","Math","min","max","copyText","cutText","prepareTextareaRow","cursorPosition","selectPosition","symbol","_this$cursor","newTextareaContent","direction","_this$cursor2","part","Command","controller","editor","onExecute","backupTextareaContent","backupCursor","execute","Add","_Command","_inherits","_super","call","addSymbol","newSymbol","saveBackup","Delete","deleteSymbol","deleteDirection","History","initialData","history","activeCommandIndex","command","Copy","saveSelect","selectedTextRange","Replace","replaceSelect","Cut","cutSelect","Paste","LocalStorageData","_ref$lang","_ref$textareaContent","_ref$textareaRow","_ref$cursor","data","JSON","stringify","object","initData","_typeof","Error","instanceOfISourcesLStorage","Controller","store","dataFromLocalSorage","localStorage","setItem","toJson","fromJson","parse","getItem","e","activeKeys","Object","activeControls","includes","shiftValue","value_shift","hasActiveShift","capsLock","add","_ref2","executeCommand","_ref3","_ref4","caps","toLowerCase","isSelectedText","setCursorPosition","isCopiedText","cursorHandler","getKeyContent","type","lastControl","activeBtns","lastKey","hasControls","hasControlCombination","resetControls","editMap","excludeKey","setCursorFromTextarea","_this$store$cursor","newLine","newNumber","_this$store$cursor2","newPos","_this$store$cursor3","_this$store$cursor4","moveCursor","space","selectTextRange","upCursor","downCursor","leftCursor","rightCursor","mouseDown","mouseUp","keyHandler","setInitState","indexOf","localStorageData","backupTextareaRow","getLocalStorageData","toLocalStorageData","_this2","controlsKeys","activeControlsKeys","controlCombinations","every","l","join","backCommand","back","next","getLast","save","Element","_ref$parent","parent","_ref$tagName","tagName","_ref$className","className","_ref$content","element","document","createElement","classList","innerHTML","append","node","remove","Header","_Element","_assertThisInitialized","activeLang","textContent","container","description","Textarea","focus","addEventListener","event","preventDefault","onmouseup","selectionEnd","selectionStart","Key","mainContent","beforeContent","tabIndex","update","onmousedown","timeStamp","onmouseover","KeyAlt","_Key","KeyArrow","KeyCapsLook","KeyControl","KeyMeta","KeyShift","KeyMap","Board","btns","index","name","keyData","KeyConstructor","rows","Main","textarea","board","init","setContent","setSelectionRange","textareaHandler","boardHandler","DataApi","fetch","then","res","json","Array","isArray","View","getKeysData","loaded","initKeyboard","header","main","keyDown","keyUp","setFocusOnTextarea","keyboard","body","window"],"sourceRoot":""}