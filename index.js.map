{"version":3,"file":"index.js","mappings":"k7BAAMA,EAAMC,GACV,SAAAD,IAAc,IAAAE,EAAA,M,4FAAAC,CAAA,KAAAH,GAAAI,EAAA,YAIR,SAACC,GACLH,EAAKI,UAAUC,KAAKF,EACtB,IAACD,EAAA,eAEQ,SAACI,GACRN,EAAKI,UAAYJ,EAAKI,UAAUG,QAAO,SAAAC,GAAI,OAAIA,IAASL,QAAQ,GAClE,IAACD,EAAA,aAEM,SAACO,GACNT,EAAKI,UAAUM,SAAQ,SAAAP,GAAQ,OAAIA,EAASM,EAAO,GACrD,IAbEE,KAAKP,UAAY,EACnB,I,+yBCHuC,IAEnCQ,EAAK,WACT,SAAAA,K,4FAAcX,CAAA,KAAAW,GAAAV,EAAA,+BAqHY,IAAIJ,GAAQI,EAAA,oBACvB,IAAIJ,GAAQI,EAAA,8BACF,IAAIJ,GAAQI,EAAA,kBACxB,IAAIJ,GAvHfa,KAAKE,WAAa,EAClBF,KAAKG,SAAW,CAAC,KAAM,MACvBH,KAAKI,iBAAmB,GACxBJ,KAAKK,aAAe,CAAC,IACrBL,KAAKM,QAAU,CAAEC,KAAM,EAAGC,IAAK,EAAGC,OAAQ,GAC1CT,KAAKU,MAAQ,CAAC,EACdV,KAAKW,YAAc,CAAC,EACpBX,KAAKY,aAAe,CAAEC,GAAI,KAAMC,KAAM,MACtCd,KAAKe,gBAAkB,CAAC,EACxBf,KAAKgB,SAAW,KAChBhB,KAAKiB,WAAY,CACnB,C,QAuGC,O,EAvGAhB,G,EAAA,EAAAiB,IAAA,SAAAC,IAED,WACE,OAAOnB,KAAKM,OACd,EAACc,IAED,SAAWC,GACTrB,KAAKM,QAAUe,EACfrB,KAAKsB,uBAAuBC,KAAK,CAC/BC,MAAOxB,KAAKM,QAAQG,OACpBgB,IAAKzB,KAAKM,QAAQG,QAEtB,GAAC,CAAAS,IAAA,cAAAC,IAED,WACE,OAAOnB,KAAKK,YACd,EAACe,IAED,SAAgBM,GACd1B,KAAKK,aAAeqB,CACtB,GAAC,CAAAR,IAAA,MAAAS,MAED,WACE,OAAO3B,IACT,GAAC,CAAAkB,IAAA,kBAAAC,IAED,WACE,OAAOnB,KAAKI,gBACd,EAACgB,IAED,SAAoBQ,GAClB5B,KAAKI,iBAAmBwB,EACxB5B,KAAK6B,wBAAwBN,KAAKvB,KAAKI,iBACzC,GAAC,CAAAc,IAAA,OAAAC,IAED,WACE,OAAOnB,KAAKU,KACd,EAACU,IAED,SAASU,GACP9B,KAAKU,MAAQoB,EACb9B,KAAK+B,WAAWR,KAAKvB,KAAKU,MAC5B,GAAC,CAAAQ,IAAA,YAAAC,IAED,WACE,OAAOnB,KAAKE,UACd,EAACkB,IAED,SAAcY,GACZhC,KAAKE,WAAa8B,EAClBhC,KAAKiC,aAAaV,KAAKvB,KAAKG,SAASH,KAAKE,YAC5C,GAAC,CAAAgB,IAAA,OAAAC,IAED,WACE,OAAOnB,KAAKG,QACd,EAACiB,IAED,SAASc,GACPlC,KAAKG,SAAW+B,CAClB,GAAC,CAAAhB,IAAA,gBAAAS,MAED,SAAcQ,GACZ,OAAOnC,KAAKU,MAAMyB,EACpB,GAAC,CAAAjB,IAAA,aAAAC,IAED,WACE,OAAOnB,KAAKW,WACd,EAACS,IAED,SAAegB,GACbpC,KAAKW,YAAcyB,CACrB,GAAC,CAAAlB,IAAA,cAAAC,IAED,WACE,OAAOnB,KAAKY,YACd,EAACQ,IAED,SAAgBiB,GACdrC,KAAKY,aAAeyB,CACtB,GAAC,CAAAnB,IAAA,iBAAAC,IAED,WACE,OAAOnB,KAAKe,eACd,EAACK,IAED,SAAmBkB,GACjBtC,KAAKe,gBAAkBuB,CACzB,GAAC,CAAApB,IAAA,UAAAC,IAED,WACE,OAAOnB,KAAKgB,QACd,EAACI,IAED,SAAYmB,GACVvC,KAAKgB,SAAWuB,CAClB,GAAC,CAAArB,IAAA,WAAAC,IAED,WACE,OAAOnB,KAAKiB,SACd,EAACG,IAED,SAAaoB,GACXxC,KAAKiB,UAAYuB,CACnB,M,oEAACvC,CAAA,CApHQ,G,k3CCFLwC,EAAM,WACV,SAAAA,IAAc,IAAApD,EAAA,M,4FAAAC,CAAA,KAAAmD,GAAAlD,EAAA,2BAOO,SAACmD,GAmBpB,OAlBkBA,EAAOC,MAAM,MAAMC,KAAI,SAACC,GAAG,SAAAC,OAAQD,EAAG,SAE9BD,KAAI,SAACC,GAC7B,GAAIA,EAAIE,QAAU1D,EAAK2D,aAAc,OAAOH,EAG5C,IAFA,IAAMI,EAAM,GACRC,EAAaL,EACXK,EAAWH,OAAS,IAAI,CAC5B,IACMI,EADOD,EAAWE,MAAM,YACF,GAAGC,YAAY,MACnB,IAApBF,IACFF,EAAIvD,KAAKwD,EAAWI,MAAM,EAAGH,EAAiB,IAC9CD,EAAaR,EAAOY,MAAMH,EAAiB,GAG/C,CAEA,OADAF,EAAIvD,KAAKwD,GACFD,CACT,IACeM,MACjB,IAAChE,EAAA,2BAuEoB,SAACkB,GAGpB,IAFA,IAAI+C,EAAmB,EACjBC,EAAW,CAAC,EACTC,EAAI,EAAGA,EAAIrE,EAAKqC,YAAYqB,OAAQW,IAAK,CAChD,GAAIjD,EAAS+C,EAAmBnE,EAAKqC,YAAYgC,GAAGX,OAAQ,CAC1DU,EAASlD,KAAOmD,EAChBD,EAASjD,IAAMC,EAAS+C,EACxB,KACF,CACAA,GAAoBnE,EAAKqC,YAAYgC,GAAGX,MAC1C,CACA,OAAOU,CACT,IA7GEzD,KAAK2D,gBAAkB,GACvB3D,KAAK4D,WAAa,GAClB5D,KAAK0B,YAAc,GACnB1B,KAAK6D,OAAS,CAAEtD,KAAM,EAAGC,IAAK,EAAGC,OAAQ,GACzCT,KAAKgD,aAAe,EACtB,C,QAoLC,O,EApLAP,G,EAAA,EAAAvB,IAAA,YAAAS,MA+BD,SAAUmC,GACR,IAAAC,EAA8B/D,KAAK6D,OAAhBpD,GAAPsD,EAAJxD,KAASwD,EAAHvD,IAAWuD,EAANtD,QACnB,GAAIA,IAAWT,KAAK2D,gBAAgBZ,OAAQ,CAC1C,IAAMiB,EAAqBhE,KAAK2D,gBAAkBG,EAClD9D,KAAK2D,gBAAkBK,EACvBhE,KAAK0B,YAAc1B,KAAKiE,mBAAmBjE,KAAK2D,iBAChD,IAAMO,EAAiBlE,KAAKmE,mBAAmB1D,EAAS,GACxDT,KAAK6D,OAAMO,EAAA,CACT3D,OAAQA,EAAS,GACdyD,EA0BP,KAAO,CAELlE,KAAK2D,gBAAkB3D,KAAK2D,gBAAgBL,MAAM,EAAG7C,GAAUqD,EAAS9D,KAAK2D,gBAAgBL,MAAM7C,GACnGT,KAAK0B,YAAc1B,KAAKiE,mBAAmBjE,KAAK2D,iBAChD,IAAMO,EAAiBlE,KAAKmE,mBAAmB1D,EAAS,GACxDT,KAAK6D,OAAMO,EAAA,CACT3D,OAAQA,EAAS,GACdyD,EAeP,CACAG,QAAQC,IAAItE,KAAK6D,OACnB,GAAC,CAAA3C,IAAA,eAAAS,MAgBD,SAAa4C,GACX,IAAAC,EAA8BxE,KAAK6D,OAA3BtD,EAAIiE,EAAJjE,KAAMC,EAAGgE,EAAHhE,IAAKC,EAAM+D,EAAN/D,OACnB,GAAIA,IAAWT,KAAK2D,gBAAgBZ,QAClC,GAAkB,SAAdwB,EAAsB,CACxB,IAAMP,EAAqBhE,KAAK2D,gBAAgBL,MAAM,GAAI,GAC1DtD,KAAK2D,gBAAkBK,EACvBhE,KAAK0B,YAAc1B,KAAKiE,mBAAmBjE,KAAK2D,iBAChD3D,KAAK6D,OAAS,CACZpD,OAAST,KAAK2D,gBAAgBZ,OAC9BxC,KAAOP,KAAK0B,YAAYqB,OAAS,EACjCvC,IAAMR,KAAK0B,YAAY1B,KAAK0B,YAAYqB,OAAS,GAAGA,OAkBxD,OACK,GAAkB,SAAdwB,GACT,GAAe,IAAX9D,EAAc,CAChBT,KAAK2D,gBAAkB3D,KAAK2D,gBAAgBL,MAAM,EAAG7C,EAAS,GAAKT,KAAK2D,gBAAgBL,MAAM7C,GAC9FT,KAAK0B,YAAc1B,KAAKiE,mBAAmBjE,KAAK2D,iBAChD,IAAMO,EAAiBlE,KAAKmE,mBAAmB1D,EAAS,GACxDT,KAAK6D,OAAMO,EAAA,CACT3D,OAAQA,EAAS,GACdyD,EAEP,OAEIzD,EAAST,KAAK2D,gBAAgBZ,SAChC/C,KAAK2D,gBAAkB3D,KAAK2D,gBAAgBL,MAAM,EAAG7C,GAAUT,KAAK2D,gBAAgBL,MAAM7C,EAAS,GACnGT,KAAK0B,YAAc1B,KAAKiE,mBAAmBjE,KAAK2D,iBAChD3D,KAAK6D,OAAS,CACZpD,OAAAA,EACAF,KAAAA,EACAC,IAAAA,IAIN6D,QAAQC,IAAItE,KAAK6D,OAEnB,GAAC,CAAA3C,IAAA,YAAAS,MAED,WACE,OAAO3B,KAAK4D,UACd,GAAC,CAAA1C,IAAA,eAAAS,MAED,WACE3B,KAAK4D,WAAa,EACpB,GAAC,CAAA1C,IAAA,gBAAAS,MAED,SAAciC,GACZ5D,KAAK4D,WAAaA,CACpB,GAAC,CAAA1C,IAAA,oBAAAS,MAED,WAAoB,IAAA8C,EAAA,KACZC,EAAY1E,KAAK2D,gBAAgBhB,MAAM,MAAMC,KAAI,SAACC,GAAG,SAAAC,OAAQD,EAAG,SAMtE,OALyB,IAArB6B,EAAU3B,SAAc2B,EAAU,GAAKA,EAAU,GAAGpB,MAAM,EAAGoB,EAAU,GAAG3B,OAAS,IACvE2B,EAAU9B,KAAI,SAACC,GAC7B,OAAIA,EAAIE,QAAU0B,EAAKzB,aAAqBH,EACrCA,EAAIO,MAAM,WACnB,IACeG,MACjB,M,oEAACd,CAAA,CA3LS,G,uqBCANkC,EAAO,WACX,SAAAA,EAAYC,EAAYC,EAAQC,I,4FAAWxF,CAAA,KAAAqF,GACzC3E,KAAK4E,WAAaA,EAClB5E,KAAK6E,OAASA,EACd7E,KAAK+E,OAAS,GACd/E,KAAKgF,WAAa,CAAEzE,KAAM,EAAGC,IAAK,EAAGC,OAAQ,GAC7CT,KAAK0B,YAAc,CAAC,IACpB1B,KAAKiF,QAAU,kBAAMH,GAAW,CAClC,C,QAUC,O,EAVAH,G,EAAA,EAAAzD,IAAA,aAAAS,MAED,WACE3B,KAAK+E,OAAS/E,KAAK6E,OAAOlB,gBAC1B3D,KAAKgF,WAAahF,KAAK6E,OAAOhB,OAC9B7D,KAAK0B,YAAc1B,KAAK6E,OAAOnD,WACjC,GAAC,CAAAR,IAAA,OAAAS,MAED,WACE3B,KAAK6E,OAAS7E,KAAK+E,MACrB,M,oEAACJ,CAAA,CAlBU,G,weCA0B,IAEjCO,EAAG,SAAAC,I,qRAAAC,CAAAF,EAAAC,GAAA,I,MAAAE,G,EAAAH,E,qrBACP,SAAAA,EAAYN,EAAYC,GAAQ,IAAAxF,EAAA,O,4FAAAC,CAAA,KAAA4F,GAAA7F,EAAAgG,EAAAC,KAAA,KACxBV,EAAYC,GAAQ,WAGxB,OAFAxF,EAAKkG,aACLV,EAAOW,UAAUZ,EAAWa,YACrB,CACT,GACF,CAAC,O,EAAAP,E,oDAAA,CAPM,CAASP,G,weCFqB,IAEjCe,EAAM,SAAAP,I,qRAAAC,CAAAM,EAAAP,GAAA,I,MAAAE,G,EAAAK,E,qrBACV,SAAAA,EAAYd,EAAYC,GAAQ,IAAAxF,EAAA,O,4FAAAC,CAAA,KAAAoG,GAAArG,EAAAgG,EAAAC,KAAA,KACxBV,EAAYC,GAAQ,WAGxB,OAFAxF,EAAKkG,aACLV,EAAOc,aAAaf,EAAWgB,kBACxB,CACT,GACF,CAAC,O,EAAAF,E,oDAAA,CAPS,CAASf,G,6gCCAqB,IAEpCkB,EAAU,WACd,SAAAA,EAAYC,GAAO,IAAAzG,EAAA,M,4FAAAC,CAAA,KAAAuG,GAAAtG,EAAA,2BAYG,CACpB,CAAC,UAAW,UACZ,CAAC,UAAW,aACZ,CAAC,UAAW,QACZ,CAAC,UAAW,QACZ,CAAC,UAAW,QACZ,CAAC,UAAW,QACZ,CAAC,UAAW,QACZ,CAAC,UAAW,QACZ,CAAC,UAAW,QACZ,CAAC,UAAW,QACZ,CAAC,UAAW,QACZ,CAAC,UAAW,eACZ,CAAC,UAAW,gBACZ,CAAC,UAAW,QACZ,CAAC,UAAW,QACZ,CAAC,UAAW,QACZ,CAAC,UAAW,QACZ,CAAC,UAAW,WACbA,EAAA,kBAEY,CAAC,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAM,MAAM,QAAMA,EAAA,uBAE5D,WACf,IAAMwG,EAAaC,OAAOC,KAAK5G,EAAK6G,gBACjCtG,QAAO,SAAC8D,GAAC,OAAgC,IAA3BrE,EAAK6G,eAAexC,EAAQ,IAC7C,OAA6B,IAAtBqC,EAAWhD,SAAiBgD,EAAWI,SAAS,cAAgBJ,EAAWI,SAAS,cAC7F,IAAC5G,EAAA,eAEQ,SAAC4C,EAAIiE,GAAyC,IACjDtC,EADYnC,EAAKyE,EAALzE,MAAoB0E,EAAUD,EAAvBE,YAGrBxC,EADE3B,EAAKgE,SAAS,OAEb9G,EAAKkH,mBAAqBlH,EAAKyG,MAAMU,WAAenH,EAAKkH,kBAAoBlH,EAAKyG,MAAMU,SACrFH,EAAa1E,EAEPtC,EAAKkH,iBAAmBF,EAAa1E,EAEnDtC,EAAKoH,mBAAmB3C,EAC1B,IAACvE,EAAA,eAEQ,SAAC4C,EAAIuE,GAASA,EAAL/E,MAChBtC,EAAKuG,gBAA2B,cAATzD,EAAuB,OAAS,OACvD9C,EAAKwF,OAAOlB,gBAAkBtE,EAAKyG,MAAMnC,gBACzCtE,EAAKwF,OAAOnD,YAAcrC,EAAKyG,MAAMpE,YACrCrC,EAAKwF,OAAOhB,OAASxE,EAAKyG,MAAMjC,OAChCxE,EAAKsH,eAAe,IAAIjB,EAAOrG,EAAMA,EAAKwF,SAC1CxF,EAAKyG,MAAMnC,gBAAkBtE,EAAKwF,OAAOlB,gBACzCtE,EAAKyG,MAAMpE,YAAcrC,EAAKwF,OAAOnD,YACrCrC,EAAKyG,MAAMjC,OAASxE,EAAKwF,OAAOhB,OAChCxE,EAAKuG,gBAAkB,IACzB,IAACrG,EAAA,cAEO,SAAC4C,EAAIyE,GAAgB,IAAZjF,EAAKiF,EAALjF,MACftC,EAAKoH,mBAAmB9E,EAC1B,IAACpC,EAAA,iBAEU,SAAC4C,EAAI0E,GAASA,EAALlF,MAAY,IACxBmF,EAAOzH,EAAKyG,MAAMU,SACxBnH,EAAKyG,MAAMU,UAAYM,CACzB,IAACvH,EAAA,mBAEY,SAAC4C,GACZ,IAAMoC,EAAYpC,EAAKmB,MAAM,GAAGyD,cAEhC,OADA1H,EAAK2H,cAAczC,MACZ,CACT,IAAChF,EAAA,2BAEoB,SAACuE,GACpBzE,EAAKoG,UAAY3B,EACjBzE,EAAKwF,OAAOlB,gBAAkBtE,EAAKyG,MAAMnC,gBACzCtE,EAAKwF,OAAOnD,YAAcrC,EAAKyG,MAAMpE,YACrCrC,EAAKwF,OAAOhB,OAASxE,EAAKyG,MAAMjC,OAChCxE,EAAKsH,eAAe,IAAIzB,EAAI7F,EAAMA,EAAKwF,SACvCxF,EAAKyG,MAAMnC,gBAAkBtE,EAAKwF,OAAOlB,gBACzCtE,EAAKyG,MAAMpE,YAAcrC,EAAKwF,OAAOnD,YACrCrC,EAAKyG,MAAMjC,OAASxE,EAAKwF,OAAOhB,OAChCxE,EAAKoG,UAAY,EAInB,IAAClG,EAAA,kBAEW,SAAC4C,EAAMrB,GACjB,IAAMmG,EAAO5H,EAAKyG,MAAMmB,KAAK5H,EAAKyG,MAAM9D,WAClCd,EAAM7B,EAAKyG,MAAMoB,cAAc/E,GAC7BgF,EAASjG,EAATiG,KAMK,YAATA,EACG9H,EAAK+H,YAAYvG,IAAMxB,EAAK+H,YAAYvG,KAAOsB,GAChD9C,EAAK+H,YAAYtG,MAAUA,EAAOzB,EAAK+H,YAAYtG,KAAQ,KAI7DzB,EAAK6G,eAAe/D,GAAQ,EAG5B9C,EAAKgI,WAAWlF,GAAQ,EAExB9C,EAAKiI,QAAUnF,GAEV9C,EAAKkI,cAOJlI,EAAK6G,eAAe/D,IACtB9C,EAAK6G,eAAe/D,GAAQ,EAC5B9C,EAAKgI,WAAWlF,GAAQ,EACxB9C,EAAKiI,QAAUnF,EACf9C,EAAK+H,YAAc,CAAEvG,GAAI,KAAMC,KAAM,OAC3BzB,EAAKmI,sBAAsBrF,IAQrC9C,EAAKoI,gBACLpI,EAAK+H,YAAc,CAAEvG,GAAI,KAAMC,KAAM,MACrCzB,EAAKgI,WAAWlF,GAAQ,EACxB9C,EAAKiI,QAAUnF,IAVf9C,EAAK6G,eAAe/D,GAAQ,EAC5B9C,EAAKgI,WAAWlF,GAAQ,EACxB9C,EAAKiI,QAAUnF,EACf9C,EAAK+H,YAAc,CAAEvG,GAAIsB,EAAMrB,KAAAA,KAbjCzB,EAAK+H,YAAc,CAAEvG,GAAIsB,EAAMrB,KAAAA,GAC/BzB,EAAKgI,WAAWlF,GAAQ,EACxB9C,EAAKiI,QAAUnF,GAsBV9C,EAAKkI,cACVlI,EAAKmI,sBAAsBrF,IAC7B9C,EAAKoI,gBACLpI,EAAK+H,YAAc,CAAEvG,GAAI,KAAMC,KAAM,MACrCzB,EAAKiI,QAAUnF,EACf9C,EAAKgI,WAAWlF,GAAQ,IAMX,SAATgF,GAAoB9H,EAAKqI,QAAQP,IAChC9H,EAAKqI,QAAQP,GAAMhF,EAAMjB,EAAI+F,IAClC5H,EAAKoI,gBACLpI,EAAK+H,YAAc,CAAEvG,GAAI,KAAMC,KAAM,MACrCzB,EAAKiI,QAAUnF,EACf9C,EAAKgI,WAAWlF,GAAQ,IAI1B9C,EAAK+H,YAAc,CAAEvG,GAAI,KAAMC,KAAM,MACrCzB,EAAKiI,QAAUnF,EACf9C,EAAKgI,WAAWlF,GAAQ,EACX,SAATgF,GAAoB9H,EAAKqI,QAAQP,IAChC9H,EAAKqI,QAAQP,GAAMhF,EAAMjB,EAAI+F,KAEpC5H,EAAKyG,MAAMuB,WAAahI,EAAKgI,UAC/B,IAAC9H,EAAA,gBAES,SAAC4C,EAAMrB,GAOf,GALazB,EAAKyG,MAAMmB,KAAK5H,EAAKyG,MAAM9D,WAC5B3C,EAAKyG,MAAMoB,cAAc/E,GAC7BgF,KAER9H,EAAKgI,WAAahI,EAAKyG,MAAMuB,WACzBhI,EAAKiI,UAAYnF,EACnB,GAAI9C,EAAKkI,cAC2B,IAA9BlI,EAAK6G,eAAe/D,KAAa9C,EAAKgI,WAAWlF,GAAQ,GAC7D9C,EAAKiI,QAAU,UAGf,IADA,IAAMrE,EAAM+C,OAAOC,KAAK5G,EAAKgI,YACpB3D,EAAI,EAAGA,EAAIT,EAAIF,OAAQW,GAAK,EACnCrE,EAAKgI,WAAWpE,EAAIS,IAAM,OAGzB,GAAqB,OAAjBrE,EAAKiI,QACd,GAAIjI,EAAKkI,cACmC,IAAtClI,EAAK6G,eAAe7G,EAAKiI,WAAgBjI,EAAKgI,WAAWhI,EAAKiI,SAAW,GAC7EjI,EAAKiI,QAAU,UAGf,IADA,IAAMrE,EAAM+C,OAAOC,KAAK5G,EAAKgI,YACpB3D,EAAI,EAAGA,EAAIT,EAAIF,OAAQW,GAAK,EACnCrE,EAAKgI,WAAWpE,EAAIS,IAAM,EAIhCrE,EAAKyG,MAAMuB,WAAahI,EAAKgI,UAC/B,IAAC9H,EAAA,sBAEe,WAAQF,EAAK6G,eAAiB,CAAC,CAAG,IAAC3G,EAAA,oBAmCrC,kBAC8C,IADxCyG,OAAOC,KAAK5G,EAAK6G,gBAChCtG,QAAO,SAAC8D,GAAC,OAAgC,IAA3BrE,EAAK6G,eAAexC,EAAQ,IAAEX,MAAY,IAAAxD,EAAA,gBAEnD,SAAC4C,GACT,IAAI9C,EAAKsI,WAAWxB,SAAShE,GAA7B,CACA,IAAM8E,EAAO5H,EAAKyG,MAAMmB,KAAK5H,EAAKyG,MAAM9D,WAClCd,EAAM7B,EAAKyG,MAAMoB,cAAc/E,GAC7BgF,EAASjG,EAATiG,KAER9H,EAAKgI,WAAahI,EAAKyG,MAAMuB,WAChB,YAATF,GACG9H,EAAKkI,gBACRlI,EAAK6G,eAAe/D,GAAQ,EAC5B9C,EAAKgI,WAAWlF,GAAQ,GAEtB9C,EAAKkI,gBACHlI,EAAK6G,eAAe/D,IAEZ9C,EAAKmI,sBAAsBrF,KACrC9C,EAAK6G,eAAe/D,GAAQ,GAF5B9C,EAAKgI,WAAWlF,GAAQ,IAQnB9C,EAAKkI,eACVlI,EAAKmI,sBAAsBrF,IAGhB,SAATgF,GAAoB9H,EAAKqI,QAAQP,IAChC9H,EAAKqI,QAAQP,GAAMhF,EAAMjB,EAAI+F,IAHlC5H,EAAKgI,WAAWlF,GAAQ,IAO1B9C,EAAKgI,WAAWlF,GAAQ,EACX,SAATgF,GAAoB9H,EAAKqI,QAAQP,IAChC9H,EAAKqI,QAAQP,GAAMhF,EAAMjB,EAAI+F,KAEpC5H,EAAKyG,MAAMuB,WAAahI,EAAKgI,UAlCa,CAmC5C,IAAC9H,EAAA,cAGO,SAAC4C,GACP,IAAI9C,EAAKsI,WAAWxB,SAAShE,GAA7B,CAOA,GALa9C,EAAKyG,MAAMmB,KAAK5H,EAAKyG,MAAM9D,WAC5B3C,EAAKyG,MAAMoB,cAAc/E,GAC7BgF,KAER9H,EAAKgI,WAAahI,EAAKyG,MAAMuB,WACzBhI,EAAKkI,cACPlI,EAAKgI,WAAWlF,GAAQ,EACU,IAA9B9C,EAAK6G,eAAe/D,KACtB9C,EAAK6G,eAAe/D,GAAQ,OAEzB,CAC6B,IAA9B9C,EAAK6G,eAAe/D,KAAa9C,EAAK6G,eAAe/D,GAAQ,GAEjE,IADA,IAAMc,EAAM+C,OAAOC,KAAK5G,EAAKgI,YACpB3D,EAAI,EAAGA,EAAIT,EAAIF,OAAQW,GAAK,EACnCrE,EAAKgI,WAAWpE,EAAIS,IAAM,CAE9B,CACArE,EAAKyG,MAAMuB,WAAahI,EAAKgI,UAnBa,CAoB5C,IAAC9H,EAAA,iBAEU,WACT8E,QAAQC,IAAIjF,EAAKyG,MAAMjC,QACvB,IAAA+D,EAA8BvI,EAAKyG,MAAMjC,OAAjCtD,EAAIqH,EAAJrH,KAAMC,EAAGoH,EAAHpH,IACRkB,GADmBkG,EAANnH,OACCpB,EAAKyG,MAAMpE,aAC/B,GAAa,IAATnB,EAAY,CACd,IAAMsH,EAAUtH,EAAO,EACnBuH,EAAY,EAEhB,GAAID,EAAU,EACZ,IAAK,IAAInE,EAAI,EAAGA,EAAImE,EAASnE,IAC3BoE,GAAapG,EAAYgC,GAAGX,OAI5BrB,EAAYmG,GAAS9E,OAASvC,GAChCsH,GAAatH,EACbnB,EAAKyG,MAAMjC,OAAS,CAClBpD,OAAQqH,EACRvH,KAAMsH,EACNrH,IAAAA,KAGFsH,GAAapG,EAAYmG,GAAS9E,OAAS,EAC3C1D,EAAKyG,MAAMjC,OAAS,CAClBpD,OAAQqH,EACRvH,KAAMsH,EACNrH,IAAKkB,EAAYmG,GAAS9E,OAAS,GAIzC,CACAsB,QAAQC,IAAIjF,EAAKyG,MAAMjC,OAEzB,IAACtE,EAAA,mBAEY,WACX8E,QAAQC,IAAIjF,EAAKyG,MAAMjC,QACvB,IAAAkE,EAA8B1I,EAAKyG,MAAMjC,OAAjCtD,EAAIwH,EAAJxH,KAAMC,EAAGuH,EAAHvH,IACRkB,GADmBqG,EAANtH,OACCpB,EAAKyG,MAAMpE,aAE/B,GAAInB,IAASmB,EAAYqB,OAAS,EAAG,CAGnC,IAFA,IAAM8E,EAAUtH,EAAO,EACnBuH,EAAY,EACPpE,EAAI,EAAGA,EAAImE,EAASnE,IAC3BoE,GAAapG,EAAYgC,GAAGX,OAE9B,GAAIrB,EAAYmG,GAAS9E,OAASvC,EAChCsH,GAAatH,EACbnB,EAAKyG,MAAMjC,OAAS,CAClBpD,OAAQqH,EACRvH,KAAMsH,EACNrH,IAAAA,OAEG,CACLsH,GAAapG,EAAYmG,GAAS9E,OAAS,EAC3C,IAAIiF,EAAStG,EAAYmG,GAAS9E,OAAS,EAK3C1D,EAAKyG,MAAMjC,OAAS,CAClBpD,OAAQqH,EACRvH,KAAMsH,EACNrH,IAAKwH,EAET,CACF,CACA3D,QAAQC,IAAIjF,EAAKyG,MAAMjC,OAEzB,IAACtE,EAAA,mBAEY,WACX,IAAA0I,EAA8B5I,EAAKyG,MAAMjC,OAAjCtD,EAAI0H,EAAJ1H,KAAMC,EAAGyH,EAAHzH,IAAKC,EAAMwH,EAANxH,OACbiB,EAAcrC,EAAKyG,MAAMpE,YAC/B,GAAY,IAARlB,GAAsB,IAATD,EACjB,GAAIC,EAAM,GAAM,EAAG,CACjB,IAAIsH,EAAY,EAChB,GAAa,IAATvH,EACF,IAAK,IAAImD,EAAI,EAAGA,EAAInD,EAAMmD,IACxBoE,GAAapG,EAAYgC,GAAGX,OAGhC1D,EAAKyG,MAAMjC,OAAS,CAClBpD,OAAQqH,EACRvH,KAAAA,EACAC,IAAK,EAET,MAAO,GAAY,IAARA,EAAW,CAGpB,IAFA,IAAIsH,EAAY,EACVD,EAAUtH,EAAO,EACdmD,EAAI,EAAGA,EAAInD,EAAMmD,IACxBoE,GAAapG,EAAYgC,GAAGX,OAE9B1D,EAAKyG,MAAMjC,OAAS,CAClBpD,OAAQqH,EAAY,EACpBvH,KAAMsH,EACNrH,IAAKkB,EAAYmG,GAAS9E,OAAS,EAEvC,KAAO,CACL,IAAM+E,EAAYrH,EAAS,EACrBuH,EAASxH,EAAM,EACrBnB,EAAKyG,MAAMjC,OAAS,CAClBpD,OAAQqH,EACRvH,KAAAA,EACAC,IAAKwH,EAET,CAEF,IAACzI,EAAA,oBAEa,WACZ,IAAA2I,EAA8B7I,EAAKyG,MAAMjC,OAAjCtD,EAAI2H,EAAJ3H,KAAMC,EAAG0H,EAAH1H,IAAKC,EAAMyH,EAANzH,OACbiB,EAAcrC,EAAKyG,MAAMpE,YAE3BjB,IAAWpB,EAAKyG,MAAMnC,gBAAgBZ,SACtCvC,EAAM,IAAMkB,EAAYnB,GAAMwC,OAChC1D,EAAKyG,MAAMjC,OAAS,CAClBpD,OAAQA,EAAS,EACjBF,KAAMA,EAAO,EACbC,IAAK,GAGPnB,EAAKyG,MAAMjC,OAAS,CAClBpD,OAAQA,EAAS,EACjBF,KAAAA,EACAC,IAAKA,EAAM,GAIjB,IAACjB,EAAA,eAES,CACR,OAAUS,KAAK8D,OACf,OAAU9D,KAAI,OACd,KAAQA,KAAKmI,WACb,SAAYnI,KAAKwG,SACjB,MAASxG,KAAKoI,QACf7I,EAAA,qBAEe,CACd,GAAMS,KAAKqI,SACX,KAAQrI,KAAKsI,WACb,KAAQtI,KAAKuI,WACb,MAASvI,KAAKwI,cACfjJ,EAAA,kBAEY,CACXkJ,UAAWzI,KAAKyI,UAChBC,QAAS1I,KAAK0I,UACfnJ,EAAA,oBAEc,CACboJ,WAAY3I,KAAK2I,aAClBpJ,EAAA,qBAEc,SAACqJ,GACd,IAAM3C,EAAO,CAAC,EACd2C,EAAK7I,SAAQ,SAACmB,GACZ+E,EAAK,GAADnD,OAAI5B,EAAIiB,O,+VAAOiC,CAAA,GACdlD,EAEP,IACA7B,EAAKyG,MAAMG,KAAOA,CACpB,IAldEjG,KAAK8F,MAAQA,EACb9F,KAAK6E,OAAS,IAAIpC,EAElBzC,KAAK6I,QAAU,GACf7I,KAAKqH,WAAa,CAAC,EACnBrH,KAAKoH,YAAc,CAAEvG,GAAI,KAAMC,KAAM,MACrCd,KAAKkG,eAAiB,CAAC,EACvBlG,KAAKsH,QAAU,KACftH,KAAKyF,UAAY,IACnB,C,QA+cC,O,EA/cAI,G,EAAA,EAAA3E,IAAA,wBAAAS,MAoMD,SAAsBQ,GAAM,IAAAsC,EAAA,KACpBqE,EAAe9C,OAAOC,KAAKjG,KAAKkG,gBACnCtG,QAAO,SAAC8D,GAAC,OAAiC,IAA3Be,EAAKyB,eAAexC,EAAQ,IAC9CoF,EAAapJ,KAAKyC,GAQlB,IAPA,IAAM4G,EAAqBD,EACxBlG,KAAI,SAACc,GACJ,MAAU,cAANA,GAA2B,eAANA,EAA2B,QAC1C,YAANA,GAAyB,aAANA,EAAyB,MACtC,gBAANA,GAA6B,iBAANA,EAA6B,UACjDA,CACT,IACOA,EAAI,EAAGA,EAAI1D,KAAKgJ,oBAAoBjG,OAAQW,GAAK,EACxD,GAAI1D,KAAKgJ,oBAAoBtF,GAAGuF,OAAM,SAACC,GAAC,OAAMH,EAAmB5C,SAAS+C,EAAE,IAAI,CAE9E,GADA7E,QAAQC,IAAIyE,GACiC,iBAAzC/I,KAAKgJ,oBAAoBtF,GAAGyF,KAAK,IAAwB,CAC3D,IAAMnH,EAAYhC,KAAK8F,MAAM9D,UAC7BhC,KAAK8F,MAAM9D,WAAaA,EAAY,GAAKhC,KAAK8F,MAAMmB,KAAKlE,MAE3D,CASA,OARI/C,KAAKgJ,oBAAoBtF,GAAGyF,KAAK,IAQ9BnJ,KAAKgJ,oBAAoBtF,EAClC,CAEF,OAAO,IACT,GAAC,CAAAxC,IAAA,iBAAAS,MAwOD,SAAeyH,GACTA,EAAQnE,WACVjF,KAAK6I,QAAQnJ,KAAK0J,EAEtB,M,oEAACvD,CAAA,CA1da,G,uqBCJVwD,EAAO,WACX,SAAAA,EAAAjD,GAKG,IAAAkD,EAAAlD,EAJDmD,OAAAA,OAAM,IAAAD,EAAG,KAAIA,EAAAE,EAAApD,EACbqD,QAAAA,OAAO,IAAAD,EAAG,MAAKA,EAAAE,EAAAtD,EACfuD,UAAAA,OAAS,IAAAD,EAAG,GAAEA,EAAAE,EAAAxD,EACdxE,QAAAA,OAAO,IAAAgI,EAAG,GAAEA,G,4FAAAtK,CAAA,KAAA+J,GAEZ,IAAMQ,EAAUC,SAASC,cAAcN,GACvCI,EAAQG,UAAYL,EACpBE,EAAQI,UAAYrI,EAChB2H,GAAQA,EAAOW,OAAOL,GAC1B7J,KAAKmK,KAAON,CACd,C,QAIC,O,EAJAR,G,EAAA,EAAAnI,IAAA,UAAAS,MAED,WACE3B,KAAKmK,KAAKC,QACZ,M,oEAACf,CAAA,CAhBU,G,s4BCAiC,IAExCgB,EAAM,SAAAC,I,qRAAAlF,CAAAiF,EAAAC,GAAA,I,MAAAjF,G,EAAAgF,E,6jBACV,SAAAA,EAAAjE,GAAqD,IAAA/G,E,MAAvCkK,EAAMnD,EAANmD,OAAQI,EAASvD,EAATuD,UAAW1C,EAAIb,EAAJa,KAAMrC,EAAUwB,EAAVxB,WAwBlC,O,4FAxB4CtF,CAAA,KAAA+K,G,EAK5CE,EAJHlL,EAAAgG,EAAAC,KAAA,KAAM,CACFiE,OAAAA,EACAE,QAAS,SACTE,UAAW,GAAF7G,OAAK6G,EAAS,sB,EAuBd,SAAC1C,GACd5H,EAAKmL,WAAavD,EAClB5H,EAAK4H,KAAKkD,KAAKM,YAAcpL,EAAKmL,UACpC,G,MAzBK,mB,wFACHnL,EAAKuF,WAAaA,EAClBvF,EAAKmL,WAAavD,EAClB5H,EAAKqL,UAAY,IAAIrB,EAAQ,CAC3BE,OAAQlK,EAAK8K,KACbR,UAAW,gCAEbtK,EAAK4H,KAAO,IAAIoC,EAAQ,CACpBE,OAAQlK,EAAKqL,UAAUP,KACvBR,UAAW,oBACX/H,QAASvC,EAAKmL,aAElBnL,EAAKsL,YAAc,IAAItB,EAAQ,CAC3BE,OAAQlK,EAAKqL,UAAUP,KACvBR,UAAW,kCACX/H,QAAS,4JAIVvC,CACL,CAAC,O,EAAAgL,E,oDAAA,CA1BS,CAAShB,G,s4BCFsB,IAErCuB,EAAQ,SAAAN,I,qRAAAlF,CAAAwF,EAAAN,GAAA,I,MAAAjF,G,EAAAuF,E,6jBACZ,SAAAA,EAAAxE,GAGG,IAAA/G,E,MAFDkK,EAAMnD,EAANmD,OACAI,EAASvD,EAATuD,UAiBA,O,4FAjBSrK,CAAA,KAAAsL,G,EAMNL,EAJHlL,EAAAgG,EAAAC,KAAA,KAAM,CACJiE,OAAAA,EACAE,QAAS,WACTE,UAAW,GAAF7G,OAAK6G,EAAS,0B,EAgBd,SAAC/H,GACZvC,EAAK8K,KAAKM,YAAc7I,EACxBvC,EAAK8K,KAAKU,OACZ,G,MAlBK,iB,wFACHxL,EAAK8K,KAAKW,iBAAiB,WAAW,SAACC,GAAWA,EAAMC,gBAAiB,IACzE3L,EAAK8K,KAAKW,iBAAiB,SAAS,SAACC,GAAWA,EAAMC,gBAAiB,IAGvE3L,EAAK8K,KAAKU,QAMVxL,CAEF,CAAC,O,EAAAuL,E,oDAAA,CAtBW,CAASvB,G,u4BCFwB,IAEzC4B,GAAG,SAAAX,I,qRAAAlF,CAAA6F,EAAAX,GAAA,I,MAAAjF,G,EAAA4F,E,6jBACP,SAAAA,EAAA7E,GAMI,IAAA/G,E,MALFkK,EAAMnD,EAANmD,OACAI,EAASvD,EAATuD,UACAxH,EAAIiE,EAAJjE,KACAP,EAAOwE,EAAPxE,QACAgD,EAAUwB,EAAVxB,WA+BE,O,4FA/BQtF,CAAA,KAAA2L,G,EAMPV,EAJHlL,EAAAgG,EAAAC,KAAA,KAAM,CACFiE,OAAAA,EACAE,QAAS,SACTE,UAAW,GAAF7G,OAAK6G,EAAS,cAAA7G,OAAaX,M,EA8BjC,SAACP,GACJvC,EAAKuC,UAAYA,IAASvC,EAAKuC,QAAUA,GAC7CvC,EAAK6L,YAAYf,KAAKM,YAAcpL,EAAKuC,QAAQ,GACjDvC,EAAK8L,cAAchB,KAAKM,YAAc,GAAH3H,OAA8B,IAAxBzD,EAAKuC,QAAQmB,OAAe1D,EAAKuC,QAAQ,GAAK,GACzF,G,OAjCK,a,wFACHvC,EAAK8C,KAAOA,EACZ9C,EAAKuC,QAAUA,EACfvC,EAAKuF,WAAaA,EAClBvF,EAAK8K,KAAKiB,SAAW,KACrB/L,EAAK8L,cAAgB,IAAI9B,EAAQ,CAC/BE,OAAQlK,EAAK8K,KACbV,QAAS,OACTE,UAAW,sCAEbtK,EAAK6L,YAAc,IAAI7B,EAAQ,CAC7BE,OAAQlK,EAAK8K,KACbV,QAAS,OACTE,UAAW,oCAEbtK,EAAKgM,OAAOhM,EAAKuC,SACjBvC,EAAK8K,KAAKmB,YAAc,SAACP,GACvBA,EAAMC,iBACN3L,EAAKuF,WAAW6D,UAAUpJ,EAAK8C,KAAM4I,EAAMQ,WAC3ClM,EAAK8K,KAAKqB,YAAc,SAACT,GAAK,OAAK1L,EAAK8K,KAAKsB,UAAUV,EAAM,CAC/D,EAEA1L,EAAK8K,KAAKsB,UAAY,SAACV,GACrB1L,EAAKuF,WAAW8D,QAAQrJ,EAAK8C,KAAM4I,EAAMQ,WACzClM,EAAK8K,KAAKqB,YAAc,IAC1B,EAAEnM,CAEJ,CAAC,O,EAAA4L,E,oDAAA,CAvCM,CAAS5B,G,ifCFU,IAEtBqC,GAAM,SAAAC,I,sRAAAvG,CAAAsG,EAAAC,GAAA,I,MAAAtG,G,EAAAqG,E,wrBACV,SAAAA,EAAAtF,GAMG,IALDmD,EAAMnD,EAANmD,OACAI,EAASvD,EAATuD,UACAxH,EAAIiE,EAAJjE,KACAP,EAAOwE,EAAPxE,QACAgD,EAAUwB,EAAVxB,WAAU,O,4FAAAtF,CAAA,KAAAoM,GAAArG,EAAAC,KAAA,KAEJ,CACJiE,OAAAA,EACAI,UAAAA,EACAxH,KAAAA,EACAP,QAAAA,EACAgD,WAAAA,GAEJ,CAAC,O,EAAA8G,E,oDAAA,CAfS,CAAST,I,ifCFO,IAEtBW,GAAQ,SAAAD,I,sRAAAvG,CAAAwG,EAAAD,GAAA,I,MAAAtG,G,EAAAuG,E,wrBACZ,SAAAA,EAAAxF,GAMG,IALDmD,EAAMnD,EAANmD,OACAI,EAASvD,EAATuD,UACAxH,EAAIiE,EAAJjE,KACAP,EAAOwE,EAAPxE,QACAgD,EAAUwB,EAAVxB,WAAU,O,4FAAAtF,CAAA,KAAAsM,GAAAvG,EAAAC,KAAA,KAEJ,CACJiE,OAAAA,EACAI,UAAAA,EACAxH,KAAAA,EACAP,QAAAA,EACAgD,WAAAA,GAEJ,CAAC,O,EAAAgH,E,oDAAA,CAfW,CAASX,I,ifCFK,IAEtBY,GAAW,SAAAF,I,sRAAAvG,CAAAyG,EAAAF,GAAA,I,MAAAtG,G,EAAAwG,E,wrBACf,SAAAA,EAAAzF,GAMG,IALDmD,EAAMnD,EAANmD,OACAI,EAASvD,EAATuD,UACAxH,EAAIiE,EAAJjE,KACAP,EAAOwE,EAAPxE,QACAgD,EAAUwB,EAAVxB,WAAU,O,4FAAAtF,CAAA,KAAAuM,GAAAxG,EAAAC,KAAA,KAEJ,CACJiE,OAAAA,EACAI,UAAAA,EACAxH,KAAAA,EACAP,QAAAA,EACAgD,WAAAA,GAEJ,CAAC,O,EAAAiH,E,oDAAA,CAfc,CAASZ,I,ifCFE,IAEtBa,GAAU,SAAAH,I,sRAAAvG,CAAA0G,EAAAH,GAAA,I,MAAAtG,G,EAAAyG,E,wrBACd,SAAAA,EAAA1F,GAMC,IALCmD,EAAMnD,EAANmD,OACAI,EAASvD,EAATuD,UACAxH,EAAIiE,EAAJjE,KACAP,EAAOwE,EAAPxE,QACAgD,EAAUwB,EAAVxB,WAAU,O,4FAAAtF,CAAA,KAAAwM,GAAAzG,EAAAC,KAAA,KAEJ,CACJiE,OAAAA,EACAI,UAAAA,EACAxH,KAAAA,EACAP,QAAAA,EACAgD,WAAAA,GAEJ,CAAC,O,EAAAkH,E,oDAAA,CAfa,CAASb,I,ifCFG,IAEtBc,GAAO,SAAAJ,I,sRAAAvG,CAAA2G,EAAAJ,GAAA,I,MAAAtG,G,EAAA0G,E,wrBACX,SAAAA,EAAA3F,GAMG,IALDmD,EAAMnD,EAANmD,OACAI,EAASvD,EAATuD,UACAxH,EAAIiE,EAAJjE,KACAP,EAAOwE,EAAPxE,QACAgD,EAAUwB,EAAVxB,WAAU,O,4FAAAtF,CAAA,KAAAyM,GAAA1G,EAAAC,KAAA,KAEJ,CACJiE,OAAAA,EACAI,UAAAA,EACAxH,KAAAA,EACAP,QAAAA,EACAgD,WAAAA,GAEJ,CAAC,O,EAAAmH,E,oDAAA,CAfU,CAASd,I,ifCFM,IAEtBe,GAAQ,SAAAL,I,sRAAAvG,CAAA4G,EAAAL,GAAA,I,MAAAtG,G,EAAA2G,E,wrBACZ,SAAAA,EAAA5F,GAMC,IALCmD,EAAMnD,EAANmD,OACAI,EAASvD,EAATuD,UACAxH,EAAIiE,EAAJjE,KACAP,EAAOwE,EAAPxE,QACAgD,EAAUwB,EAAVxB,WAAU,O,4FAAAtF,CAAA,KAAA0M,GAAA3G,EAAAC,KAAA,KAEJ,CACJiE,OAAAA,EACAI,UAAAA,EACAxH,KAAAA,EACAP,QAAAA,EACAgD,WAAAA,GAEJ,CAAC,O,EAAAoH,E,oDAAA,CAfW,CAASf,I,o5BCOvB,IAAMgB,GAAS,CACb,UAAaD,GACb,WAAcA,GACd,YAAeF,GACf,aAAgBA,GAChB,SAAYC,GACZ,QAAWL,GACX,SAAYA,GACZ,UAAaE,GACb,WAAcA,GACd,SAAYC,IAGRK,GAAK,SAAA5B,I,sRAAAlF,CAAA8G,EAAA5B,GAAA,I,MAAAjF,G,EAAA6G,E,ikBACT,SAAAA,EAAA9F,GAAqD,IAAA/G,E,MAAvCkK,EAAMnD,EAANmD,OAAQI,EAASvD,EAATuD,UAAW1C,EAAIb,EAAJa,KAAMrC,EAAUwB,EAAVxB,Y,4FAAUtF,CAAA,KAAA4M,G,EAI5C3B,GAHHlL,EAAAgG,EAAAC,KAAA,KAAM,CACFiE,OAAAA,EACAI,UAAW,GAAF7G,OAAK6G,EAAS,oB,EAmBtB,SAAC1D,GACN5G,EAAK4G,KAAOA,EACZD,OAAOC,KAAK5G,EAAK4G,MAAMlG,SAAQ,SAACmB,EAAKiL,GACnC,IAAMC,EAAU/M,EAAK4G,KAAK/E,GAClB2B,EAAcuJ,EAAdvJ,IAAKV,EAASiK,EAATjK,KACPkK,EAAiBJ,GAAO9J,IAAS8I,GACvC5L,EAAKiN,KAAKnK,GAAQ,IAAIkK,EAAe,CACnC9C,OAAQlK,EAAKkN,KAAK1J,EAAM,GAAGsH,KAC3BR,UAAW,QACXxH,KAAAA,EACAP,QAASwK,EAAQ,GAADtJ,OAAIzD,EAAK4H,OAAQuF,KACjC5H,WAAYvF,EAAKuF,WAAW+D,YAQhC,GACF,G,OAtCK,W,wFACHtJ,EAAK4H,KAAOA,EACZ5H,EAAKuF,WAAaA,EAClBvF,EAAKkN,KAAO,CAAC,EACblN,EAAK4G,KAAO,CAAC,EACb5G,EAAKiN,KAAO,CAAC,EACb,IAAK,IAAI5I,EAAI,EAAGA,EAAI,EAAGA,GAAK,EAC1BrE,EAAKkN,KAAK7I,GAAK,IAAI2F,EAAQ,CACzBE,OAAQlK,EAAK8K,KACbR,UAAW,mBAMd,OAAAtK,CACH,CAAC,O,EAAA6M,E,oDAAA,CArBQ,CAAS7C,G,mhCCpBY,IAE1BoD,GAAI,SAAAnC,I,sRAAAlF,CAAAqH,EAAAnC,GAAA,I,MAAAjF,G,EAAAoH,E,ikBACR,SAAAA,EAAArG,GAA+C,IAAA/G,EAAjCkK,EAAMnD,EAANmD,OAAQI,EAASvD,EAATuD,UAAW/E,EAAUwB,EAAVxB,WA0B9B,O,4FA1BwCtF,CAAA,KAAAmN,GAKtClN,GAAAgL,GAJHlL,EAAAgG,EAAAC,KAAA,KAAM,CACJiE,OAAAA,EACAE,QAAS,OACTE,UAAW,GAAF7G,OAAK6G,EAAS,kBACtB,QAwBE,SAAC1D,GACN5G,EAAKqN,MAAMC,KAAK1G,EAClB,IAAC1G,GAAAgL,GAAAlL,GAAA,2BAEyB,SAACuC,GACzBvC,EAAKuN,SAASC,WAAWjL,EAC3B,IAACrC,GAAAgL,GAAAlL,GAAA,0BAEwB,SAAAqH,GAAoB,IAAjBlF,EAAKkF,EAALlF,MAAOC,EAAGiF,EAAHjF,IACjCpC,EAAKuN,SAASzC,KAAK2C,kBAAkBtL,EAAOC,EAC9C,IAAClC,GAAAgL,GAAAlL,GAAA,cAEY,SAAC4G,GACZ5G,EAAKqN,MAAMC,KAAK1G,EAClB,IArCE5G,EAAKuF,WAAaA,EAClBvF,EAAKqL,UAAY,IAAIrB,EAAQ,CAC3BE,OAAQlK,EAAK8K,KACbR,UAAW,8BAEbtK,EAAKuN,SAAW,IAAIhC,EAAS,CACzBrB,OAAQlK,EAAKqL,UAAUP,KACvBR,UAAAA,IAEJtK,EAAKqN,MAAQ,IAAIR,GAAM,CACnB3C,OAAQlK,EAAKqL,UAAUP,KACvBR,UAAAA,EACA1C,KAAM,KACNrC,WAAYvF,EAAKuF,WAAWmI,eAEhC1N,EAAK8K,KAAKmB,YAAc,SAACP,GACvB1L,EAAKuN,SAASzC,KAAKU,OACrB,EACAxL,EAAK8K,KAAKsB,UAAY,SAACV,GACrB1L,EAAKuN,SAASzC,KAAKU,OACrB,EAACxL,CACH,CAAC,O,EAAAoN,E,oDAAA,CA5BO,CAASpD,G,8qBCJb2D,GAAO,WACX,SAAAA,K,4FAAc1N,CAAA,KAAA0N,GACZhN,KAAK4I,KAAO,EACd,C,QAUC,O,EAVAoE,G,EAAA,EAAA9L,IAAA,cAAAS,MAED,WAAc,IAAAtC,EAAA,KACZ,OAAO4N,MAAM,oBAAoBC,MAAK,SAACC,GAAG,OAAKA,EAAIC,MAAM,IAAEF,MAAK,SAACtE,GAC/D,IAAKyE,MAAMC,QAAQ1E,GACjB,MAAM,IAAI2E,MAAM,mBAGlB,OADAlO,EAAKuJ,KAAOA,EACLvJ,EAAKuJ,IACd,GACF,M,qEAACoE,CAAA,CAbU,G,o5BCG+B,ICIpClH,GDFF0H,GAAI,SAAAlD,I,sRAAAlF,CAAAoI,EAAAlD,GAAA,I,MAAAjF,G,EAAAmI,E,ikBACR,SAAAA,EAAApH,GAA2C,IAAA/G,E,MAA7BkK,EAAMnD,EAANmD,OAAQ3E,EAAUwB,EAAVxB,WAAYkB,EAAKM,EAALN,MAsBgC,O,4FAtB3BxG,CAAA,KAAAkO,G,EACIjD,GAAzClL,EAAAgG,EAAAC,KAAA,KAAM,CAAEiE,OAAAA,EAAQI,UAAW,c,EAwBtB,YACQ,IAAIqD,IACZS,cAAcP,MAAK,SAACQ,GACvBrO,EAAKuJ,KAAO8E,EACZrO,EAAKuF,WAAW+I,aAAatO,EAAKuJ,KACpC,GAIF,G,OAjC2C,W,wFACzCvJ,EAAKuF,WAAaA,EAClBvF,EAAKyG,MAAQA,EACbzG,EAAKuJ,KAAO,GACZvJ,EAAK4G,KAAO,GACZ5G,EAAKuO,OAAS,IAAIvD,EAAO,CACrBd,OAAQlK,EAAK8K,KACbR,UAAW,WACX1C,KAAM,KACNrC,WAAAA,IAEJvF,EAAKwO,KAAO,IAAIpB,GAAK,CACjBlD,OAAQlK,EAAK8K,KACbR,UAAW,WACX/E,WAAYvF,EAAKuF,aAErBkF,SAASgB,iBAAiB,WAAW,SAACC,GAAK,OAAK1L,EAAKuF,WAAWkJ,QAAQ/C,EAAM5I,KAAK,IAAE,GACrF2H,SAASgB,iBAAiB,SAAS,SAACC,GAAK,OAAK1L,EAAKuF,WAAWmJ,MAAMhD,EAAM5I,KAAK,IAAE,GACjF9C,EAAKyG,MAAMjE,wBAAwBmM,KAAI,SAACpM,GAAO,OAAKvC,EAAKwO,KAAKhM,wBAAwBD,EAAQ,IAC9FvC,EAAKyG,MAAM7D,aAAa+L,KAAI,SAAC/G,GAAI,OAAK5H,EAAKuO,OAAO3L,aAAagF,EAAK,IACpE5H,EAAKyG,MAAMxE,uBAAuB0M,KAAI,SAACvK,GAAQ,OAAKpE,EAAKwO,KAAKvM,uBAAuBmC,EAAS,IAC9FpE,EAAKyG,MAAM/D,WAAWiM,KAAI,SAAC/H,GAAI,OAAK5G,EAAKwO,KAAK9L,WAAWkE,EAAK,IAAE5G,CAClE,CAAC,O,EAAAmO,E,oDAAA,CAxBO,CAASnE,GEHb4E,QDOS,IAAIT,GAAK,CACpBjE,OCRsBO,SAASoE,KDS/BtJ,WAHiB,IAAIiB,EADjBC,GAAQ,IAAI7F,GAKhB6F,MAAAA,KAEG6G,OCXPwB,OAAOF,SAAWA,E","sources":["webpack://my-webpack-project/./src/component/helper/signal.js","webpack://my-webpack-project/./src/component/Store.js","webpack://my-webpack-project/./src/component/Editor.js","webpack://my-webpack-project/./src/component/command/Command.js","webpack://my-webpack-project/./src/component/command/Add.js","webpack://my-webpack-project/./src/component/command/Delete.js","webpack://my-webpack-project/./src/component/Controller.js","webpack://my-webpack-project/./src/component/helper/element.js","webpack://my-webpack-project/./src/component/Header.js","webpack://my-webpack-project/./src/component/Textarea.js","webpack://my-webpack-project/./src/component/key/Key.js","webpack://my-webpack-project/./src/component/key/KeyAlt.js","webpack://my-webpack-project/./src/component/key/KeyArrow.js","webpack://my-webpack-project/./src/component/key/KeyCapsLook.js","webpack://my-webpack-project/./src/component/key/KeyControl.js","webpack://my-webpack-project/./src/component/key/KeyMeta.js","webpack://my-webpack-project/./src/component/key/KeyShift.js","webpack://my-webpack-project/./src/component/Board.js","webpack://my-webpack-project/./src/component/Main.js","webpack://my-webpack-project/./src/component/helper/data-api.js","webpack://my-webpack-project/./src/component/View.js","webpack://my-webpack-project/./src/component/Keyboard.js","webpack://my-webpack-project/./src/index.js"],"sourcesContent":["class Signal {\n  constructor() {\n    this._listener = [];\n  }\n  \n  add = (listener) => {\n    this._listener.push(listener);\n  };\n  \n  remove = (param) => {\n    this._listener = this._listener.filter(elem => elem !== listener);\n  };\n  \n  emit = (params) => {\n    this._listener.forEach(listener => listener(params));\n  };\n}\n\nexport { Signal };\n","import { Signal } from \"./helper/signal\";\n\nclass Store {\n  constructor() {\n    this._langIndex = 0;\n    this._langMap = ['en', 'ru'];\n    this._textareaContent = '';\n    this._textareaRow = [''];\n    this._cursor = { line: 0, pos: 0, number: 0 };\n    this._keys = {};\n    this._activeBtns = {};\n    this._lastControl = { id: null, time: null };\n    this._activeControls = {};\n    this._lastKey = null;\n    this._capsLock = false;\n  }\n  \n  get cursor() {\n    return this._cursor;\n  }\n\n  set cursor(newPosition) {\n    this._cursor = newPosition;\n    this.onChangeCursorPosition.emit({\n      start: this._cursor.number,\n      end: this._cursor.number,\n    });\n  }\n\n  get textareaRow() {\n    return this._textareaRow;\n  }\n\n  set textareaRow(textareaRow) {\n    this._textareaRow = textareaRow;\n  }\n\n  get() {\n    return this;\n  }\n  \n  get textareaContent() {\n    return this._textareaContent;\n  }\n  \n  set textareaContent(content) {\n    this._textareaContent = content;\n    this.onChangeTextareaContent.emit(this._textareaContent);\n  }\n  \n  get keys() {\n    return this._keys;\n  }\n  \n  set keys(keysMap) {\n    this._keys = keysMap;\n    this.onInitKeys.emit(this._keys);\n  }\n  \n  get langIndex() {\n    return this._langIndex;\n  }\n  \n  set langIndex(langIndex) {\n    this._langIndex = langIndex;\n    this.onChangeLang.emit(this._langMap[this._langIndex]);\n  }\n  \n  get lang() {\n    return this._langMap;\n  }\n  \n  set lang(langMap) {\n    this._langMap = langMap;\n  }\n  \n  getKeyContent(code) {\n    return this._keys[code];\n  }\n  \n  get activeBtns() {\n    return this._activeBtns;\n  }\n  \n  set activeBtns(btnsMap) {\n    this._activeBtns = btnsMap;\n  }\n  \n  get lastControl() {\n    return this._lastControl;\n  }\n  \n  set lastControl(newLastControl) {\n    this._lastControl = newLastControl;\n  }\n  \n  get activeControls() {\n    return this._activeControls;\n  }\n  \n  set activeControls(newActiveControls) {\n    this._activeControls = newActiveControls;\n  }\n  \n  get lastKey() {\n    return this._lastKey;\n  }\n  \n  set lastKey(newLastKey) {\n    this._lastKey = newLastKey;\n  }\n  \n  get capsLock() {\n    return this._capsLock;\n  }\n  \n  set capsLock(flag) {\n    this._capsLock = flag;\n  }\n  \n  onChangeTextareaContent = new Signal();\n  onChangeLang = new Signal();\n  onChangeCursorPosition = new Signal();\n  onInitKeys = new Signal();\n}\n\nexport { Store };\n","class Editor {\n  constructor() {\n    this.textareaContent = '';\n    this.selectText = '';\n    this.textareaRow = [];\n    this.cursor = { line: 0, pos: 0, number: 0 };\n    this.maxRowLength = 77;\n  }\n  prepareTextareaRow = (string) => {\n    const splitText = string.split('\\n').map((row) => `${row}\\n`);\n    // if (splitText.length === 1) splitText[0] = splitText[0].slice(0, splitText[0].length - 1);\n    const textArr = splitText.map((row) => {\n      if (row.length <= this.maxRowLength) return row;\n      const arr = [];\n      let restString = row;\n      while(restString.length > 77) {\n        const rows = restString.match(/.{1,77}/g);\n        const lastSpaceIndex = rows[0].lastIndexOf(' ');\n        if (lastSpaceIndex !== -1) {\n          arr.push(restString.slice(0, lastSpaceIndex + 1));\n          restString = string.slice(lastSpaceIndex + 1);\n        }\n\n      }\n      arr.push(restString);\n      return arr;\n    });\n    return textArr.flat();\n  }\n  \n  // overloadLastRow = (string) => {\n  //   const lastSpaceIndex = string.lastIndexOf(' ');\n  //   if (lastSpaceIndex !== -1) {\n  //     const row = string.slice(0, lastSpaceIndex) + '\\n';\n  //     const lastRow = string.slice(lastSpaceIndex + 1);\n  //     return [ row, lastRow ];\n  //   }\n  // }\n  addSymbol(symbol) {\n    const { line, pos, number } = this.cursor;\n    if (number === this.textareaContent.length) {\n      const newTextareaContent = this.textareaContent + symbol;\n      this.textareaContent = newTextareaContent;\n      this.textareaRow = this.prepareTextareaRow(this.textareaContent);\n      const cursorPosition = this.findCursorPosition(number + 1);\n      this.cursor = {\n        number: number + 1,\n        ...cursorPosition,\n      }\n\n      // if (symbol === '\\n') {\n      //   this.textareaRow[line] += symbol;\n      //   this.textareaRow.push('');\n      //   this.cursor = { line: (line + 1), pos: 0, number: (number + 1) };\n      // } else if (this.textareaRow[line].length === this.maxRowLength) {\n      //   if (symbol === ' ') {\n      //     this.textareaRow[line] += `\\n`;\n      //     this.textareaRow.push('');\n      //     this.cursor = { line: (line + 1), pos: 0, number: (number + 1) };\n      //   } else if (symbol === '    ') {\n      //     this.textareaRow[line] += `\\n`;\n      //     this.textareaRow.push('   ');\n      //     this.cursor = { line: (line + 1), pos: 3, number: (number + 4) };\n      //   } else {\n      //     const lastTwoRows = this.overloadLastRow(this.textareaRow[line] + symbol);\n      //     this.textareaRow.pop();\n      //     this.textareaRow.push(...lastTwoRows);\n      //     this.cursor = { line: (line + 1), pos: lastTwoRows[1].length, number: (number + 1) };\n      //   }\n      // } else {\n      //   this.textareaRow[line] += symbol;\n      //   this.cursor = { line, pos: (pos + 1), number: (number + 1) };\n      // }\n    } else {\n      // если курсор внутри текста\n      this.textareaContent = this.textareaContent.slice(0, number) + symbol + this.textareaContent.slice(number);\n      this.textareaRow = this.prepareTextareaRow(this.textareaContent);\n      const cursorPosition = this.findCursorPosition(number + 1);\n      this.cursor = {\n        number: number + 1,\n        ...cursorPosition,\n      }\n      // if (symbol === '\\n') {\n      //   this.cursor = {\n      //     line: (line + 1),\n      //     pos: 0,\n      //     number: (number + 1),\n      //   };\n      // } else {\n      //   this.cursor = {\n      //     line,\n      //     pos: (pos + 1),\n      //     number: (number + 1),\n      //   };\n      // }\n    }\n    console.log(this.cursor)\n  }\n  \n  findCursorPosition = (number) => {\n    let sumOfRowsLengths = 0;\n    const position = {};\n    for (let i = 0; i < this.textareaRow.length; i++) {\n      if (number - sumOfRowsLengths < this.textareaRow[i].length) {\n        position.line = i;\n        position.pos = number - sumOfRowsLengths;\n        break;\n      }\n      sumOfRowsLengths += this.textareaRow[i].length;\n    }\n    return position;\n  }\n\n  deleteSymbol(direction) {\n    const { line, pos, number } = this.cursor;\n    if (number === this.textareaContent.length) {\n      if (direction === 'prev') {\n        const newTextareaContent = this.textareaContent.slice(0, -1);\n        this.textareaContent = newTextareaContent;\n        this.textareaRow = this.prepareTextareaRow(this.textareaContent);\n        this.cursor = {\n          number: (this.textareaContent.length),\n          line: (this.textareaRow.length - 1),\n          pos: (this.textareaRow[this.textareaRow.length - 1].length),\n        };\n  \n        // if (pos !== 0) {\n        //   this.textareaContent = this.textareaContent.slice(0, this.textareaContent.length - 1);\n        //   this.textareaRow[line] = this.textareaRow[line].slice(0, this.textareaRow[line].length - 1);\n        //   this.cursor = { line, pos: (pos - 1), number: (number - 1) };\n        // } else if (line !== 0) {\n        //   this.textareaContent = this.textareaContent.slice(0, this.textareaContent.length - 1);\n        //   this.textareaRow[line - 1] = this.textareaRow[line - 1]\n        //     .slice(0, this.textareaRow[line - 1].length - 1);\n        //   this.textareaRow.pop();\n        //   this.cursor = {\n        //     line: (line - 1),\n        //     pos: this.textareaRow[line - 1].length - 1,\n        //     number: (number - 1),\n        //   };\n        // }\n      }\n    } else if (direction === 'prev') {\n      if (number !== 0) {\n        this.textareaContent = this.textareaContent.slice(0, number - 1) + this.textareaContent.slice(number);\n        this.textareaRow = this.prepareTextareaRow(this.textareaContent);\n        const cursorPosition = this.findCursorPosition(number - 1);\n        this.cursor = {\n          number: number - 1,\n          ...cursorPosition,\n        }\n      }\n    } else {\n      if (number < this.textareaContent.length) {\n        this.textareaContent = this.textareaContent.slice(0, number) + this.textareaContent.slice(number + 1);\n        this.textareaRow = this.prepareTextareaRow(this.textareaContent);\n        this.cursor = {\n          number,\n          line,\n          pos,\n        };\n      }\n    }\n    console.log(this.cursor)\n    \n  };\n\n  getSelect() {\n    return this.selectText;\n  }\n\n  deleteSelect() {\n    this.selectText = '';\n  }\n\n  replaceSelect(selectText) {\n    this.selectText = selectText;\n  }\n\n  changeTextareaRow() {\n    const splitText = this.textareaContent.split('\\n').map((row) => `${row}\\n`);\n    if (splitText.length === 1) splitText[0] = splitText[0].slice(0, splitText[0].length - 1);\n    const textArr = splitText.map((row) => {\n      if (row.length <= this.maxRowLength) return row;\n      return row.match(/.{1,77}/g);\n    });\n    return textArr.flat();\n  }\n}\n\nexport { Editor };\n","class Command {\n  constructor(controller, editor, onExecute) {\n    this.controller = controller;\n    this.editor = editor;\n    this.backup = '';\n    this.backCursor = { line: 0, pos: 0, number: 0 };\n    this.textareaRow = [''];\n    this.execute = () => onExecute();\n  }\n\n  saveBackup() {\n    this.backup = this.editor.textareaContent;\n    this.backCursor = this.editor.cursor;\n    this.textareaRow = this.editor.textareaRow;\n  }\n\n  undo() {\n    this.editor = this.backup;\n  }\n}\n\nexport { Command };\n","import { Command } from './Command.js';\n\nclass Add extends Command {\n  constructor(controller, editor) {\n    super(controller, editor, () => {\n      this.saveBackup();\n      editor.addSymbol(controller.newSymbol);\n      return true;\n    });\n  }\n}\n\nexport { Add };\n","import { Command } from './Command.js';\n\nclass Delete extends Command {\n  constructor(controller, editor) {\n    super(controller, editor, () => {\n      this.saveBackup();\n      editor.deleteSymbol(controller.deleteDirection);\n      return true;\n    });\n  }\n}\n\nexport { Delete };\n","import { Editor } from \"./Editor\";\nimport { Add } from './command/Add';\nimport { Delete } from './command/Delete';\n\nclass Controller {\n  constructor(store) {\n    this.store = store;\n    this.editor = new Editor();\n    // this.cursor = new Cursor(this.state);\n    this.history = [];\n    this.activeBtns = {};\n    this.lastControl = { id: null, time: null };\n    this.activeControls = {};\n    this.lastKey = null;\n    this.newSymbol = null;\n  }\n  \n  controlCombinations = [\n    ['Control', 'Delete'],\n    ['Control', 'Backspace'],\n    ['Control', 'KeyX'],\n    ['Control', 'KeyC'],\n    ['Control', 'KeyV'],\n    ['Control', 'KeyZ'],\n    ['Control', 'KeyS'],\n    ['Control', 'KeyA'],\n    ['Control', 'KeyB'],\n    ['Control', 'KeyI'],\n    ['Control', 'KeyU'],\n    ['Control', 'BracketLeft'],\n    ['Control', 'BracketRight'],\n    ['Control', 'KeyL'],\n    ['Control', 'KeyE'],\n    ['Control', 'KeyR'],\n    ['Control', 'KeyY'],\n    ['Control', 'Shift'],\n  ];\n  \n  excludeKey = ['F1','F2','F3','F4','F5','F6','F7','F8','F9','F10','F11','F12']\n  \n  hasActiveShift = () => {\n    const activeKeys = Object.keys(this.activeControls)\n      .filter((i) => this.activeControls[i] !== 0);\n    return activeKeys.length === 1 && (activeKeys.includes('ShiftLeft') || activeKeys.includes('ShiftRight'));\n  };\n  \n  symbol = (code, { value, value_shift: shiftValue }) => {\n    let symbol = '';\n    if (code.includes('Key')) {\n      symbol = (\n        (this.hasActiveShift() && !this.store.capsLock) || (!this.hasActiveShift() && this.store.capsLock)\n        ) ? shiftValue : value;\n    }\n    else symbol = this.hasActiveShift() ? shiftValue : value;\n    \n    this.addTextareaContent(symbol);\n  };\n  \n  delete = (code, { value }) => {\n    this.deleteDirection = code === 'Backspace' ? 'prev' : 'next';\n    this.editor.textareaContent = this.store.textareaContent;\n    this.editor.textareaRow = this.store.textareaRow;\n    this.editor.cursor = this.store.cursor;\n    this.executeCommand(new Delete(this, this.editor));\n    this.store.textareaContent = this.editor.textareaContent;\n    this.store.textareaRow = this.editor.textareaRow;\n    this.store.cursor = this.editor.cursor;\n    this.deleteDirection = null;\n  };\n\n  space = (code, { value }) => {\n    this.addTextareaContent(value);\n  };\n  \n  capsLock = (code, { value }) => {\n    const caps = this.store.capsLock;\n    this.store.capsLock = !caps;\n  };\n\n  moveCursor = (code) => {\n    const direction = code.slice(5).toLowerCase();\n    this.cursorHandler[direction]();\n    return true;\n  }\n\n  addTextareaContent = (symbol) => {\n    this.newSymbol = symbol;\n    this.editor.textareaContent = this.store.textareaContent;\n    this.editor.textareaRow = this.store.textareaRow;\n    this.editor.cursor = this.store.cursor;\n    this.executeCommand(new Add(this, this.editor));\n    this.store.textareaContent = this.editor.textareaContent;\n    this.store.textareaRow = this.editor.textareaRow;\n    this.store.cursor = this.editor.cursor;\n    this.newSymbol = '';\n    // const textareaContent = this.store.textareaContent + symbol;\n    // this.store.textareaContent = textareaContent;\n\n  };\n\n  mouseDown = (code, time) => {\n    const lang = this.store.lang[this.store.langIndex];\n    const key = this.store.getKeyContent(code);\n    const { type } = key;\n    // this.activeBtns = this.store.activeBtns;\n    // this.lastControl = this.store.lastControl;\n    // this.activeControls = this.store.activeControls;\n    // this.lastKey = this.store.lastKey;\n    \n    if (type === 'control') {\n      if ((this.lastControl.id && this.lastControl.id === code)\n      && (this.lastControl.time && ((time - this.lastControl.time) < 300))) {\n        // если последняя контольная есть и совпадает с пришедшей \n        // и отличие во времени меньше 300 мсек\n        // то добавляем в активные контролы\n        this.activeControls[code] = 1;\n        // возможно можно убрать - это активные бтны сохраняются\n        // также по коду\n        this.activeBtns[code] = 1;\n        // также заменяем последнюю кнопку на пришедшую\n        this.lastKey = code;\n      } else {\n        if (!this.hasControls()) {\n          // если контрольных точек до этого еще не выбрано\n          // то просто записывает в последнюю контрльную\n          this.lastControl = { id: code, time };\n          this.activeBtns[code] = 1;\n          this.lastKey = code;\n        } else {\n          if (this.activeControls[code]) {\n            this.activeControls[code] = 0;\n            this.activeBtns[code] = 1;\n            this.lastKey = code;\n            this.lastControl = { id: null, time: null };\n          } else if (!this.hasControlCombination(code)) {\n            this.activeControls[code] = 0;\n            this.activeBtns[code] = 1;\n            this.lastKey = code;\n            this.lastControl = { id: code, time };\n            // здесь надо еще проверка на колво акт.контролов\n            // чтоб не превышала цепочка в 4 контрола, иначе сброс\n          } else {\n            this.resetControls();\n            this.lastControl = { id: null, time: null };\n            this.activeBtns[code] = 1;\n            this.lastKey = code;\n          }\n        }\n      }\n    } else if (this.hasControls()) {\n      if (this.hasControlCombination(code)) {\n        this.resetControls();\n        this.lastControl = { id: null, time: null };\n        this.lastKey = code;\n        this.activeBtns[code] = 1;\n      } else {\n        // if (type === 'capsLock') this.state.changeCapsLock();\n        // else if (type === 'move') this.moveCursor(code);\n        // else if (type === 'delete') this.delete(code);\n        // else \n        if (type === 'meta' || !this.editMap[type]);\n        else this.editMap[type](code, key[lang]);\n        this.resetControls();\n        this.lastControl = { id: null, time: null };\n        this.lastKey = code;\n        this.activeBtns[code] = 1;\n      }\n    } else {\n      // если нет выбранных контрольных\n      this.lastControl = { id: null, time: null };\n      this.lastKey = code;\n      this.activeBtns[code] = 1;\n      if (type === 'meta' || !this.editMap[type]);\n      else this.editMap[type](code, key[lang]);\n    }\n    this.store.activeBtns = this.activeBtns;\n  }\n  \n  mouseUp = (code, time) => {\n    // console.log(code);\n    const lang = this.store.lang[this.store.langIndex];\n    const key = this.store.getKeyContent(code);\n    const { type } = key;\n\n    this.activeBtns = this.store.activeBtns;\n    if (this.lastKey === code) {\n      if (this.hasControls()) {\n        if (this.activeControls[code] === 0) this.activeBtns[code] = 0;\n        this.lastKey = null;\n      } else {\n        const arr = Object.keys(this.activeBtns);\n        for (let i = 0; i < arr.length; i += 1) {\n          this.activeBtns[arr[i]] = 0;\n        }\n      }\n    } else if (this.lastKey !== null) {\n      if (this.hasControls()) {\n        if (this.activeControls[this.lastKey] === 0) this.activeBtns[this.lastKey] = 0;\n        this.lastKey = null;\n      } else {\n        const arr = Object.keys(this.activeBtns);\n        for (let i = 0; i < arr.length; i += 1) {\n          this.activeBtns[arr[i]] = 0;\n        }\n      }\n    }\n    this.store.activeBtns = this.activeBtns;\n  }\n  \n  resetControls = () => { this.activeControls = {}; };\n  \n  hasControlCombination(code) {\n    const controlsKeys = Object.keys(this.activeControls)\n      .filter((i) => (this.activeControls[i] !== 0));\n    controlsKeys.push(code);\n    const activeControlsKeys = controlsKeys\n      .map((i) => {\n        if (i === 'ShiftLeft' || i === 'ShiftRight') return 'Shift';\n        if (i === 'AltLeft' || i === 'AltRight') return 'Alt';\n        if (i === 'ControlLeft' || i === 'ControlRight') return 'Control';\n        return i;\n      });\n    for (let i = 0; i < this.controlCombinations.length; i += 1) {\n      if (this.controlCombinations[i].every((l) => (activeControlsKeys.includes(l)))) {\n        console.log(activeControlsKeys);\n        if (this.controlCombinations[i].join('') === 'ControlShift') {\n          const langIndex = this.store.langIndex;\n          this.store.langIndex = (langIndex + 1) % this.store.lang.length;\n          // localStorage.setItem('key_lang', lang);\n        }\n        if (this.controlCombinations[i].join('') === 'ControlKeyZ') {\n          // const backCommand = this.history.history.pop();\n          // if (backCommand) {\n          //   this.state.set(backCommand.backup);\n          //   this.state.setCursor(backCommand.backCursor);\n          //   this.state.setTextRow(backCommand.textRow);\n          // }\n        }\n        return this.controlCombinations[i];\n      }\n    }\n    return null;\n  }\n\n  hasControls = () => Object.keys(this.activeControls)\n      .filter((i) => this.activeControls[i] !== 0).length !== 0;\n\n  keyDown = (code) => {\n    if (this.excludeKey.includes(code)) return;\n    const lang = this.store.lang[this.store.langIndex];\n    const key = this.store.getKeyContent(code);\n    const { type } = key;\n\n    this.activeBtns = this.store.activeBtns;\n    if (type === 'control') {\n      if (!this.hasControls()) {\n        this.activeControls[code] = 1;\n        this.activeBtns[code] = 1;\n      }\n      if (this.hasControls()) {\n        if (this.activeControls[code]) {\n          this.activeBtns[code] = 1;\n        } else if (!this.hasControlCombination(code)) {\n          this.activeControls[code] = 1;\n          this.activeBtns[code] = 1;\n        } else {\n          this.activeBtns[code] = 1;\n        }\n      }\n    } else if (this.hasControls()) {\n      if (this.hasControlCombination(code)) {\n        this.activeBtns[code] = 1;\n      } else {\n        if (type === 'meta' || !this.editMap[type]);\n        else this.editMap[type](code, key[lang]);\n          this.activeBtns[code] = 1;\n      }\n    } else {\n      this.activeBtns[code] = 1;\n      if (type === 'meta' || !this.editMap[type]);\n      else this.editMap[type](code, key[lang]);\n    }\n    this.store.activeBtns = this.activeBtns;\n  }\n\n  \n  keyUp = (code) => {\n    if (this.excludeKey.includes(code)) return;\n    \n    const lang = this.store.lang[this.store.langIndex];\n    const key = this.store.getKeyContent(code);\n    const { type } = key;\n\n    this.activeBtns = this.store.activeBtns;\n    if (this.hasControls()) {\n      this.activeBtns[code] = 0;\n      if (this.activeControls[code] === 1) {\n        this.activeControls[code] = 0;\n      }\n    } else {\n      if (this.activeControls[code] === 1) this.activeControls[code] = 0;\n      const arr = Object.keys(this.activeBtns);\n      for (let i = 0; i < arr.length; i += 1) {\n        this.activeBtns[arr[i]] = 0;\n      }\n    }\n    this.store.activeBtns = this.activeBtns;\n  }\n  \n  upCursor = () => {\n    console.log(this.store.cursor)\n    const { line, pos, number } = this.store.cursor;\n    const textareaRow = this.store.textareaRow;\n    if (line !== 0) {\n      const newLine = line - 1;\n      let newNumber = 0;\n      \n      if (newLine > 0) {\n        for (let i = 0; i < newLine; i++) {\n          newNumber += textareaRow[i].length;\n        }\n      }\n      \n      if (textareaRow[newLine].length > pos) {\n        newNumber += pos;\n        this.store.cursor = {\n          number: newNumber,\n          line: newLine,\n          pos,\n        };\n      } else {\n        newNumber += textareaRow[newLine].length - 1;\n        this.store.cursor = {\n          number: newNumber,\n          line: newLine,\n          pos: textareaRow[newLine].length - 1,\n        };\n      }\n\n    }\n    console.log(this.store.cursor)\n    \n  };\n  \n  downCursor = () => {\n    console.log(this.store.cursor);\n    const { line, pos, number } = this.store.cursor;\n    const textareaRow = this.store.textareaRow;\n\n    if (line !== textareaRow.length - 1) {\n      const newLine = line + 1;\n      let newNumber = 0;\n      for (let i = 0; i < newLine; i++) {\n        newNumber += textareaRow[i].length;\n      }\n      if (textareaRow[newLine].length > pos) {\n        newNumber += pos;\n        this.store.cursor = {\n          number: newNumber,\n          line: newLine,\n          pos,\n        };\n      } else {\n        newNumber += textareaRow[newLine].length - 1;\n        let newPos = textareaRow[newLine].length - 1;\n        // if (newLine !== textareaRow.length - 1) {\n        //   // newNumber -= 1;\n        //   // newPos -= 1;\n        // }\n        this.store.cursor = {\n          number: newNumber,\n          line: newLine,\n          pos: newPos,\n        };\n      }\n    }\n    console.log(this.store.cursor);\n\n  };\n  \n  leftCursor = () => {\n    const { line, pos, number } = this.store.cursor;\n    const textareaRow = this.store.textareaRow;\n    if (pos === 0 && line === 0) return;\n    if (pos - 1 === 0) {\n      let newNumber = 0;\n      if (line !== 0) {\n        for (let i = 0; i < line; i++) {\n          newNumber += textareaRow[i].length;\n        }\n      } \n      this.store.cursor = {\n        number: newNumber,\n        line,\n        pos: 0,\n      };\n    } else if (pos === 0) {\n      let newNumber = 0;\n      const newLine = line - 1;\n      for (let i = 0; i < line; i++) {\n        newNumber += textareaRow[i].length;\n      }\n      this.store.cursor = {\n        number: newNumber - 1,\n        line: newLine,\n        pos: textareaRow[newLine].length - 1,\n      };\n    } else {\n      const newNumber = number - 1;\n      const newPos = pos - 1;\n      this.store.cursor = {\n        number: newNumber,\n        line,\n        pos: newPos,\n      };\n    }\n\n  };\n  \n  rightCursor = () => {\n    const { line, pos, number } = this.store.cursor;\n    const textareaRow = this.store.textareaRow;\n    \n    if (number === this.store.textareaContent.length) return;\n    if (pos + 1 === textareaRow[line].length) {\n      this.store.cursor = {\n        number: number + 1,\n        line: line + 1,\n        pos: 0,\n      };\n    } else {\n      this.store.cursor = {\n        number: number + 1,\n        line,\n        pos: pos + 1,\n      };\n\n    }\n  }\n  \n  editMap = {\n    'symbol': this.symbol,\n    'delete': this.delete,\n    'move': this.moveCursor,\n    'capslock': this.capsLock,\n    'space': this.space,\n  }\n  \n  cursorHandler = {\n    'up': this.upCursor,\n    'down': this.downCursor,\n    'left': this.leftCursor,\n    'right': this.rightCursor,\n  }\n  \n  keyHandler = {\n    mouseDown: this.mouseDown,\n    mouseUp: this.mouseUp,\n  };\n  \n  boardHandler = {\n    keyHandler: this.keyHandler,\n  };\n  \n  initKeyboard = (data) => {\n    const keys = {};\n    data.forEach((key) => {\n      keys[`${key.code}`] = {\n        ...key,\n      }\n    });\n    this.store.keys = keys;\n  };\n  \n  executeCommand(command) {\n    if (command.execute()) {\n      this.history.push(command);\n    }\n  }\n\n}\n\nexport { Controller };\n","class Element {\n  constructor({\n    parent = null,\n    tagName = 'div',\n    className = '',\n    content = '',\n  }) {\n    const element = document.createElement(tagName);\n    element.classList = className;\n    element.innerHTML = content;\n    if (parent) parent.append(element);\n    this.node = element;\n  }\n\n  destroy() {\n    this.node.remove();\n  }\n}\n\nexport { Element };\n","import { Element } from './helper/element.js';\n\nclass Header extends Element {\n  constructor({ parent, className, lang, controller }) {\n    super({ \n        parent, \n        tagName: 'header', \n        className: `${className}__header header` ,\n    });\n    this.controller = controller;\n    this.activeLang = lang;\n    this.container = new Element({\n      parent: this.node,\n      className: `header__container container`,\n    });\n    this.lang = new Element({\n        parent: this.container.node,\n        className: `header__lang lang`,\n        content: this.activeLang,\n    });\n    this.description = new Element({\n        parent: this.container.node,\n        className: `header__description description`,\n        content: `\n        <span>Virtual Keyboard реализована для Window OS</span>\n        <span>Для зажатия контрольной кнопки используйте двойной клик</span>\n      `,\n    });\n  }\n  \n  onChangeLang = (lang) => {\n    this.activeLang = lang;\n    this.lang.node.textContent = this.activeLang;\n  }\n}\n\nexport { Header };\n","import { Element } from './helper/element';\n\nclass Textarea extends Element {\n  constructor({\n    parent,\n    className,\n  }) {\n    super({\n      parent,\n      tagName: 'textarea',\n      className: `${className}__textarea textarea`,\n    });\n    this.node.addEventListener('keydown', (event) => {event.preventDefault();});\n    this.node.addEventListener('keyup', (event) => {event.preventDefault();});\n    // this.node.onkeydown = (event) => {console.log(event.code); event.preventDefault();}\n    // this.node.onkeyup = (event) => event.preventDefault();\n    this.node.focus();\n    // this.node.onmousedown = (event) => {\n    //   event.preventDefault();\n    // };\n    // this.node.onmouseup = (event) => {\n    //   event.preventDefault();\n    // };\n\n  }\n  \n  setContent = (content) => {\n    this.node.textContent = content;\n    this.node.focus();\n  }\n}\n\nexport { Textarea };\n","import { Element } from '../helper/element.js';\n\nclass Key extends Element {\n  constructor({ \n    parent, \n    className, \n    code,\n    content,\n    controller,\n   }) {\n    super({ \n        parent,\n        tagName: 'button',\n        className: `${className}__btn btn ${code}` ,\n    });\n    this.code = code;\n    this.content = content;\n    this.controller = controller;\n    this.node.tabIndex = '-1';\n    this.beforeContent = new Element({\n      parent: this.node,\n      tagName: 'span',\n      className: 'btn__content btn__content--before',\n    });\n    this.mainContent = new Element({\n      parent: this.node,\n      tagName: 'span',\n      className: 'btn__content btn__content--main',\n    });\n    this.update(this.content);\n    this.node.onmousedown = (event) => {\n      event.preventDefault();\n      this.controller.mouseDown(this.code, event.timeStamp);\n      this.node.onmouseover = (event) => this.node.onmouseup(event);\n    };\n    // this.node.onmousedown = (event) => { onClick('mouseDown', event.timeStamp); this.node.onmouseover = () => this.node.onmouseup(); };\n    this.node.onmouseup = (event) => {\n      this.controller.mouseUp(this.code, event.timeStamp);\n      this.node.onmouseover = null;\n    };\n\n  }\n  \n  update = (content) => {\n    if (this.content !== content) this.content = content;\n    this.mainContent.node.textContent = this.content[0];\n    this.beforeContent.node.textContent = `${this.content.length === 2 ? this.content[1] : ''}`;\n  };\n  \n  \n}\n\nexport { Key };\n","import { Key } from \"./Key\";\n\nclass KeyAlt extends Key {\n  constructor({\n    parent, \n    className, \n    code,\n    content,\n    controller,\n  }) {\n    super({ \n      parent, \n      className, \n      code,\n      content,\n      controller,\n    });\n  }\n}\n\nexport { KeyAlt };\n","import { Key } from \"./Key\";\n\nclass KeyArrow extends Key {\n  constructor({\n    parent, \n    className, \n    code,\n    content,\n    controller,\n  }) {\n    super({ \n      parent, \n      className, \n      code,\n      content,\n      controller,\n    });\n  }\n}\n\nexport { KeyArrow };\n","import { Key } from \"./Key\";\n\nclass KeyCapsLook extends Key {\n  constructor({\n    parent, \n    className, \n    code,\n    content,\n    controller,\n  }) {\n    super({ \n      parent, \n      className, \n      code,\n      content,\n      controller,\n    });\n  }\n}\n\nexport { KeyCapsLook };\n","import { Key } from \"./Key\";\n\nclass KeyControl extends Key {\n  constructor({\n    parent, \n    className, \n    code,\n    content,\n    controller,\n}) {\n    super({ \n      parent, \n      className, \n      code,\n      content,\n      controller,\n    });\n  }\n}\n\nexport { KeyControl };\n","import { Key } from \"./Key\";\n\nclass KeyMeta extends Key {\n  constructor({\n    parent, \n    className, \n    code,\n    content,\n    controller,\n  }) {\n    super({ \n      parent, \n      className, \n      code,\n      content,\n      controller,\n    });\n  }\n}\n\nexport { KeyMeta };\n","import { Key } from \"./Key\";\n\nclass KeyShift extends Key {\n  constructor({       \n    parent, \n    className, \n    code,\n    content,\n    controller,\n}) {\n    super({ \n      parent, \n      className, \n      code,\n      content,\n      controller,\n    });\n  }\n}\n\nexport { KeyShift };\n","import { Element } from './helper/element';\nimport { Key } from './key/Key';\nimport { KeyAlt } from './key/KeyAlt';\nimport { KeyArrow } from './key/KeyArrow';\nimport { KeyCapsLook } from './key/KeyCapsLook';\nimport { KeyControl } from './key/KeyControl';\nimport { KeyMeta } from './key/KeyMeta';\nimport { KeyShift } from './key/KeyShift';\n\nconst KeyMap = {\n  'ShiftLeft': KeyShift,\n  'ShiftRight': KeyShift,\n  'ControlLeft': KeyControl,\n  'ControlRight': KeyControl,\n  'MetaLeft': KeyMeta,\n  'AltLeft': KeyAlt,\n  'AltRight': KeyAlt,\n  'ArrowLeft': KeyArrow,\n  'ArrowRight': KeyArrow,\n  'CapsLook': KeyCapsLook,\n}\n\nclass Board extends Element {\n  constructor({ parent, className, lang, controller }) {\n    super({ \n        parent, \n        className: `${className}__board board` ,\n    });\n    this.lang = lang;\n    this.controller = controller;\n    this.rows = {};\n    this.keys = {};\n    this.btns = {};\n    for (let i = 0; i < 5; i += 1) {\n      this.rows[i] = new Element({\n        parent: this.node,\n        className: `board__row row`,\n      });\n      // this.rows.push(new Element({\n      //   parent: this.node,\n      //   className: `board__row row`,\n      // }));\n    }\n  }\n  \n  init = (keys) => {\n    this.keys = keys;\n    Object.keys(this.keys).forEach((key, index) => {\n      const keyData = this.keys[key];\n      const { row, code } = keyData;\n      const KeyConstructor = KeyMap[code] || Key;\n      this.btns[code] = new KeyConstructor({\n        parent: this.rows[row - 1].node,\n        className: `board`,\n        code,\n        content: keyData[`${this.lang}`].name,\n        controller: this.controller.keyHandler,\n      });\n      // this.btns.push(new Button({\n      //   parent: this.rows[row - 1].node,\n      //   className: `board`,\n      //   lang: this.lang,\n      //   data: btn,\n      // }));\n    });\n  }\n}\n\nexport { Board };\n","import { Element } from './helper/element';\nimport { Textarea } from './Textarea';\nimport { Board } from './Board';\n\nclass Main extends Element {\n  constructor({ parent, className, controller }) {\n    super({ \n      parent, \n      tagName: 'main', \n      className: `${className}__main main` ,\n    });\n    this.controller = controller;\n    this.container = new Element({\n      parent: this.node,\n      className: `main__container container`,\n  });\n    this.textarea = new Textarea({\n        parent: this.container.node,\n        className,\n    });\n    this.board = new Board({\n        parent: this.container.node,\n        className,\n        lang: 'en',\n        controller: this.controller.boardHandler,\n    });\n    this.node.onmousedown = (event) => {\n      this.textarea.node.focus();\n    };\n    this.node.onmouseup = (event) => {\n      this.textarea.node.focus();\n    }\n  }\n  \n  init = (keys) => {\n    this.board.init(keys);\n  }\n  \n  onChangeTextareaContent = (content) => {\n    this.textarea.setContent(content);\n  };\n  \n  onChangeCursorPosition = ({ start, end }) => {\n    this.textarea.node.setSelectionRange(start, end);\n  };\n  \n  onInitKeys = (keys) => {\n    this.board.init(keys);\n  }\n}\n\nexport { Main };\n","class DataApi {\n  constructor() {\n    this.data = [];\n  }\n\n  getKeysData() {\n    return fetch('./data/keys.json').then((res) => res.json()).then((data) => {\n      if (!Array.isArray(data)) {\n        throw new Error('Data load error');\n      }\n      this.data = data;\n      return this.data;\n    });\n  }\n}\n\nexport { DataApi };\n","import { Header } from './Header';\nimport { Element } from './helper/element';\nimport { Main } from './Main';\nimport { DataApi } from './helper/data-api';\n\nclass View extends Element {\n  constructor({ parent, controller, store }) {\n    super({ parent, className: 'keyboard' });\n    this.controller = controller;\n    this.store = store;\n    this.data = [];\n    this.keys = [];\n    this.header = new Header({\n        parent: this.node,\n        className: 'keyboard',\n        lang: 'en',\n        controller,\n    });\n    this.main = new Main({\n        parent: this.node,\n        className: 'keyboard',\n        controller: this.controller,\n    });\n    document.addEventListener('keydown', (event) => this.controller.keyDown(event.code), true);\n    document.addEventListener('keyup', (event) => this.controller.keyUp(event.code), true);\n    this.store.onChangeTextareaContent.add((content) => this.main.onChangeTextareaContent(content));\n    this.store.onChangeLang.add((lang) => this.header.onChangeLang(lang));\n    this.store.onChangeCursorPosition.add((position) => this.main.onChangeCursorPosition(position));\n    this.store.onInitKeys.add((keys) => this.main.onInitKeys(keys));\n  }\n  \n  init = () => {\n    const data = new DataApi();\n    data.getKeysData().then((loaded) => {\n      this.data = loaded;\n      this.controller.initKeyboard(this.data);\n    });\n      // .then(() => {\n      //   this.main.init(this.data);\n      // });\n  }\n}\n\nexport { View };\n","import { Store } from './Store';\nimport { Controller } from './Controller';\nimport { View } from './View';\n\nimport '../assets/css/style.scss';\n\nconst Keyboard = (parent) => {\n  const store = new Store();\n  const controller = new Controller(store);\n  const view = new View({\n    parent,\n    controller,\n    store,\n  });\n  view.init();\n};\n\nexport { Keyboard };\n","import { Keyboard } from './component/Keyboard.js';\n\nconst keyboard = Keyboard(document.body);\nwindow.keyboard = keyboard;\n"],"names":["Signal","_createClass","_this","_classCallCheck","_defineProperty","listener","_listener","push","param","filter","elem","params","forEach","this","Store","_langIndex","_langMap","_textareaContent","_textareaRow","_cursor","line","pos","number","_keys","_activeBtns","_lastControl","id","time","_activeControls","_lastKey","_capsLock","key","get","set","newPosition","onChangeCursorPosition","emit","start","end","textareaRow","value","content","onChangeTextareaContent","keysMap","onInitKeys","langIndex","onChangeLang","langMap","code","btnsMap","newLastControl","newActiveControls","newLastKey","flag","Editor","string","split","map","row","concat","length","maxRowLength","arr","restString","lastSpaceIndex","match","lastIndexOf","slice","flat","sumOfRowsLengths","position","i","textareaContent","selectText","cursor","symbol","_this$cursor","newTextareaContent","prepareTextareaRow","cursorPosition","findCursorPosition","_objectSpread","console","log","direction","_this$cursor2","_this2","splitText","Command","controller","editor","onExecute","backup","backCursor","execute","Add","_Command","_inherits","_super","call","saveBackup","addSymbol","newSymbol","Delete","deleteSymbol","deleteDirection","Controller","store","activeKeys","Object","keys","activeControls","includes","_ref","shiftValue","value_shift","hasActiveShift","capsLock","addTextareaContent","_ref2","executeCommand","_ref3","_ref4","caps","toLowerCase","cursorHandler","lang","getKeyContent","type","lastControl","activeBtns","lastKey","hasControls","hasControlCombination","resetControls","editMap","excludeKey","_this$store$cursor","newLine","newNumber","_this$store$cursor2","newPos","_this$store$cursor3","_this$store$cursor4","moveCursor","space","upCursor","downCursor","leftCursor","rightCursor","mouseDown","mouseUp","keyHandler","data","history","controlsKeys","activeControlsKeys","controlCombinations","every","l","join","command","Element","_ref$parent","parent","_ref$tagName","tagName","_ref$className","className","_ref$content","element","document","createElement","classList","innerHTML","append","node","remove","Header","_Element","_assertThisInitialized","activeLang","textContent","container","description","Textarea","focus","addEventListener","event","preventDefault","Key","mainContent","beforeContent","tabIndex","update","onmousedown","timeStamp","onmouseover","onmouseup","KeyAlt","_Key","KeyArrow","KeyCapsLook","KeyControl","KeyMeta","KeyShift","KeyMap","Board","index","keyData","KeyConstructor","btns","rows","name","Main","board","init","textarea","setContent","setSelectionRange","boardHandler","DataApi","fetch","then","res","json","Array","isArray","Error","View","getKeysData","loaded","initKeyboard","header","main","keyDown","keyUp","add","keyboard","body","window"],"sourceRoot":""}