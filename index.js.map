{"version":3,"file":"index.js","mappings":"k7BAAMA,EAAMC,GACV,SAAAD,IAAc,IAAAE,EAAA,M,4FAAAC,CAAA,KAAAH,GAAAI,EAAA,YAIR,SAACC,GACLH,EAAKI,UAAUC,KAAKF,EACtB,IAACD,EAAA,eAEQ,SAACC,GACRH,EAAKI,UAAYJ,EAAKI,UAAUE,QAAO,SAACC,GAAI,OAAKA,IAASJ,CAAQ,GACpE,IAACD,EAAA,aAEM,SAACM,GACNR,EAAKI,UAAUK,SAAQ,SAACN,GAAQ,OAAKA,EAASK,EAAO,GACvD,IAbEE,KAAKN,UAAY,EACnB,I,+yBCHuC,IAEnCO,EAAK,WACT,SAAAA,K,4FAAcV,CAAA,KAAAU,GAAAT,EAAA,0BA6IO,IAAIJ,GAAQI,EAAA,gCAEN,IAAIJ,GAAQI,EAAA,gCAEZ,IAAIJ,GAAQI,EAAA,+BAEb,IAAIJ,GAAQI,EAAA,oBAEvB,IAAIJ,GAAQI,EAAA,8BAEF,IAAIJ,GAAQI,EAAA,mBAEvB,IAAIJ,GAxJhBY,KAAKE,WAAa,EAClBF,KAAKG,SAAW,CAAC,KAAM,MACvBH,KAAKI,iBAAmB,GACxBJ,KAAKK,aAAe,CAAC,IACrBL,KAAKM,QAAU,CAAEC,KAAM,EAAGC,IAAK,EAAGC,OAAQ,GAC1CT,KAAKU,MAAQ,CAAC,EACdV,KAAKW,YAAc,CAAC,EACpBX,KAAKY,aAAe,CAAEC,GAAI,KAAMC,KAAM,MACtCd,KAAKe,gBAAkB,CAAC,EACxBf,KAAKgB,SAAW,KAChBhB,KAAKiB,WAAY,EACjBjB,KAAKkB,qBAAuB,EAC9B,C,QA8HC,O,EA9HAjB,G,EAAA,EAAAkB,IAAA,eAAAC,MAED,SAAAC,GAAkC,IAAnBC,EAAID,EAAJC,KAAMC,EAASF,EAATE,UACnBvB,KAAKE,WAAaqB,EAClBvB,KAAKU,MAAQY,EACbtB,KAAKwB,YAAYC,KAAK,CACpBH,KAAAA,EACAI,KAAM1B,KAAKG,SAASH,KAAKE,aAE7B,GAAC,CAAAiB,IAAA,sBAAAQ,IAED,WACE,OAAO3B,KAAKkB,oBACd,EAACU,IAED,SAAwBC,GACtB7B,KAAKkB,qBAAuBW,EAC5B7B,KAAK8B,yBAAyBL,KAAKzB,KAAKkB,qBAC1C,GAAC,CAAAC,IAAA,SAAAQ,IACD,WACE,OAAO3B,KAAKM,OACd,EAACsB,IAED,SAAWG,GACT/B,KAAKM,QAAUyB,EACf/B,KAAKgC,uBAAuBP,KAAK,CAC/BQ,MAAOjC,KAAKM,QAAQG,OACpByB,IAAKlC,KAAKM,QAAQG,QAEtB,GAAC,CAAAU,IAAA,cAAAQ,IAED,WACE,OAAO3B,KAAKK,YACd,EAACuB,IAED,SAAgBO,GACdnC,KAAKK,aAAe8B,CACtB,GAAC,CAAAhB,IAAA,MAAAC,MAED,WACE,OAAOpB,IACT,GAAC,CAAAmB,IAAA,kBAAAQ,IAED,WACE,OAAO3B,KAAKI,gBACd,EAACwB,IAED,SAAoBQ,GAClBpC,KAAKI,iBAAmBgC,EACxBpC,KAAKqC,wBAAwBZ,KAAKzB,KAAKI,iBACzC,GAAC,CAAAe,IAAA,OAAAQ,IAED,WACE,OAAO3B,KAAKU,KACd,EAACkB,IAED,SAASU,GACPtC,KAAKU,MAAQ4B,CACf,GAAC,CAAAnB,IAAA,YAAAQ,IAED,WACE,OAAO3B,KAAKE,UACd,EAAC0B,IAED,SAAcL,GACZvB,KAAKE,WAAaqB,EAClBvB,KAAKuC,aAAad,KAAKzB,KAAKG,SAASH,KAAKE,aAC1CF,KAAKwC,yBAAyBf,KAAK,CACjCC,KAAM1B,KAAKG,SAASH,KAAKuB,WACzBkB,gBAAiBzC,KAAKyC,gBACtBN,YAAanC,KAAKmC,YAClBO,OAAQ1C,KAAK0C,QAEjB,GAAC,CAAAvB,IAAA,OAAAQ,IAED,WACE,OAAO3B,KAAKG,QACd,EAACyB,IAED,SAASe,GACP3C,KAAKG,SAAWwC,CAClB,GAAC,CAAAxB,IAAA,gBAAAC,MAED,SAAcwB,GACZ,OAAO5C,KAAKU,MAAMkC,KAAS,CAC7B,GAAC,CAAAzB,IAAA,aAAAQ,IAED,WACE,OAAO3B,KAAKW,WACd,EAACiB,IAED,SAAeiB,GACb7C,KAAKW,YAAckC,EACnB7C,KAAK8C,mBAAmBrB,KAAKoB,EAC/B,GAAC,CAAA1B,IAAA,cAAAQ,IAED,WACE,OAAO3B,KAAKY,YACd,EAACgB,IAED,SAAgBmB,GACd/C,KAAKY,aAAemC,CACtB,GAAC,CAAA5B,IAAA,iBAAAQ,IAED,WACE,OAAO3B,KAAKe,eACd,EAACa,IAED,SAAmBoB,GACjBhD,KAAKe,gBAAkBiC,CACzB,GAAC,CAAA7B,IAAA,UAAAQ,IAED,WACE,OAAO3B,KAAKgB,QACd,EAACY,IAED,SAAYqB,GACVjD,KAAKgB,SAAWiC,CAClB,GAAC,CAAA9B,IAAA,WAAAQ,IAED,WACE,OAAO3B,KAAKiB,SACd,EAACW,IAED,SAAasB,GACXlD,KAAKiB,UAAYiC,CACnB,M,oEAACjD,CAAA,CA5IQ,G,+5BCFLkD,EAAU9D,GACd,SAAA8D,IAAc,IAAA7D,EAAA,M,4FAAAC,CAAA,KAAA4D,GAAA3D,EAAA,gBAIJ,kBAAMF,EAAK8D,OAAO9D,EAAK8D,OAAOC,OAAS,IAAM,EAAE,IAAA7D,EAAA,aAElD,SAAC8D,GACNhE,EAAK8D,OAAOzD,KAAK2D,EACnB,IAPEtD,KAAKoD,OAAS,EAChB,I,82CCHoC,IAEhCG,EAAM,WACV,SAAAA,IAAc,IAAAjE,EAAA,M,4FAAAC,CAAA,KAAAgE,GAAA/D,EAAA,2BASO,SAAC8D,GA0BpB,OAzBkBA,EAAOE,MAAM,MAAMC,KAAI,SAACC,GAAG,SAAAC,OAAQD,EAAG,SAC9BD,KAAI,SAACC,GAC7B,GAAIA,EAAIL,QAAU/D,EAAKsE,aAAc,OAAOF,EAG5C,IAFA,IAAMG,EAAM,GACRC,EAAaJ,EACVI,EAAWT,OAAS/D,EAAKsE,cAAc,CAC5C,IAAMG,EAA6B,KAAtBzE,EAAKsE,aACdE,EAAWE,MAAM,YACK,KAAtB1E,EAAKsE,aACHE,EAAWE,MAAM,YACK,KAAtB1E,EAAKsE,aACHE,EAAWE,MAAM,YACjBF,EAAWE,MAAM,YACnBC,EAAiBF,EAAK,GAAGG,YAAY,MACnB,IAApBD,GACFJ,EAAIlE,KAAKmE,EAAWK,MAAM,EAAGF,EAAiB,IAC9CH,EAAaR,EAAOa,MAAMF,EAAiB,KAE3CJ,EAAIlE,KAAKoE,EAAK,GAAGI,MAAM,GAAI,IAC3BL,EAAaR,EAAOa,MAAM7E,EAAKsE,aAAe,GAElD,CAEA,OADAC,EAAIlE,KAAKmE,GACFD,CACT,IACeO,MACjB,IAAC5E,EAAA,0BAyBmB,SAACiB,GACnBnB,EAAKoD,OAAM2B,EAAA,CACT5D,OAAAA,GACGnB,EAAKgF,mBAAmB7D,GAE/B,IAACjB,EAAA,2BAEoB,SAACiB,GAGpB,IAFA,IAAI8D,EAAmB,EACjBC,EAAW,CAAC,EACTC,EAAI,EAAGA,EAAInF,EAAK6C,YAAYkB,OAAQoB,GAAK,EAAG,CACnD,GAAIhE,EAAS8D,EAAmBjF,EAAK6C,YAAYsC,GAAGpB,OAAQ,CAC1DmB,EAASjE,KAAOkE,EAChBD,EAAShE,IAAMC,EAAS8D,EACxB,KACF,CACAA,GAAoBjF,EAAK6C,YAAYsC,GAAGpB,MAC1C,CACA,OAAOmB,CACT,IAAChF,EAAA,qBAEc,SAACkF,GACd,IAAAC,EAA8BrF,EAAKoD,OAA3BnC,EAAIoE,EAAJpE,KAAMC,EAAGmE,EAAHnE,IAAKC,EAAMkE,EAANlE,OACnB,GAAIA,IAAWnB,EAAKmD,gBAAgBY,QAClC,GAAkB,SAAdqB,EAAsB,CACxB,IAAME,EAAqBtF,EAAKmD,gBAAgB0B,MAAM,GAAI,GAC1D7E,EAAKmD,gBAAkBmC,EACvBtF,EAAK6C,YAAc7C,EAAKuF,mBAAmBvF,EAAKmD,iBAChDnD,EAAKoD,OAAS,CACZjC,OAASnB,EAAKmD,gBAAgBY,OAC9B9C,KAAOjB,EAAK6C,YAAYkB,OAAS,EACjC7C,IAAMlB,EAAK6C,YAAY7C,EAAK6C,YAAYkB,OAAS,GAAGA,OAExD,OACK,GAAkB,SAAdqB,GACT,GAAe,IAAXjE,EAAc,CAChBnB,EAAKmD,gBAAkBnD,EAAKmD,gBAAgB0B,MAAM,EAAG1D,EAAS,GAC1DnB,EAAKmD,gBAAgB0B,MAAM1D,GAC/BnB,EAAK6C,YAAc7C,EAAKuF,mBAAmBvF,EAAKmD,iBAChD,IAAMqC,EAAiBxF,EAAKgF,mBAAmB7D,EAAS,GACxDnB,EAAKoD,OAAM2B,EAAA,CACT5D,OAAQA,EAAS,GACdqE,EAEP,OACSrE,EAASnB,EAAKmD,gBAAgBY,SACvC/D,EAAKmD,gBAAkBnD,EAAKmD,gBAAgB0B,MAAM,EAAG1D,GACjDnB,EAAKmD,gBAAgB0B,MAAM1D,EAAS,GACxCnB,EAAK6C,YAAc7C,EAAKuF,mBAAmBvF,EAAKmD,iBAChDnD,EAAKoD,OAAS,CACZjC,OAAAA,EACAF,KAAAA,EACAC,IAAAA,GAGN,IAAChB,EAAA,mBAgBY,SAACuF,EAAaC,GACzB,IAAM/C,EAAQgD,KAAKC,IAAIH,EAAaC,GAC9B9C,EAAM+C,KAAKE,IAAIJ,EAAaC,GAC5BI,EAAW9F,EAAKmD,gBAAgB0B,MAAMlC,EAAOC,GACnD5C,EAAK8D,OAAOzD,KAAKyF,EACnB,IAAC5F,EAAA,kBAEW,SAACuF,EAAaC,GACxB,IAAM/C,EAAQgD,KAAKC,IAAIH,EAAaC,GAC9B9C,EAAM+C,KAAKE,IAAIJ,EAAaC,GAC5BK,EAAU/F,EAAKmD,gBAAgB0B,MAAMlC,EAAOC,GAClD5C,EAAK8D,OAAOzD,KAAK0F,GACjB/F,EAAKmD,gBAAkBnD,EAAKmD,gBAAgB0B,MAAM,EAAGlC,GACjD3C,EAAKmD,gBAAgB0B,MAAMjC,GAC/B5C,EAAK6C,YAAc7C,EAAKuF,mBAAmBvF,EAAKmD,iBAEhD,IAAMqC,EAAiBxF,EAAKgF,mBAAmBrC,GAC/C3C,EAAKoD,OAAM2B,EAAA,CACT5D,OAAQwB,GACL6C,EAEP,IAxJE9E,KAAKyC,gBAAkB,GACvBzC,KAAKmC,YAAc,GACnBnC,KAAK0C,OAAS,CAAEnC,KAAM,EAAGC,IAAK,EAAGC,OAAQ,GACzCT,KAAK4D,aAAe,GACpB5D,KAAKoD,OAAS,IAAID,EAClBnD,KAAKsF,eAAiB,IACxB,C,QA2HC,O,EA3HA/B,G,EAAA,EAAApC,IAAA,YAAAC,MA+BD,SAAUmE,GACR,IAAQ9E,EAAWT,KAAK0C,OAAhBjC,OACR,GAAIA,IAAWT,KAAKyC,gBAAgBY,OAAQ,CAC1C,IAAMuB,EAAqB5E,KAAKyC,gBAAkB8C,EAClDvF,KAAKyC,gBAAkBmC,EACvB5E,KAAKmC,YAAcnC,KAAK6E,mBAAmB7E,KAAKyC,iBAChD,IAAMqC,EAAiB9E,KAAKsE,mBAAmB7D,EAAS8E,EAAOlC,QAC/DrD,KAAK0C,OAAM2B,EAAA,CACT5D,OAAQA,EAAS8E,EAAOlC,QACrByB,EAEP,KAAO,CACL9E,KAAKyC,gBAAkBzC,KAAKyC,gBAAgB0B,MAAM,EAAG1D,GACjD8E,EAASvF,KAAKyC,gBAAgB0B,MAAM1D,GACxCT,KAAKmC,YAAcnC,KAAK6E,mBAAmB7E,KAAKyC,iBAChD,IAAMqC,EAAiB9E,KAAKsE,mBAAmB7D,EAAS8E,EAAOlC,QAC/DrD,KAAK0C,OAAM2B,EAAA,CACT5D,OAAQA,EAAS8E,EAAOlC,QACrByB,EAEP,CACF,GAAC,CAAA3D,IAAA,gBAAAC,MA2DD,SAAc2D,EAAaC,EAAWQ,GACpC,IAAMvD,EAAQgD,KAAKC,IAAIH,EAAaC,GAC9B9C,EAAM+C,KAAKE,IAAIJ,EAAaC,GAClChF,KAAKyC,gBAAkBzC,KAAKyC,gBAAgB0B,MAAM,EAAGlC,GACjDuD,EAAOxF,KAAKyC,gBAAgB0B,MAAMjC,GACtClC,KAAKmC,YAAcnC,KAAK6E,mBAAmB7E,KAAKyC,iBAEhD,IAAMqC,EAAiB9E,KAAKsE,mBAAmBrC,EAAQuD,EAAKnC,QAC5DrD,KAAK0C,OAAM2B,EAAA,CACT5D,OAAQwB,EAAQuD,EAAKnC,QAClByB,EAEP,M,oEAACvB,CAAA,CAnIS,G,uqBCFNkC,EAAO,WACX,SAAAA,EAAYC,EAAYC,EAAQC,I,4FAAWrG,CAAA,KAAAkG,GACzCzF,KAAK0F,WAAaA,EAClB1F,KAAK2F,OAASA,EACd3F,KAAK6F,sBAAwB,GAC7B7F,KAAK8F,aAAe,CAAEvF,KAAM,EAAGC,IAAK,EAAGC,OAAQ,GAC/CT,KAAKmC,YAAc,CAAC,IACpBnC,KAAK+F,QAAU,kBAAMH,GAAW,CAClC,C,QAUC,O,EAVAH,G,EAAA,EAAAtE,IAAA,aAAAC,MAED,WACEpB,KAAK6F,sBAAwB7F,KAAK2F,OAAOlD,gBACzCzC,KAAK8F,aAAe9F,KAAK2F,OAAOjD,OAChC1C,KAAKmC,YAAcnC,KAAK2F,OAAOxD,WACjC,GAAC,CAAAhB,IAAA,OAAAC,MAED,WACEpB,KAAK2F,OAAS3F,KAAK6F,qBACrB,M,oEAACJ,CAAA,CAlBU,G,weCAuB,IAE9BO,EAAG,SAAAC,I,qRAAAC,CAAAF,EAAAC,GAAA,I,MAAAE,G,EAAAH,E,qrBACP,SAAAA,EAAYN,EAAYC,GAAQ,IAAArG,EAAA,O,4FAAAC,CAAA,KAAAyG,GAAA1G,EAAA6G,EAAAC,KAAA,KACxBV,EAAYC,GAAQ,WAGxB,OAFAA,EAAOU,UAAUX,EAAWY,WAC5BhH,EAAKiH,cACE,CACT,GACF,CAAC,O,EAAAP,E,oDAAA,CAPM,CAASP,G,weCFkB,IAE9Be,EAAM,SAAAP,I,qRAAAC,CAAAM,EAAAP,GAAA,I,MAAAE,G,EAAAK,E,qrBACV,SAAAA,EAAYd,EAAYC,GAAQ,IAAArG,EAAA,O,4FAAAC,CAAA,KAAAiH,GAAAlH,EAAA6G,EAAAC,KAAA,KACxBV,EAAYC,GAAQ,WAGxB,OAFAA,EAAOc,aAAaf,EAAWgB,iBAC/BpH,EAAKiH,cACE,CACT,GACF,CAAC,O,EAAAC,E,oDAAA,CAPS,CAASf,G,uqBCFfkB,EAAO,WACX,SAAAA,EAAYC,I,4FAAarH,CAAA,KAAAoH,GACvB3G,KAAK6G,QAAU,CAACD,GAChB5G,KAAK8G,mBAAqB,CAC5B,C,QAoBC,O,EApBAH,G,EAAA,EAAAxF,IAAA,OAAAC,MAED,SAAK2F,GACH/G,KAAK8G,oBAAsB,EACvB9G,KAAK6G,QAAQxD,OAASrD,KAAK8G,qBAC7B9G,KAAK6G,QAAU7G,KAAK6G,QAAQ1C,MAAM,EAAGnE,KAAK8G,qBAE5C9G,KAAK6G,QAAQ7G,KAAK8G,oBAAsBC,CAC1C,GAAC,CAAA5F,IAAA,OAAAC,MAED,WACE,OAAgC,IAA5BpB,KAAK8G,qBACT9G,KAAK8G,oBAAsB,EACpB9G,KAAK6G,QAAQ7G,KAAK8G,oBAC3B,GAAC,CAAA3F,IAAA,OAAAC,MAED,WACE,OAAIpB,KAAK8G,mBAAqB,IAAM9G,KAAK6G,QAAQxD,SACjDrD,KAAK8G,oBAAsB,EACpB9G,KAAK6G,QAAQ7G,KAAK8G,oBAC3B,M,oEAACH,CAAA,CAxBU,G,weCAuB,IAE9BK,EAAI,SAAAf,I,qRAAAC,CAAAc,EAAAf,GAAA,I,MAAAE,G,EAAAa,E,qrBACR,SAAAA,EAAYtB,EAAYC,GAAQ,O,4FAAApG,CAAA,KAAAyH,GAAAb,EAAAC,KAAA,KACxBV,EAAYC,GAAQ,WAKxB,OAJAA,EAAOsB,WACLvB,EAAWwB,kBAAkBjF,MAC7ByD,EAAWwB,kBAAkBhF,MAExB,CACT,GACF,CAAC,O,EAAA8E,E,oDAAA,CATO,CAASvB,G,weCFiB,IAE9B0B,EAAO,SAAAlB,I,qRAAAC,CAAAiB,EAAAlB,GAAA,I,MAAAE,G,EAAAgB,E,qrBACX,SAAAA,EAAYzB,EAAYC,GAAQ,IAAArG,EAAA,O,4FAAAC,CAAA,KAAA4H,GAAA7H,EAAA6G,EAAAC,KAAA,KACxBV,EAAYC,GAAQ,WAOxB,OANAA,EAAOyB,cACL1B,EAAWwB,kBAAkBjF,MAC7ByD,EAAWwB,kBAAkBhF,IAC7BwD,EAAWY,WAEbhH,EAAKiH,cACE,CACT,GACF,CAAC,O,EAAAY,E,oDAAA,CAXU,CAAS1B,G,weCFc,IAE9B4B,EAAG,SAAApB,I,qRAAAC,CAAAmB,EAAApB,GAAA,I,MAAAE,G,EAAAkB,E,qrBACP,SAAAA,EAAY3B,EAAYC,GAAQ,IAAArG,EAAA,O,4FAAAC,CAAA,KAAA8H,GAAA/H,EAAA6G,EAAAC,KAAA,KACxBV,EAAYC,GAAQ,WAMxB,OALAA,EAAO2B,UACL5B,EAAWwB,kBAAkBjF,MAC7ByD,EAAWwB,kBAAkBhF,KAE/B5C,EAAKiH,cACE,CACT,GACF,CAAC,O,EAAAc,E,oDAAA,CAVM,CAAS5B,G,weCFkB,IAE9B8B,EAAK,SAAAtB,I,qRAAAC,CAAAqB,EAAAtB,GAAA,I,MAAAE,G,EAAAoB,E,qrBACT,SAAAA,EAAY7B,EAAYC,GAAQ,IAAArG,EAAA,O,4FAAAC,CAAA,KAAAgI,GAAAjI,EAAA6G,EAAAC,KAAA,KACxBV,EAAYC,GAAQ,WAGxB,OAFAA,EAAOU,UAAUX,EAAWY,WAC5BhH,EAAKiH,cACE,CACT,GACF,CAAC,O,EAAAgB,E,oDAAA,CAPQ,CAAS9B,G,8qBCFd+B,GAAgB,WACpB,SAAAA,EAAAnG,GAKG,IAAAoG,EAAApG,EAJDK,KAAAA,OAAI,IAAA+F,EAAG,KAAIA,EAAAC,EAAArG,EACXoB,gBAAAA,OAAe,IAAAiF,EAAG,GAAEA,EAAAC,EAAAtG,EACpBc,YAAAA,OAAW,IAAAwF,EAAG,CAAC,IAAGA,EAAAC,EAAAvG,EAClBqB,OAAAA,OAAM,IAAAkF,EAAG,CAAEnH,OAAQ,EAAGF,KAAM,EAAGC,IAAK,GAAGoH,G,4FAAArI,CAAA,KAAAiI,GAEvCxH,KAAK0B,KAAOA,EACZ1B,KAAKyC,gBAAkBA,EACvBzC,KAAKmC,YAAcA,EACnBnC,KAAK0C,OAASA,CAChB,C,QAkCC,O,EAlCA8E,E,EAAA,EAAArG,IAAA,SAAAC,MAED,SAAcyG,GACZ,OAAOC,KAAKC,UAAUF,EACxB,GAAC,CAAA1G,IAAA,6BAAAC,MAED,SAAkC4G,EAAQ7G,GACxC,OAAOA,KAAO6G,CAChB,GAAC,CAAA7G,IAAA,WAAAC,MAED,SAAgByG,GACd,IAAMI,EAAW,CAAC,EAElB,GAAa,OAATJ,GAAiC,WAAhBK,GAAOL,GAC1B,MAAM,IAAIM,MAAM,8BAmBlB,OAhBInI,KAAKoI,2BAA2BP,EAAM,UACxCI,EAASvG,KAAOmG,EAAKnG,MAGnB1B,KAAKoI,2BAA2BP,EAAM,qBACxCI,EAASxF,gBAAkBoF,EAAKpF,iBAG9BzC,KAAKoI,2BAA2BP,EAAM,iBACxCI,EAAS9F,YAAc0F,EAAK1F,aAG1BnC,KAAKoI,2BAA2BP,EAAM,YACxCI,EAASvF,OAASmF,EAAKnF,QAGlB,IAAI8E,EAAiBS,EAC9B,IAlCC,M,eAAA,M,8DAkCAT,CAAA,CA7CmB,G,mnECQ4B,IAE5Ca,GAAU,WACd,SAAAA,EAAYC,GAAO,IAAAhJ,EAAA,M,4FAAAC,CAAA,KAAA8I,GAAA7I,GAAA,2BAqBG,CACpB,CAAC,UAAW,QACZ,CAAC,UAAW,QACZ,CAAC,UAAW,QACZ,CAAC,UAAW,QACZ,CAAC,UAAW,QACZ,CAAC,UAAW,WACbA,GAAA,kBAEY,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,MAAO,QAAMA,GAAA,2BAEnE,SAAC+I,GACpBC,aAAaC,QAAQ,yBAA0BjB,GAAiBkB,OAAOH,GACzE,IAAC/I,GAAA,4BAEqB,WACpB,IAEE,OADagI,GAAiBmB,SAASb,KAAKc,MAAMJ,aAAaK,QAAQ,2BAA6B,IAEtG,CAAE,MAAOC,GACP,OAAO,IAAItB,GAAiB,CAC1B9F,KAAM,KACNe,gBAAiB,GACjBN,YAAa,CAAC,IACdO,OAAQ,CAAEjC,OAAQ,EAAGF,KAAM,EAAGC,IAAK,IAEvC,CACF,IAAChB,GAAA,uBAEgB,WACf,IAAMuJ,EAAaC,OAAO1H,KAAKhC,EAAK2J,gBACjCrJ,QAAO,SAAC6E,GAAC,OAAgC,IAA3BnF,EAAK2J,eAAexE,EAAQ,IAC7C,OAA6B,IAAtBsE,EAAW1F,SAAiB0F,EAAWG,SAAS,cAAgBH,EAAWG,SAAS,cAC7F,IAAC1J,GAAA,eAEQ,SAACoD,EAAIvB,GAAyC,IACjDkE,EADYnE,EAAKC,EAALD,MAAoB+H,EAAU9H,EAAvB+H,YAGrB7D,EADE3C,EAAKsG,SAAS,OAEb5J,EAAK+J,mBAAqB/J,EAAKgJ,MAAMgB,WACjChK,EAAK+J,kBAAoB/J,EAAKgJ,MAAMgB,SACvCH,EAAa/H,EACH9B,EAAK+J,iBAAmBF,EAAa/H,EACrD9B,EAAKiK,gBAELjK,EAAKkK,IAAIjE,EACX,IAAC/F,GAAA,eAEQ,SAACoD,GACRtD,EAAKoH,gBAA2B,cAAT9D,EAAuB,OAAS,OACvDtD,EAAKqG,OAAOlD,gBAAkBnD,EAAKgJ,MAAM7F,gBACzCnD,EAAKqG,OAAOxD,YAAc7C,EAAKgJ,MAAMnG,YACrC7C,EAAKqG,OAAOjD,OAASpD,EAAKgJ,MAAM5F,OAChCpD,EAAKqG,OAAO/B,aAAetE,EAAKgJ,MAAMmB,oBACtCnK,EAAKoK,eAAe,IAAIlD,EAAOlH,EAAMA,EAAKqG,SAC1CrG,EAAKgJ,MAAM7F,gBAAkBnD,EAAKqG,OAAOlD,gBACzCnD,EAAKgJ,MAAMnG,YAAc7C,EAAKqG,OAAOxD,YACrC7C,EAAKgJ,MAAM5F,OAASpD,EAAKqG,OAAOjD,OAChCpD,EAAKoH,gBAAkB,IACzB,IAAClH,GAAA,cAEO,SAACoD,EAAI+G,GAAgB,IAAZvI,EAAKuI,EAALvI,MACf9B,EAAKkK,IAAIpI,EACX,IAAC5B,GAAA,iBAEU,WACT,IAAMoK,EAAOtK,EAAKgJ,MAAMgB,SACxBhK,EAAKgJ,MAAMgB,UAAYM,CACzB,IAACpK,GAAA,mBAEY,SAACoD,GACZ,IAAM8B,EAAY9B,EAAKuB,MAAM,GAAG0F,cAChC,GAAIvK,EAAKwK,eAAgB,CACvB,IAAM7H,EAAQgD,KAAKC,IAAI5F,EAAK4H,kBAAkBjF,MAAO3C,EAAK4H,kBAAkBhF,KACtEA,EAAM+C,KAAKE,IAAI7F,EAAK4H,kBAAkBjF,MAAO3C,EAAK4H,kBAAkBhF,KAc1E,GAZA5C,EAAKqG,OAAOlD,gBAAkBnD,EAAKgJ,MAAM7F,gBACzCnD,EAAKqG,OAAOxD,YAAc7C,EAAKgJ,MAAMnG,YACrC7C,EAAKqG,OAAOjD,OAASpD,EAAKgJ,MAAM5F,OAChCpD,EAAKqG,OAAO/B,aAAetE,EAAKgJ,MAAMmB,oBACtCnK,EAAKqG,OAAOoE,kBACK,SAAdrF,GAAsC,OAAdA,EACrBzC,EAAQC,GAEd5C,EAAKgJ,MAAM5F,OAASpD,EAAKqG,OAAOjD,OAChCpD,EAAKwK,gBAAiB,EACtBxK,EAAK0K,cAAe,EACpB1K,EAAK4H,kBAAoB,KACP,SAAdxC,GAAsC,UAAdA,EAAuB,OAAO,CAC5D,CAGA,OADApF,EAAK2K,cAAcvF,MACZ,CACT,IAAClF,GAAA,YAEK,SAAC+F,GAGL,GAFAjG,EAAKgH,UAAYf,EAEbjG,EAAKwK,eAaP,OAZAxK,EAAKqG,OAAOlD,gBAAkBnD,EAAKgJ,MAAM7F,gBACzCnD,EAAKqG,OAAOxD,YAAc7C,EAAKgJ,MAAMnG,YACrC7C,EAAKqG,OAAOjD,OAASpD,EAAKgJ,MAAM5F,OAChCpD,EAAKqG,OAAO/B,aAAetE,EAAKgJ,MAAMmB,oBACtCnK,EAAKoK,eAAe,IAAIvC,EAAQ7H,EAAMA,EAAKqG,SAC3CrG,EAAKgJ,MAAM7F,gBAAkBnD,EAAKqG,OAAOlD,gBACzCnD,EAAKgJ,MAAMnG,YAAc7C,EAAKqG,OAAOxD,YACrC7C,EAAKgJ,MAAM5F,OAASpD,EAAKqG,OAAOjD,OAChCpD,EAAKwK,gBAAiB,EACtBxK,EAAK0K,cAAe,EACpB1K,EAAK4H,kBAAoB,UACzB5H,EAAKgH,UAAY,IAInBhH,EAAKqG,OAAOlD,gBAAkBnD,EAAKgJ,MAAM7F,gBACzCnD,EAAKqG,OAAOxD,YAAc7C,EAAKgJ,MAAMnG,YACrC7C,EAAKqG,OAAOjD,OAASpD,EAAKgJ,MAAM5F,OAChCpD,EAAKqG,OAAO/B,aAAetE,EAAKgJ,MAAMmB,oBACtCnK,EAAKoK,eAAe,IAAI1D,EAAI1G,EAAMA,EAAKqG,SACvCrG,EAAKgJ,MAAM7F,gBAAkBnD,EAAKqG,OAAOlD,gBACzCnD,EAAKgJ,MAAMnG,YAAc7C,EAAKqG,OAAOxD,YACrC7C,EAAKgJ,MAAM5F,OAASpD,EAAKqG,OAAOjD,OAChCpD,EAAKgH,UAAY,EACnB,IAAC9G,GAAA,kBAEW,SAACoD,EAAM9B,GACjB,IAAMY,EAAOpC,EAAKgJ,MAAM5G,KAAKpC,EAAKgJ,MAAM/G,WAClCJ,EAAM7B,EAAKgJ,MAAM4B,cAActH,GAC7BuH,EAAShJ,EAATgJ,KAEK,YAATA,EACG7K,EAAK8K,YAAYvJ,IAAMvB,EAAK8K,YAAYvJ,KAAO+B,GAC9CtD,EAAK8K,YAAYtJ,MAAUA,EAAOxB,EAAK8K,YAAYtJ,KAAQ,KAC/DxB,EAAK2J,eAAerG,GAAQ,EAC5BtD,EAAK+K,WAAWzH,GAAQ,EACxBtD,EAAKgL,QAAU1H,GACLtD,EAAKiL,cAINjL,EAAK2J,eAAerG,IAC7BtD,EAAK2J,eAAerG,GAAQ,EAC5BtD,EAAK+K,WAAWzH,GAAQ,EACxBtD,EAAKgL,QAAU1H,EACftD,EAAK8K,YAAc,CAAEvJ,GAAI,KAAMC,KAAM,OAC3BxB,EAAKkL,sBAAsB5H,IAMrCtD,EAAKiK,gBACLjK,EAAK8K,YAAc,CAAEvJ,GAAI,KAAMC,KAAM,MACrCxB,EAAK+K,WAAWzH,GAAQ,EACxBtD,EAAKgL,QAAU1H,IARftD,EAAK2J,eAAerG,GAAQ,EAC5BtD,EAAK+K,WAAWzH,GAAQ,EACxBtD,EAAKgL,QAAU1H,EACftD,EAAK8K,YAAc,CAAEvJ,GAAI+B,EAAM9B,KAAAA,KAZ/BxB,EAAK8K,YAAc,CAAEvJ,GAAI+B,EAAM9B,KAAAA,GAC/BxB,EAAK+K,WAAWzH,GAAQ,EACxBtD,EAAKgL,QAAU1H,GAiBRtD,EAAKiL,cACVjL,EAAKkL,sBAAsB5H,IAC7BtD,EAAKiK,gBACLjK,EAAK8K,YAAc,CAAEvJ,GAAI,KAAMC,KAAM,MACrCxB,EAAKgL,QAAU1H,EACftD,EAAK+K,WAAWzH,GAAQ,IAEX,SAATuH,GAAoB7K,EAAKmL,QAAQN,IAChC7K,EAAKmL,QAAQN,GAAMvH,EAAMzB,EAAIO,IAClCpC,EAAKiK,gBACLjK,EAAK8K,YAAc,CAAEvJ,GAAI,KAAMC,KAAM,MACrCxB,EAAKgL,QAAU1H,EACftD,EAAK+K,WAAWzH,GAAQ,IAG1BtD,EAAK8K,YAAc,CAAEvJ,GAAI,KAAMC,KAAM,MACrCxB,EAAKgL,QAAU1H,EACftD,EAAK+K,WAAWzH,GAAQ,EACX,SAATuH,GAAoB7K,EAAKmL,QAAQN,IAChC7K,EAAKmL,QAAQN,GAAMvH,EAAMzB,EAAIO,KAEpCpC,EAAKgJ,MAAM+B,WAAa/K,EAAK+K,UAC/B,IAAC7K,GAAA,gBAES,SAACoD,GAET,GADAtD,EAAK+K,WAAa/K,EAAKgJ,MAAM+B,WACzB/K,EAAKgL,UAAY1H,EACnB,GAAItD,EAAKiL,cAC2B,IAA9BjL,EAAK2J,eAAerG,KAAatD,EAAK+K,WAAWzH,GAAQ,GAC7DtD,EAAKgL,QAAU,UAGf,IADA,IAAMzG,EAAMmF,OAAO1H,KAAKhC,EAAK+K,YACpB5F,EAAI,EAAGA,EAAIZ,EAAIR,OAAQoB,GAAK,EACnCnF,EAAK+K,WAAWxG,EAAIY,IAAM,OAGzB,GAAqB,OAAjBnF,EAAKgL,QACd,GAAIhL,EAAKiL,cACmC,IAAtCjL,EAAK2J,eAAe3J,EAAKgL,WAAgBhL,EAAK+K,WAAW/K,EAAKgL,SAAW,GAC7EhL,EAAKgL,QAAU,UAGf,IADA,IAAMzG,EAAMmF,OAAO1H,KAAKhC,EAAK+K,YACpB5F,EAAI,EAAGA,EAAIZ,EAAIR,OAAQoB,GAAK,EACnCnF,EAAK+K,WAAWxG,EAAIY,IAAM,EAIhCnF,EAAKgJ,MAAM+B,WAAa/K,EAAK+K,UAC/B,IAAC7K,GAAA,sBAEe,WAAQF,EAAK2J,eAAiB,CAAC,CAAG,IAACzJ,GAAA,oBAmGrC,kBAC4C,IADtCwJ,OAAO1H,KAAKhC,EAAK2J,gBAClCrJ,QAAO,SAAC6E,GAAC,OAAgC,IAA3BnF,EAAK2J,eAAexE,EAAQ,IAAEpB,MAAY,IAAA7D,GAAA,gBAEjD,SAACoD,GACT,IAAItD,EAAKoL,WAAWxB,SAAStG,GAA7B,CACA,IAAMlB,EAAOpC,EAAKgJ,MAAM5G,KAAKpC,EAAKgJ,MAAM/G,WAClCJ,EAAM7B,EAAKgJ,MAAM4B,cAActH,GACrC,GAAKzB,EAAL,CAaA,IAAQgJ,EAAShJ,EAATgJ,KAER7K,EAAK+K,WAAa/K,EAAKgJ,MAAM+B,WAChB,YAATF,GACG7K,EAAKiL,gBACRjL,EAAK2J,eAAerG,GAAQ,EAC5BtD,EAAK+K,WAAWzH,GAAQ,GAEtBtD,EAAKiL,gBACHjL,EAAK2J,eAAerG,IAEZtD,EAAKkL,sBAAsB5H,KACrCtD,EAAK2J,eAAerG,GAAQ,GAF5BtD,EAAK+K,WAAWzH,GAAQ,IAQnBtD,EAAKiL,eACVjL,EAAKkL,sBAAsB5H,KAGhB,SAATuH,GAAoB7K,EAAKmL,QAAQN,GAW9B7K,EAAKmL,QAAQN,GAAMvH,EAAMzB,EAAIO,IAV9BpC,EAAKwK,iBACPxK,EAAKwK,gBAAiB,EACtBxK,EAAK0K,cAAe,EACpB1K,EAAKqG,OAAO/B,aAAetE,EAAKgJ,MAAMmB,oBACtCnK,EAAKqL,sBAAsBrL,EAAK4H,kBAAkBhF,KAClD5C,EAAKgJ,MAAM5F,OAASpD,EAAKqG,OAAOjD,OAChCpD,EAAK4H,kBAAoB,KACzB5H,EAAKwK,gBAAiB,EACtBxK,EAAK0K,cAAe,IAXxB1K,EAAK+K,WAAWzH,GAAQ,IAiB1BtD,EAAK+K,WAAWzH,GAAQ,EACX,SAATuH,GAAoB7K,EAAKmL,QAAQN,GAW9B7K,EAAKmL,QAAQN,GAAMvH,EAAMzB,EAAIO,IAV9BpC,EAAKwK,iBACPxK,EAAKwK,gBAAiB,EACtBxK,EAAK0K,cAAe,EACpB1K,EAAKqG,OAAO/B,aAAetE,EAAKgJ,MAAMmB,oBACtCnK,EAAKqL,sBAAsBrL,EAAK4H,kBAAkBhF,KAClD5C,EAAKgJ,MAAM5F,OAASpD,EAAKqG,OAAOjD,OAChCpD,EAAK4H,kBAAoB,KACzB5H,EAAKwK,gBAAiB,EACtBxK,EAAK0K,cAAe,IAI1B1K,EAAKgJ,MAAM+B,WAAa/K,EAAK+K,UApD7B,MAXM/K,EAAKwK,iBACPxK,EAAKwK,gBAAiB,EACtBxK,EAAK0K,cAAe,EACpB1K,EAAKqG,OAAO/B,aAAetE,EAAKgJ,MAAMmB,oBACtCnK,EAAKqL,sBAAsBrL,EAAK4H,kBAAkBhF,KAClD5C,EAAKgJ,MAAM5F,OAASpD,EAAKqG,OAAOjD,OAChCpD,EAAK4H,kBAAoB,KACzB5H,EAAKwK,gBAAiB,EACtBxK,EAAK0K,cAAe,EAZkB,CAoE5C,IAACxK,GAAA,cAEO,SAACoD,GACP,IAAItD,EAAKoL,WAAWxB,SAAStG,GAG7B,GADYtD,EAAKgJ,MAAM4B,cAActH,GACrC,CAeA,GADAtD,EAAK+K,WAAa/K,EAAKgJ,MAAM+B,WACzB/K,EAAKiL,cACPjL,EAAK+K,WAAWzH,GAAQ,EACU,IAA9BtD,EAAK2J,eAAerG,KACtBtD,EAAK2J,eAAerG,GAAQ,OAEzB,CAC6B,IAA9BtD,EAAK2J,eAAerG,KAAatD,EAAK2J,eAAerG,GAAQ,GAEjE,IADA,IAAMiB,EAAMmF,OAAO1H,KAAKhC,EAAK+K,YACpB5F,EAAI,EAAGA,EAAIZ,EAAIR,OAAQoB,GAAK,EACnCnF,EAAK+K,WAAWxG,EAAIY,IAAM,CAE9B,CACAnF,EAAKgJ,MAAM+B,WAAa/K,EAAK+K,UAf7B,MAXM/K,EAAKwK,iBACPxK,EAAKwK,gBAAiB,EACtBxK,EAAK0K,cAAe,EACpB1K,EAAKqG,OAAO/B,aAAetE,EAAKgJ,MAAMmB,oBACtCnK,EAAKqL,sBAAsBrL,EAAK4H,kBAAkBhF,KAClD5C,EAAKgJ,MAAM5F,OAASpD,EAAKqG,OAAOjD,OAChCpD,EAAK4H,kBAAoB,KACzB5H,EAAKwK,gBAAiB,EACtBxK,EAAK0K,cAAe,EAmB1B,IAACxK,GAAA,iBAEU,WACT,IAAAoL,EAAsBtL,EAAKgJ,MAAM5F,OAAzBnC,EAAIqK,EAAJrK,KAAMC,EAAGoK,EAAHpK,IACR2B,EAAW0I,GAAOvL,EAAKgJ,MAAMnG,aACnC,GAAa,IAAT5B,EAAY,CACd,IAAMuK,EAAUvK,EAAO,EACnBwK,EAAY,EAEhB,GAAID,EAAU,EACZ,IAAK,IAAIrG,EAAI,EAAGA,EAAIqG,EAASrG,GAAK,EAChCsG,GAAa5I,EAAYsC,GAAGpB,OAI5BlB,EAAY2I,GAASzH,OAAS7C,GAChCuK,GAAavK,EACblB,EAAKgJ,MAAM5F,OAAS,CAClBjC,OAAQsK,EACRxK,KAAMuK,EACNtK,IAAAA,KAGFuK,GAAa5I,EAAY2I,GAASzH,OAAS,EAC3C/D,EAAKgJ,MAAM5F,OAAS,CAClBjC,OAAQsK,EACRxK,KAAMuK,EACNtK,IAAK2B,EAAY2I,GAASzH,OAAS,GAGzC,CACF,IAAC7D,GAAA,mBAEY,WACX,IAAAwL,EAAsB1L,EAAKgJ,MAAM5F,OAAzBnC,EAAIyK,EAAJzK,KAAMC,EAAGwK,EAAHxK,IACR2B,EAAW0I,GAAOvL,EAAKgJ,MAAMnG,aAEnC,GAAI5B,IAAS4B,EAAYkB,OAAS,EAAG,CAGnC,IAFA,IAAMyH,EAAUvK,EAAO,EACnBwK,EAAY,EACPtG,EAAI,EAAGA,EAAIqG,EAASrG,GAAK,EAChCsG,GAAa5I,EAAYsC,GAAGpB,OAE9B,GAAIlB,EAAY2I,GAASzH,OAAS7C,EAChCuK,GAAavK,EACblB,EAAKgJ,MAAM5F,OAAS,CAClBjC,OAAQsK,EACRxK,KAAMuK,EACNtK,IAAAA,OAEG,CACLuK,GAAa5I,EAAY2I,GAASzH,OAAS,EAC3C,IAAM4H,EAAS9I,EAAY2I,GAASzH,OAAS,EAC7C/D,EAAKgJ,MAAM5F,OAAS,CAClBjC,OAAQsK,EACRxK,KAAMuK,EACNtK,IAAKyK,EAET,CACF,CACF,IAACzL,GAAA,mBAEY,WACX,IAAA0L,EAA8B5L,EAAKgJ,MAAM5F,OAAjCnC,EAAI2K,EAAJ3K,KAAMC,EAAG0K,EAAH1K,IAAKC,EAAMyK,EAANzK,OACb0B,EAAW0I,GAAOvL,EAAKgJ,MAAMnG,aACnC,GAAY,IAAR3B,GAAsB,IAATD,EACjB,GAAIC,EAAM,GAAM,EAAG,CACjB,IAAIuK,EAAY,EAChB,GAAa,IAATxK,EACF,IAAK,IAAIkE,EAAI,EAAGA,EAAIlE,EAAMkE,GAAK,EAC7BsG,GAAa5I,EAAYsC,GAAGpB,OAGhC/D,EAAKgJ,MAAM5F,OAAS,CAClBjC,OAAQsK,EACRxK,KAAAA,EACAC,IAAK,EAET,MAAO,GAAY,IAARA,EAAW,CAGpB,IAFA,IAAIuK,EAAY,EACVD,EAAUvK,EAAO,EACdkE,EAAI,EAAGA,EAAIlE,EAAMkE,GAAK,EAC7BsG,GAAa5I,EAAYsC,GAAGpB,OAE9B/D,EAAKgJ,MAAM5F,OAAS,CAClBjC,OAAQsK,EAAY,EACpBxK,KAAMuK,EACNtK,IAAK2B,EAAY2I,GAASzH,OAAS,EAEvC,KAAO,CACL,IAAM0H,EAAYtK,EAAS,EACrBwK,EAASzK,EAAM,EACrBlB,EAAKgJ,MAAM5F,OAAS,CAClBjC,OAAQsK,EACRxK,KAAAA,EACAC,IAAKyK,EAET,CACF,IAACzL,GAAA,oBAEa,WACZ,IAAA2L,EAA8B7L,EAAKgJ,MAAM5F,OAAjCnC,EAAI4K,EAAJ5K,KAAMC,EAAG2K,EAAH3K,IAAKC,EAAM0K,EAAN1K,OACb0B,EAAWkC,GAAA,GAAQ/E,EAAKgJ,MAAMnG,aAEhC1B,IAAWnB,EAAKgJ,MAAM7F,gBAAgBY,SACtC7C,EAAM,IAAM2B,EAAY5B,GAAM8C,OAChC/D,EAAKgJ,MAAM5F,OAAS,CAClBjC,OAAQA,EAAS,EACjBF,KAAMA,EAAO,EACbC,IAAK,GAGPlB,EAAKgJ,MAAM5F,OAAS,CAClBjC,OAAQA,EAAS,EACjBF,KAAAA,EACAC,IAAKA,EAAM,GAGjB,IAAChB,GAAA,8BAEuB,SAACiB,GACvBnB,EAAKqG,OAAOlD,gBAAkBnD,EAAKgJ,MAAM7F,gBACzCnD,EAAKqG,OAAOxD,YAAc7C,EAAKgJ,MAAMnG,YACrC7C,EAAKqG,OAAOjD,OAASpD,EAAKgJ,MAAM5F,OAChCpD,EAAKqG,OAAO/B,aAAetE,EAAKgJ,MAAMmB,oBACtCnK,EAAKqG,OAAOoE,kBAAkBtJ,GAC9BnB,EAAKgJ,MAAM5F,OAASpD,EAAKqG,OAAOjD,OAC5BpD,EAAKwK,iBACPxK,EAAK4H,kBAAoB,KACzB5H,EAAKwK,gBAAiB,EACtBxK,EAAK0K,cAAe,EAExB,IAACxK,GAAA,wBAEiB,SAACyC,EAAOC,GACpB5C,EAAK4H,oBAAmB5H,EAAK4H,kBAAoB,MACrD5H,EAAK4H,kBAAoB,CAAEjF,MAAAA,EAAOC,IAAAA,GAClC5C,EAAKwK,gBAAiB,CACxB,IAACtK,GAAA,eAES,CACR+F,OAAQvF,KAAKuF,OACb6F,OAAQpL,KAAI,OACZqL,KAAMrL,KAAKsL,WACXC,SAAUvL,KAAKsJ,SACfkC,MAAOxL,KAAKwL,QACbhM,GAAA,uBAEiB,CAChBuK,kBAAmB/J,KAAK2K,sBACxBc,gBAAiBzL,KAAKyL,kBACvBjM,GAAA,qBAEe,CACdkM,GAAI1L,KAAK2L,SACTC,KAAM5L,KAAK6L,WACXC,KAAM9L,KAAK+L,WACXC,MAAOhM,KAAKiM,cACbzM,GAAA,kBAEY,CACX0M,UAAWlM,KAAKkM,UAChBC,QAASnM,KAAKmM,UACf3M,GAAA,oBAEc,CACb4M,WAAYpM,KAAKoM,aAClB5M,GAAA,iBAEU,SAACiK,GACVnK,EAAKmK,oBAAsBA,EAC3BnK,EAAKgJ,MAAMmB,oBAAsBA,EACjCnK,EAAKqG,OAAOlD,gBAAkBnD,EAAKgJ,MAAM7F,gBACzCnD,EAAKqG,OAAO/B,aAAetE,EAAKgJ,MAAMmB,oBACtCnK,EAAKgJ,MAAMnG,YAAc7C,EAAKqG,OAAOd,mBAAmBvF,EAAKgJ,MAAM7F,iBACnEnD,EAAKqG,OAAOxD,YAAc7C,EAAKgJ,MAAMnG,YACrC7C,EAAKqG,OAAOoE,kBAAkBzK,EAAKgJ,MAAM5F,OAAOjC,QAChDnB,EAAKgJ,MAAM5F,OAASpD,EAAKqG,OAAOjD,OAC5BpD,EAAKwK,iBACPxK,EAAK4H,kBAAoB,KACzB5H,EAAKwK,gBAAiB,EACtBxK,EAAK0K,cAAe,EAExB,IAACxK,GAAA,qBAEc,SAACqI,GACd,IAAMvG,EAAO,CAAC,EACduG,EAAK9H,SAAQ,SAACoB,GACZG,EAAK,GAADqC,OAAIxC,EAAIyB,OAAOyB,GAAA,GACdlD,EAEP,IACA,IAAMkL,EAAmB/M,EAAKgJ,MAAM5G,KAAK4K,QAAQhN,EAAKiN,iBAAiB7K,MACvEpC,EAAKgJ,MAAMkE,aAAa,CACtBlL,KAAAA,EACAC,UAAW8K,GAAoB,EAAIA,EAAmB,EACtD5C,oBAAqBnK,EAAKmK,qBAE9B,IAACjK,GAAA,qBAQc,WACbwJ,OAAO1H,KAAKhC,EAAK+K,YAAYtK,SAAQ,SAAC0M,GACP,IAAzBnN,EAAK+K,WAAWoC,WACXnN,EAAK+K,WAAWoC,EAE3B,IACAnN,EAAKgJ,MAAM+B,WAAa/K,EAAK+K,UAC/B,IApoBErK,KAAKsI,MAAQA,EACbtI,KAAK2F,OAAS,IAAIpC,EAElBvD,KAAK6G,QAAU,IAAIF,EAAQ,CACzBd,sBAAuB,GACvBC,aAAc,CAAEvF,KAAM,EAAGC,IAAK,EAAGC,OAAQ,GACzCiM,kBAAmB,CAAC,MAEtB1M,KAAKuM,iBAAmBvM,KAAK2M,sBAC7B3M,KAAKyJ,oBAAsBmD,OAAOC,YAAc,KAAO,GAAKD,OAAOC,YAAc,IAAM,GAAKD,OAAOC,YAAc,IAAM,GAAK,GAC5H7M,KAAKqK,WAAa,CAAC,EACnBrK,KAAKoK,YAAc,CAAEvJ,GAAI,KAAMC,KAAM,MACrCd,KAAKiJ,eAAiB,CAAC,EACvBjJ,KAAKsK,QAAU,KACftK,KAAKsG,UAAY,KACjBtG,KAAKkH,kBAAoB,KAEzBlH,KAAKsI,MAAM9F,yBAAyBgH,KAAI,SAAC3B,GAAI,OAAKvI,EAAKwN,mBAAmBjF,EAAK,GACjF,C,QAymBC,O,EAzmBAQ,G,EAAA,EAAAlH,IAAA,wBAAAC,MAkND,SAAsBwB,GAAM,IAAAmK,EAAA,KACpBC,EAAehE,OAAO1H,KAAKtB,KAAKiJ,gBACnCrJ,QAAO,SAAC6E,GAAC,OAAiC,IAA3BsI,EAAK9D,eAAexE,EAAQ,IAC9CuI,EAAarN,KAAKiD,GAQlB,IAPA,IAAMqK,EAAqBD,EACxBvJ,KAAI,SAACgB,GACJ,MAAU,cAANA,GAA2B,eAANA,EAA2B,QAC1C,YAANA,GAAyB,aAANA,EAAyB,MACtC,gBAANA,GAA6B,iBAANA,EAA6B,UACjDA,CACT,IACOA,EAAI,EAAGA,EAAIzE,KAAKkN,oBAAoB7J,OAAQoB,GAAK,EACxD,GAAIzE,KAAKkN,oBAAoBzI,GAAG0I,OAAM,SAACC,GAAC,OAAMH,EAAmB/D,SAASkE,EAAE,IAAI,CAI9E,GAH6C,iBAAzCpN,KAAKkN,oBAAoBzI,GAAG4I,KAAK,MACnCrN,KAAKsI,MAAM/G,WAAavB,KAAKsI,MAAM/G,UAAY,GAAKvB,KAAKsI,MAAM5G,KAAK2B,QAEzB,gBAAzCrD,KAAKkN,oBAAoBzI,GAAG4I,KAAK,IAAuB,CACtDrN,KAAK8J,iBACP9J,KAAK8J,gBAAiB,EACtB9J,KAAKgK,cAAe,EACpBhK,KAAKkH,kBAAoB,MAG3B,IAAMoG,EAActN,KAAK6G,QAAQ0G,OAC7BD,IACFtN,KAAKsI,MAAM7F,gBAAkB6K,EAAYzH,sBACzC7F,KAAKsI,MAAM5F,OAAS4K,EAAYxH,aAChC9F,KAAKsI,MAAMnG,YAAcmL,EAAYnL,YAEzC,CACA,GAA6C,gBAAzCnC,KAAKkN,oBAAoBzI,GAAG4I,KAAK,IAAuB,CACtDrN,KAAK8J,iBACP9J,KAAK8J,gBAAiB,EACtB9J,KAAKgK,cAAe,EACpBhK,KAAKkH,kBAAoB,MAG3B,IAAMoG,EAActN,KAAK6G,QAAQ2G,OAC7BF,IACFtN,KAAKsI,MAAM7F,gBAAkB6K,EAAYzH,sBACzC7F,KAAKsI,MAAM5F,OAAS4K,EAAYxH,aAChC9F,KAAKsI,MAAMnG,YAAcmL,EAAYnL,YAEzC,CAcA,GAb6C,gBAAzCnC,KAAKkN,oBAAoBzI,GAAG4I,KAAK,KAAyBrN,KAAK8J,iBACjE9J,KAAK2F,OAAOlD,gBAAkBzC,KAAKsI,MAAM7F,gBACzCzC,KAAK2F,OAAOL,eAAiBtF,KAAKkH,kBAClClH,KAAK2F,OAAO/B,aAAe5D,KAAKsI,MAAMmB,oBACtCzJ,KAAK0J,eAAe,IAAIrC,EAAIrH,KAAMA,KAAK2F,SACvC3F,KAAKsI,MAAM7F,gBAAkBzC,KAAK2F,OAAOlD,gBACzCzC,KAAKsI,MAAMnG,YAAcnC,KAAK2F,OAAOxD,YACrCnC,KAAKsI,MAAM5F,OAAS1C,KAAK2F,OAAOjD,OAEhC1C,KAAK8J,gBAAiB,EACtB9J,KAAKgK,cAAe,EACpBhK,KAAKkH,kBAAoB,MAEkB,gBAAzClH,KAAKkN,oBAAoBzI,GAAG4I,KAAK,IAAuB,CAE1D,GADArN,KAAKsG,UAAYtG,KAAK2F,OAAOvC,OAAOqK,UACb,KAAnBzN,KAAKsG,UAAkB,OAAO,EAMlC,GALAtG,KAAK2F,OAAOlD,gBAAkBzC,KAAKsI,MAAM7F,gBACzCzC,KAAK2F,OAAOxD,YAAcnC,KAAKsI,MAAMnG,YACrCnC,KAAK2F,OAAOjD,OAAS1C,KAAKsI,MAAM5F,OAChC1C,KAAK2F,OAAO/B,aAAe5D,KAAKsI,MAAMmB,oBAElCzJ,KAAK8J,eAQP,OAPA9J,KAAK0J,eAAe,IAAIvC,EAAQnH,KAAMA,KAAK2F,SAC3C3F,KAAKsI,MAAM7F,gBAAkBzC,KAAK2F,OAAOlD,gBACzCzC,KAAKsI,MAAMnG,YAAcnC,KAAK2F,OAAOxD,YACrCnC,KAAKsI,MAAM5F,OAAS1C,KAAK2F,OAAOjD,OAChC1C,KAAK8J,gBAAiB,EACtB9J,KAAKgK,cAAe,EACpBhK,KAAKkH,kBAAoB,MAClB,EAGTlH,KAAK0J,eAAe,IAAInC,EAAMvH,KAAMA,KAAK2F,SACzC3F,KAAKsI,MAAM7F,gBAAkBzC,KAAK2F,OAAOlD,gBACzCzC,KAAKsI,MAAMnG,YAAcnC,KAAK2F,OAAOxD,YACrCnC,KAAKsI,MAAM5F,OAAS1C,KAAK2F,OAAOjD,OAEhC1C,KAAK8J,gBAAiB,EACtB9J,KAAKgK,cAAe,EACpBhK,KAAKkH,kBAAoB,KACzBlH,KAAKsG,UAAY,EACnB,CAMA,MAL6C,gBAAzCtG,KAAKkN,oBAAoBzI,GAAG4I,KAAK,KAAyBrN,KAAK8J,iBACjE9J,KAAK2F,OAAOlD,gBAAkBzC,KAAKsI,MAAM7F,gBACzCzC,KAAK0J,eAAe,IAAI1C,EAAKhH,KAAMA,KAAK2F,SACxC3F,KAAKgK,cAAe,IAEf,CACT,CAEF,OAAO,CACT,GAAC,CAAA7I,IAAA,iBAAAC,MAoTD,SAAe2F,GACTA,EAAQhB,WACV/F,KAAK6G,QAAQ6G,KAAK3G,EAEtB,M,qEAACsB,CAAA,CA7nBa,G,8qBCVVsF,GAAO,WACX,SAAAA,EAAAtM,GAKG,IAAAuM,EAAAvM,EAJDwM,OAAAA,OAAM,IAAAD,EAAG,KAAIA,EAAAE,EAAAzM,EACb0M,QAAAA,OAAO,IAAAD,EAAG,MAAKA,EAAAE,EAAA3M,EACf4M,UAAAA,OAAS,IAAAD,EAAG,GAAEA,EAAAE,EAAA7M,EACde,QAAAA,OAAO,IAAA8L,EAAG,GAAEA,G,4FAAA3O,CAAA,KAAAoO,GAEZ,IAAMQ,EAAUC,SAASC,cAAcN,GACvCI,EAAQG,UAAYL,EACpBE,EAAQI,UAAYnM,EAChByL,GAAQA,EAAOW,OAAOL,GAC1BnO,KAAKyO,KAAON,CACd,C,QAIC,O,EAJAR,G,EAAA,EAAAxM,IAAA,UAAAC,MAED,WACEpB,KAAKyO,KAAKC,QACZ,M,qEAACf,CAAA,CAhBU,G,o5BCA8B,IAErCgB,GAAM,SAAAC,I,sRAAA1I,CAAAyI,EAAAC,GAAA,I,MAAAzI,G,EAAAwI,E,ikBACV,SAAAA,EAAAtN,GAKG,IAAA/B,E,MAJDuO,EAAMxM,EAANwM,OACAI,EAAS5M,EAAT4M,UACAvM,EAAIL,EAAJK,KACAgE,EAAUrE,EAAVqE,WAyBG,O,4FAzBOnG,CAAA,KAAAoP,G,EAMPE,GAJHvP,EAAA6G,EAAAC,KAAA,KAAM,CACJyH,OAAAA,EACAE,QAAS,SACTE,UAAW,GAAFtK,OAAKsK,EAAS,sB,EAuBZ,SAACvM,GACdpC,EAAKwP,WAAapN,EAClBpC,EAAKoC,KAAK+M,KAAKM,YAAczP,EAAKwP,UACpC,G,OAzBK,mB,wFACHxP,EAAKoG,WAAaA,EAClBpG,EAAKwP,WAAapN,EAClBpC,EAAK0P,UAAY,IAAIrB,GAAQ,CAC3BE,OAAQvO,EAAKmP,KACbR,UAAW,gCAEb3O,EAAKoC,KAAO,IAAIiM,GAAQ,CACtBE,OAAQvO,EAAK0P,UAAUP,KACvBR,UAAW,oBACX7L,QAAS9C,EAAKwP,aAEhBxP,EAAK2P,YAAc,IAAItB,GAAQ,CAC7BE,OAAQvO,EAAK0P,UAAUP,KACvBR,UAAW,kCACX7L,QAAS,4JAIR9C,CACL,CAAC,O,EAAAqP,E,oDAAA,CA/BS,CAAShB,I,o5BCFsB,IAErCuB,GAAQ,SAAAN,I,sRAAA1I,CAAAgJ,EAAAN,GAAA,I,MAAAzI,G,EAAA+I,E,ikBACZ,SAAAA,EAAA7N,GAIG,IAAA/B,E,MAHDuO,EAAMxM,EAANwM,OACAI,EAAS5M,EAAT4M,UACAvI,EAAUrE,EAAVqE,WAmBE,O,4FAnBQnG,CAAA,KAAA2P,G,EAMPL,GAJHvP,EAAA6G,EAAAC,KAAA,KAAM,CACJyH,OAAAA,EACAE,QAAS,WACTE,UAAW,GAAFtK,OAAKsK,EAAS,0B,EAiBd,SAAC7L,GACZ9C,EAAKmP,KAAKM,YAAc3M,EACxB9C,EAAKmP,KAAKU,OACZ,G,OAnBK,iB,wFACH7P,EAAKoG,WAAaA,EAClBpG,EAAKmP,KAAKW,iBAAiB,WAAW,SAACC,GAAYA,EAAMC,gBAAkB,IAC3EhQ,EAAKmP,KAAKW,iBAAiB,SAAS,SAACC,GAAYA,EAAMC,gBAAkB,IAEzEhQ,EAAKmP,KAAKU,QAEV7P,EAAKmP,KAAKc,UAAY,WAChBjQ,EAAKmP,KAAKe,eAAiBlQ,EAAKmP,KAAKgB,eACvCnQ,EAAKoG,WAAWqE,kBAAkBzK,EAAKmP,KAAKe,cAE5ClQ,EAAKoG,WAAW+F,gBAAgBnM,EAAKmP,KAAKgB,eAAgBnQ,EAAKmP,KAAKe,aAExE,EAAElQ,CACJ,CAAC,O,EAAA4P,E,oDAAA,CAxBW,CAASvB,I,+/BCFqB,IAEtC+B,GAAG,SAAAd,I,sRAAA1I,CAAAwJ,EAAAd,GAAA,I,MAAAzI,G,EAAAuJ,E,ikBACP,SAAAA,EAAArO,GAMG,IAAA/B,E,MALDuO,EAAMxM,EAANwM,OACAI,EAAS5M,EAAT4M,UACArL,EAAIvB,EAAJuB,KACAR,EAAOf,EAAPe,QACAsD,EAAUrE,EAAVqE,WA8BE,O,4FA9BQnG,CAAA,KAAAmQ,G,EAMPb,GAJHvP,EAAA6G,EAAAC,KAAA,KAAM,CACJyH,OAAAA,EACAE,QAAS,SACTE,UAAW,GAAFtK,OAAKsK,EAAS,cAAAtK,OAAaf,M,EA4B/B,SAACR,GACJ9C,EAAK8C,UAAYA,IAAS9C,EAAK8C,QAAUA,GAAQ,I,IAAAuN,G,EACfrQ,EAAK8C,Q,EAAO,E,o5BAAjD9C,EAAKsQ,YAAYnB,KAAKM,YAAWY,EAAA,GAClCrQ,EAAKuQ,cAAcpB,KAAKM,YAAc,GAAHpL,OAA8B,IAAxBrE,EAAK8C,QAAQiB,OAAe/D,EAAK8C,QAAQ,GAAK,GACzF,G,OA/BK,a,wFACH9C,EAAKsD,KAAOA,EACZtD,EAAK8C,QAAUA,EACf9C,EAAKoG,WAAaA,EAClBpG,EAAKmP,KAAKqB,SAAW,KACrBxQ,EAAKuQ,cAAgB,IAAIlC,GAAQ,CAC/BE,OAAQvO,EAAKmP,KACbV,QAAS,OACTE,UAAW,sCAEb3O,EAAKsQ,YAAc,IAAIjC,GAAQ,CAC7BE,OAAQvO,EAAKmP,KACbV,QAAS,OACTE,UAAW,oCAEb3O,EAAKyQ,OAAOzQ,EAAK8C,SACjB9C,EAAKmP,KAAKuB,YAAc,SAACX,GACvBA,EAAMC,iBACNhQ,EAAKoG,WAAWwG,UAAU5M,EAAKsD,KAAMyM,EAAMY,WAC3C3Q,EAAKmP,KAAKyB,YAAc,SAACpH,GAAC,OAAKxJ,EAAKmP,KAAKc,UAAUzG,EAAE,CACvD,EACAxJ,EAAKmP,KAAKc,UAAY,SAACF,GACrB/P,EAAKoG,WAAWyG,QAAQ7M,EAAKsD,KAAMyM,EAAMY,WACzC3Q,EAAKmP,KAAKyB,YAAc,IAC1B,EAAE5Q,CACJ,CAAC,O,EAAAoQ,E,oDAAA,CArCM,CAAS/B,I,ifCFU,IAEtBwC,GAAM,SAAAC,I,sRAAAlK,CAAAiK,EAAAC,GAAA,I,MAAAjK,G,EAAAgK,E,wrBACV,SAAAA,EAAA9O,GAMG,IALDwM,EAAMxM,EAANwM,OACAI,EAAS5M,EAAT4M,UACArL,EAAIvB,EAAJuB,KACAR,EAAOf,EAAPe,QACAsD,EAAUrE,EAAVqE,WAAU,O,4FAAAnG,CAAA,KAAA4Q,GAAAhK,EAAAC,KAAA,KAEJ,CACJyH,OAAAA,EACAI,UAAAA,EACArL,KAAAA,EACAR,QAAAA,EACAsD,WAAAA,GAEJ,CAAC,O,EAAAyK,E,oDAAA,CAfS,CAAST,I,ifCFO,IAEtBW,GAAQ,SAAAD,I,sRAAAlK,CAAAmK,EAAAD,GAAA,I,MAAAjK,G,EAAAkK,E,wrBACZ,SAAAA,EAAAhP,GAMG,IALDwM,EAAMxM,EAANwM,OACAI,EAAS5M,EAAT4M,UACArL,EAAIvB,EAAJuB,KACAR,EAAOf,EAAPe,QACAsD,EAAUrE,EAAVqE,WAAU,O,4FAAAnG,CAAA,KAAA8Q,GAAAlK,EAAAC,KAAA,KAEJ,CACJyH,OAAAA,EACAI,UAAAA,EACArL,KAAAA,EACAR,QAAAA,EACAsD,WAAAA,GAEJ,CAAC,O,EAAA2K,E,oDAAA,CAfW,CAASX,I,ifCFK,IAEtBY,GAAW,SAAAF,I,sRAAAlK,CAAAoK,EAAAF,GAAA,I,MAAAjK,G,EAAAmK,E,wrBACf,SAAAA,EAAAjP,GAMG,IALDwM,EAAMxM,EAANwM,OACAI,EAAS5M,EAAT4M,UACArL,EAAIvB,EAAJuB,KACAR,EAAOf,EAAPe,QACAsD,EAAUrE,EAAVqE,WAAU,O,4FAAAnG,CAAA,KAAA+Q,GAAAnK,EAAAC,KAAA,KAEJ,CACJyH,OAAAA,EACAI,UAAAA,EACArL,KAAAA,EACAR,QAAAA,EACAsD,WAAAA,GAEJ,CAAC,O,EAAA4K,E,oDAAA,CAfc,CAASZ,I,ifCFE,IAEtBa,GAAU,SAAAH,I,sRAAAlK,CAAAqK,EAAAH,GAAA,I,MAAAjK,G,EAAAoK,E,wrBACd,SAAAA,EAAAlP,GAMG,IALDwM,EAAMxM,EAANwM,OACAI,EAAS5M,EAAT4M,UACArL,EAAIvB,EAAJuB,KACAR,EAAOf,EAAPe,QACAsD,EAAUrE,EAAVqE,WAAU,O,4FAAAnG,CAAA,KAAAgR,GAAApK,EAAAC,KAAA,KAEJ,CACJyH,OAAAA,EACAI,UAAAA,EACArL,KAAAA,EACAR,QAAAA,EACAsD,WAAAA,GAEJ,CAAC,O,EAAA6K,E,oDAAA,CAfa,CAASb,I,ifCFG,IAEtBc,GAAO,SAAAJ,I,sRAAAlK,CAAAsK,EAAAJ,GAAA,I,MAAAjK,G,EAAAqK,E,wrBACX,SAAAA,EAAAnP,GAMG,IALDwM,EAAMxM,EAANwM,OACAI,EAAS5M,EAAT4M,UACArL,EAAIvB,EAAJuB,KACAR,EAAOf,EAAPe,QACAsD,EAAUrE,EAAVqE,WAAU,O,4FAAAnG,CAAA,KAAAiR,GAAArK,EAAAC,KAAA,KAEJ,CACJyH,OAAAA,EACAI,UAAAA,EACArL,KAAAA,EACAR,QAAAA,EACAsD,WAAAA,GAEJ,CAAC,O,EAAA8K,E,oDAAA,CAfU,CAASd,I,ifCFM,IAEtBe,GAAQ,SAAAL,I,sRAAAlK,CAAAuK,EAAAL,GAAA,I,MAAAjK,G,EAAAsK,E,wrBACZ,SAAAA,EAAApP,GAMG,IALDwM,EAAMxM,EAANwM,OACAI,EAAS5M,EAAT4M,UACArL,EAAIvB,EAAJuB,KACAR,EAAOf,EAAPe,QACAsD,EAAUrE,EAAVqE,WAAU,O,4FAAAnG,CAAA,KAAAkR,GAAAtK,EAAAC,KAAA,KAEJ,CACJyH,OAAAA,EACAI,UAAAA,EACArL,KAAAA,EACAR,QAAAA,EACAsD,WAAAA,GAEJ,CAAC,O,EAAA+K,E,oDAAA,CAfW,CAASf,I,mhCCOvB,IAAMgB,GAAS,CACbC,UAAWF,GACXG,WAAYH,GACZI,YAAaN,GACbO,aAAcP,GACdQ,SAAUP,GACVQ,QAASb,GACTc,SAAUd,GACVe,UAAWb,GACXc,WAAYd,GACZe,SAAUd,IAGNe,GAAK,SAAAzC,I,sRAAA1I,CAAAmL,EAAAzC,GAAA,I,MAAAzI,G,EAAAkL,E,ikBACT,SAAAA,EAAAhQ,GAKG,IAAA/B,EAJDuO,EAAMxM,EAANwM,OACAI,EAAS5M,EAAT4M,UACAvM,EAAIL,EAAJK,KACAgE,EAAUrE,EAAVqE,Y,4FAAUnG,CAAA,KAAA8R,GAIP7R,GAAAqP,GAFHvP,EAAA6G,EAAAC,KAAA,KAAM,CACJyH,OAAAA,EAAQI,UAAW,GAAFtK,OAAKsK,EAAS,oBAC9B,sBAcgB,SAACqD,GACpBtI,OAAO1H,KAAKhC,EAAKiS,MAAMxR,SAAQ,SAAC6C,GAC1BtD,EAAKiS,KAAK3O,GAAM6L,KAAKH,UAAUkD,SAAS,WAAWlS,EAAKiS,KAAK3O,GAAM6L,KAAKH,UAAUI,OAAO,SAC/F,IACA1F,OAAO1H,KAAKgQ,GAAevR,SAAQ,SAAC6C,GAC9B0O,EAAc1O,IAAOtD,EAAKiS,KAAK3O,GAAM6L,KAAKH,UAAU9E,IAAI,SAC9D,GACF,IAAChK,GAAAqP,GAAAvP,GAAA,gBAEc,SAACoC,GACdpC,EAAKoC,KAAOA,EACZsH,OAAO1H,KAAKhC,EAAKiS,MAAMxR,SAAQ,SAAC6C,GAC9BtD,EAAKiS,KAAK3O,GAAMmN,OAAOzQ,EAAKgC,KAAKsB,GAAM,GAADe,OAAIrE,EAAKoC,OAAQ+P,KACzD,GACF,IAACjS,GAAAqP,GAAAvP,GAAA,QAEM,SAAAqK,GAAoB,IAAjBrI,EAAIqI,EAAJrI,KAAMI,EAAIiI,EAAJjI,KACdpC,EAAKoC,KAAOA,EACZpC,EAAKgC,KAAOA,EACZ0H,OAAO1H,KAAKhC,EAAKgC,MAAMvB,SAAQ,SAACoB,GAC9B,IAAMuQ,EAAUpS,EAAKgC,KAAKH,GAClBuC,EAAcgO,EAAdhO,IAAKd,EAAS8O,EAAT9O,KACP+O,EAAiBjB,GAAO9N,IAAS8M,GACvCpQ,EAAKiS,KAAK3O,GAAQ,IAAI+O,EAAe,CACnC9D,OAAQvO,EAAKyE,KAAKL,EAAM,GAAG+K,KAC3BR,UAAW,QACXrL,KAAAA,EACAR,QAASsP,EAAQ,GAAD/N,OAAIrE,EAAKoC,OAAQ+P,KACjC/L,WAAYpG,EAAKoG,WAAW0G,YAEhC,GACF,IA5CE9M,EAAKoC,KAAOA,EACZpC,EAAKoG,WAAaA,EAClBpG,EAAKyE,KAAO,CAAC,EACbzE,EAAKgC,KAAO,CAAC,EACbhC,EAAKiS,KAAO,CAAC,EACb,IAAK,IAAI9M,EAAI,EAAGA,EAAI,EAAGA,GAAK,EAC1BnF,EAAKyE,KAAKU,GAAK,IAAIkJ,GAAQ,CACzBE,OAAQvO,EAAKmP,KACbR,UAAW,mBAEd,OAAA3O,CACH,CAAC,O,EAAA+R,E,oDAAA,CArBQ,CAAS1D,I,mhCCpBY,IAE1BiE,GAAI,SAAAhD,I,sRAAA1I,CAAA0L,EAAAhD,GAAA,I,MAAAzI,G,EAAAyL,E,ikBACR,SAAAA,EAAAvQ,GAA+C,IAAA/B,EAAjCuO,EAAMxM,EAANwM,OAAQI,EAAS5M,EAAT4M,UAAWvI,EAAUrE,EAAVqE,WAqB5B,O,4FArBsCnG,CAAA,KAAAqS,GAKtCpS,GAAAqP,GAJHvP,EAAA6G,EAAAC,KAAA,KAAM,CACJyH,OAAAA,EACAE,QAAS,OACTE,UAAW,GAAFtK,OAAKsK,EAAS,kBACtB,sBAmBgB,kBAAM3O,EAAKuS,SAASpD,KAAKU,OAAO,IAAA3P,GAAAqP,GAAAvP,GAAA,QAE9C,SAACgC,GACNhC,EAAKwS,MAAMC,KAAKzQ,EAClB,IAAC9B,GAAAqP,GAAAvP,GAAA,sBAEoB,SAACgS,GAAa,OAAKhS,EAAKwS,MAAMhP,mBAAmBwO,EAAc,IAAA9R,GAAAqP,GAAAvP,GAAA,gBAErE,SAACoC,GACdpC,EAAKwS,MAAMvP,aAAab,EAC1B,IAAClC,GAAAqP,GAAAvP,GAAA,2BAEyB,SAAC8C,GACzB9C,EAAKuS,SAASG,WAAW5P,EAC3B,IAAC5C,GAAAqP,GAAAvP,GAAA,0BAEwB,SAAAqK,GAAoB,IAAjB1H,EAAK0H,EAAL1H,MAAOC,EAAGyH,EAAHzH,IACjC5C,EAAKuS,SAASpD,KAAKwD,kBAAkBhQ,EAAOC,EAC9C,IAAC1C,GAAAqP,GAAAvP,GAAA,eAEa,SAAA4S,GAAoB,IAAjB5Q,EAAI4Q,EAAJ5Q,KAAMI,EAAIwQ,EAAJxQ,KACrBpC,EAAKwS,MAAMC,KAAK,CAAEzQ,KAAAA,EAAMI,KAAAA,GAC1B,IAxCEpC,EAAKoG,WAAaA,EAClBpG,EAAK0P,UAAY,IAAIrB,GAAQ,CAC3BE,OAAQvO,EAAKmP,KACbR,UAAW,8BAEb3O,EAAKuS,SAAW,IAAI3C,GAAS,CAC3BrB,OAAQvO,EAAK0P,UAAUP,KACvBR,UAAAA,EACAvI,WAAYA,EAAWyM,kBAEzB7S,EAAKwS,MAAQ,IAAIT,GAAM,CACrBxD,OAAQvO,EAAK0P,UAAUP,KACvBR,UAAAA,EACAvM,KAAM,KACNgE,WAAYpG,EAAKoG,WAAW0M,eAC3B9S,CACL,CAAC,O,EAAAsS,E,oDAAA,CAvBO,CAASjE,I,8qBCJb0E,GAAO,WACX,SAAAA,K,4FAAc9S,CAAA,KAAA8S,GACZrS,KAAK6H,KAAO,EACd,C,QAUC,O,EAVAwK,G,EAAA,EAAAlR,IAAA,cAAAC,MAED,WAAc,IAAA9B,EAAA,KACZ,OAAOgT,MAAM,oBAAoBC,MAAK,SAACC,GAAG,OAAKA,EAAIC,MAAM,IAAEF,MAAK,SAAC1K,GAC/D,IAAK6K,MAAMC,QAAQ9K,GACjB,MAAM,IAAIM,MAAM,mBAGlB,OADA7I,EAAKuI,KAAOA,EACLvI,EAAKuI,IACd,GACF,M,qEAACwK,CAAA,CAbU,G,o5BCG+B,ICIpC/J,GDFFsK,GAAI,SAAAhE,I,sRAAA1I,CAAA0M,EAAAhE,GAAA,I,MAAAzI,G,EAAAyM,E,ikBACR,SAAAA,EAAAvR,GAA2C,IAAA/B,E,MAA7BuO,EAAMxM,EAANwM,OAAQnI,EAAUrE,EAAVqE,WAAY4C,EAAKjH,EAALiH,MAyC7B,O,4FAzCkC/I,CAAA,KAAAqT,G,EACI/D,GAAzCvP,EAAA6G,EAAAC,KAAA,KAAM,CAAEyH,OAAAA,EAAQI,UAAW,c,EA2CtB,YACQ,IAAIoE,IACZQ,cAAcN,MAAK,SAACO,GACvBxT,EAAKuI,KAAOiL,EACZxT,EAAKoG,WAAWqN,aAAazT,EAAKuI,KACpC,GACF,G,OAjD2C,W,wFACzCvI,EAAKoG,WAAaA,EAClBpG,EAAKgJ,MAAQA,EACbhJ,EAAKmP,KAAKuE,SAAW,WACnB,IAAMvJ,EAAsBmD,OAAOC,YAAc,KAAO,GAAKD,OAAOC,YAAc,IAAM,GAAKD,OAAOC,YAAc,IAAM,GAAK,GAC7HvN,EAAKoG,WAAWuN,SAASxJ,GACzBnK,EAAK4T,KAAKC,oBACZ,EAEA7T,EAAKuI,KAAO,GACZvI,EAAKgC,KAAO,GACZhC,EAAK8T,OAAS,IAAIzE,GAAO,CACvBd,OAAQvO,EAAKmP,KACbR,UAAW,WACXvM,KAAM,KACNgE,WAAAA,IAEFpG,EAAK4T,KAAO,IAAItB,GAAK,CACnB/D,OAAQvO,EAAKmP,KACbR,UAAW,WACXvI,WAAYpG,EAAKoG,aAEnB0I,SAASgB,iBAAiB,WAAW,SAACC,GAAK,OAAK/P,EAAKoG,WAAW2N,QAAQhE,EAAMzM,KAAK,IAAE,GACrFwL,SAASgB,iBAAiB,SAAS,SAACC,GAAK,OAAK/P,EAAKoG,WAAW4N,MAAMjE,EAAMzM,KAAK,IAAE,GACjFwL,SAASgB,iBAAiB,SAAS,kBAAM9P,EAAK4T,KAAKC,oBAAoB,IAEvE7T,EAAKgJ,MAAMjG,wBAAwBmH,KAAI,SAACpH,GAAO,OAAK9C,EAAK4T,KAAK7Q,wBAAwBD,EAAQ,IAC9F9C,EAAKgJ,MAAM/F,aAAaiH,KAAI,SAAC9H,GAC3BpC,EAAK8T,OAAO7Q,aAAab,GACzBpC,EAAK4T,KAAK3Q,aAAab,EACzB,IACApC,EAAKgJ,MAAMxF,mBAAmB0G,KAC5B,SAAC8H,GAAa,OAAKhS,EAAK4T,KAAKpQ,mBAAmBwO,EAAc,IAEhEhS,EAAKgJ,MAAMtG,uBAAuBwH,KAChC,SAAChF,GAAQ,OAAKlF,EAAK4T,KAAKlR,uBAAuBwC,EAAS,IAE1DlF,EAAKgJ,MAAM9G,YAAYgI,KAAI,SAAAG,GAAoB,IAAjBrI,EAAIqI,EAAJrI,KAAMI,EAAIiI,EAAJjI,KAClCpC,EAAK8T,OAAO7Q,aAAab,GACzBpC,EAAK4T,KAAK1R,YAAY,CAAEF,KAAAA,EAAMI,KAAAA,GAChC,IAAGpC,CACL,CAAC,O,EAAAsT,E,oDAAA,CA3CO,CAASjF,IEHb4F,QDOS,IAAIX,GAAK,CACpB/E,OCRsBO,SAASoF,KDS/B9N,WAHiB,IAAI2C,GADjBC,GAAQ,IAAIrI,GAKhBqI,MAAAA,KAEGyJ,OCXPnF,OAAO2G,SAAWA,E","sources":["webpack://virtual-keyboard-by-Mi/./src/component/helper/signal.js","webpack://virtual-keyboard-by-Mi/./src/component/Store.js","webpack://virtual-keyboard-by-Mi/./src/component/Buffer.js","webpack://virtual-keyboard-by-Mi/./src/component/Editor.js","webpack://virtual-keyboard-by-Mi/./src/component/command/Command.js","webpack://virtual-keyboard-by-Mi/./src/component/command/Add.js","webpack://virtual-keyboard-by-Mi/./src/component/command/Delete.js","webpack://virtual-keyboard-by-Mi/./src/component/EditHistory.js","webpack://virtual-keyboard-by-Mi/./src/component/command/Copy.js","webpack://virtual-keyboard-by-Mi/./src/component/command/Replace.js","webpack://virtual-keyboard-by-Mi/./src/component/command/Cut.js","webpack://virtual-keyboard-by-Mi/./src/component/command/Paste.js","webpack://virtual-keyboard-by-Mi/./src/component/LocalStorage.js","webpack://virtual-keyboard-by-Mi/./src/component/Controller.js","webpack://virtual-keyboard-by-Mi/./src/component/helper/element.js","webpack://virtual-keyboard-by-Mi/./src/component/Header.js","webpack://virtual-keyboard-by-Mi/./src/component/Textarea.js","webpack://virtual-keyboard-by-Mi/./src/component/key/Key.js","webpack://virtual-keyboard-by-Mi/./src/component/key/KeyAlt.js","webpack://virtual-keyboard-by-Mi/./src/component/key/KeyArrow.js","webpack://virtual-keyboard-by-Mi/./src/component/key/KeyCapsLook.js","webpack://virtual-keyboard-by-Mi/./src/component/key/KeyControl.js","webpack://virtual-keyboard-by-Mi/./src/component/key/KeyMeta.js","webpack://virtual-keyboard-by-Mi/./src/component/key/KeyShift.js","webpack://virtual-keyboard-by-Mi/./src/component/Board.js","webpack://virtual-keyboard-by-Mi/./src/component/Main.js","webpack://virtual-keyboard-by-Mi/./src/component/helper/data-api.js","webpack://virtual-keyboard-by-Mi/./src/component/View.js","webpack://virtual-keyboard-by-Mi/./src/component/Keyboard.js","webpack://virtual-keyboard-by-Mi/./src/index.js"],"sourcesContent":["class Signal {\n  constructor() {\n    this._listener = [];\n  }\n\n  add = (listener) => {\n    this._listener.push(listener);\n  };\n\n  remove = (listener) => {\n    this._listener = this._listener.filter((elem) => elem !== listener);\n  };\n\n  emit = (params) => {\n    this._listener.forEach((listener) => listener(params));\n  };\n}\n\nexport { Signal };\n","import { Signal } from './helper/signal';\n\nclass Store {\n  constructor() {\n    this._langIndex = 0;\n    this._langMap = ['en', 'ru'];\n    this._textareaContent = '';\n    this._textareaRow = [''];\n    this._cursor = { line: 0, pos: 0, number: 0 };\n    this._keys = {};\n    this._activeBtns = {};\n    this._lastControl = { id: null, time: null };\n    this._activeControls = {};\n    this._lastKey = null;\n    this._capsLock = false;\n    this._maxLengthOfTextarea = 77;\n  }\n\n  setInitState({ keys, langIndex }) {\n    this._langIndex = langIndex;\n    this._keys = keys;\n    this.onInitState.emit({\n      keys,\n      lang: this._langMap[this._langIndex],\n    });\n  }\n\n  get maxLengthOfTextarea() {\n    return this._maxLengthOfTextarea;\n  }\n\n  set maxLengthOfTextarea(newLength) {\n    this._maxLengthOfTextarea = newLength;\n    this.onChangeLengthOfTextarea.emit(this._maxLengthOfTextarea);\n  }\n  get cursor() {\n    return this._cursor;\n  }\n\n  set cursor(newPosition) {\n    this._cursor = newPosition;\n    this.onChangeCursorPosition.emit({\n      start: this._cursor.number,\n      end: this._cursor.number,\n    });\n  }\n\n  get textareaRow() {\n    return this._textareaRow;\n  }\n\n  set textareaRow(textareaRow) {\n    this._textareaRow = textareaRow;\n  }\n\n  get() {\n    return this;\n  }\n\n  get textareaContent() {\n    return this._textareaContent;\n  }\n\n  set textareaContent(content) {\n    this._textareaContent = content;\n    this.onChangeTextareaContent.emit(this._textareaContent);\n  }\n\n  get keys() {\n    return this._keys;\n  }\n\n  set keys(keysMap) {\n    this._keys = keysMap;\n  }\n\n  get langIndex() {\n    return this._langIndex;\n  }\n\n  set langIndex(langIndex) {\n    this._langIndex = langIndex;\n    this.onChangeLang.emit(this._langMap[this._langIndex]);\n    this.onChangeLocalStorageData.emit({\n      lang: this._langMap[this.langIndex],\n      textareaContent: this.textareaContent,\n      textareaRow: this.textareaRow,\n      cursor: this.cursor,\n    });\n  }\n\n  get lang() {\n    return this._langMap;\n  }\n\n  set lang(langMap) {\n    this._langMap = langMap;\n  }\n\n  getKeyContent(code) {\n    return this._keys[code] || false;\n  }\n\n  get activeBtns() {\n    return this._activeBtns;\n  }\n\n  set activeBtns(btnsMap) {\n    this._activeBtns = btnsMap;\n    this.onChangeActiveBtns.emit(btnsMap);\n  }\n\n  get lastControl() {\n    return this._lastControl;\n  }\n\n  set lastControl(newLastControl) {\n    this._lastControl = newLastControl;\n  }\n\n  get activeControls() {\n    return this._activeControls;\n  }\n\n  set activeControls(newActiveControls) {\n    this._activeControls = newActiveControls;\n  }\n\n  get lastKey() {\n    return this._lastKey;\n  }\n\n  set lastKey(newLastKey) {\n    this._lastKey = newLastKey;\n  }\n\n  get capsLock() {\n    return this._capsLock;\n  }\n\n  set capsLock(flag) {\n    this._capsLock = flag;\n  }\n\n  onChangeActiveBtns = new Signal();\n\n  onChangeLengthOfTextarea = new Signal();\n  \n  onChangeLocalStorageData = new Signal();\n\n  onChangeTextareaContent = new Signal();\n\n  onChangeLang = new Signal();\n\n  onChangeCursorPosition = new Signal();\n\n  onInitState = new Signal();\n}\n\nexport { Store };\n","class DataBuffer {\n  constructor() {\n    this.buffer = [];\n  }\n\n  getLast = () => this.buffer[this.buffer.length - 1] || '';\n\n  push = (string) => {\n    this.buffer.push(string);\n  };\n}\n\nexport { DataBuffer };\n","import { DataBuffer } from './Buffer';\n\nclass Editor {\n  constructor() {\n    this.textareaContent = '';\n    this.textareaRow = [];\n    this.cursor = { line: 0, pos: 0, number: 0 };\n    this.maxRowLength = 77;\n    this.buffer = new DataBuffer();\n    this.selectPosition = null;\n  }\n\n  prepareTextareaRow = (string) => {\n    const splitText = string.split('\\n').map((row) => `${row}\\n`);\n    const textArr = splitText.map((row) => {\n      if (row.length <= this.maxRowLength) return row;\n      const arr = [];\n      let restString = row;\n      while (restString.length > this.maxRowLength) {\n        const rows = this.maxRowLength === 77\n          ? restString.match(/.{1,77}/g)\n          : this.maxRowLength === 60\n            ? restString.match(/.{1,60}/g)\n            : this.maxRowLength === 52\n              ? restString.match(/.{1,52}/g)\n              : restString.match(/.{1,30}/g);\n        const lastSpaceIndex = rows[0].lastIndexOf(' ');\n        if (lastSpaceIndex !== -1) {\n          arr.push(restString.slice(0, lastSpaceIndex + 1));\n          restString = string.slice(lastSpaceIndex + 1);\n        } else {\n          arr.push(rows[0].slice(0, -1));\n          restString = string.slice(this.maxRowLength - 1);\n        }\n      }\n      arr.push(restString);\n      return arr;\n    });\n    return textArr.flat();\n  };\n\n  addSymbol(symbol) {\n    const { number } = this.cursor;\n    if (number === this.textareaContent.length) {\n      const newTextareaContent = this.textareaContent + symbol;\n      this.textareaContent = newTextareaContent;\n      this.textareaRow = this.prepareTextareaRow(this.textareaContent);\n      const cursorPosition = this.findCursorPosition(number + symbol.length);\n      this.cursor = {\n        number: number + symbol.length,\n        ...cursorPosition,\n      };\n    } else {\n      this.textareaContent = this.textareaContent.slice(0, number)\n        + symbol + this.textareaContent.slice(number);\n      this.textareaRow = this.prepareTextareaRow(this.textareaContent);\n      const cursorPosition = this.findCursorPosition(number + symbol.length);\n      this.cursor = {\n        number: number + symbol.length,\n        ...cursorPosition,\n      };\n    }\n  }\n\n  setCursorPosition = (number) => {\n    this.cursor = {\n      number,\n      ...this.findCursorPosition(number),\n    };\n  };\n\n  findCursorPosition = (number) => {\n    let sumOfRowsLengths = 0;\n    const position = {};\n    for (let i = 0; i < this.textareaRow.length; i += 1) {\n      if (number - sumOfRowsLengths < this.textareaRow[i].length) {\n        position.line = i;\n        position.pos = number - sumOfRowsLengths;\n        break;\n      }\n      sumOfRowsLengths += this.textareaRow[i].length;\n    }\n    return position;\n  };\n\n  deleteSymbol = (direction) => {\n    const { line, pos, number } = this.cursor;\n    if (number === this.textareaContent.length) {\n      if (direction === 'prev') {\n        const newTextareaContent = this.textareaContent.slice(0, -1);\n        this.textareaContent = newTextareaContent;\n        this.textareaRow = this.prepareTextareaRow(this.textareaContent);\n        this.cursor = {\n          number: (this.textareaContent.length),\n          line: (this.textareaRow.length - 1),\n          pos: (this.textareaRow[this.textareaRow.length - 1].length),\n        };\n      }\n    } else if (direction === 'prev') {\n      if (number !== 0) {\n        this.textareaContent = this.textareaContent.slice(0, number - 1)\n          + this.textareaContent.slice(number);\n        this.textareaRow = this.prepareTextareaRow(this.textareaContent);\n        const cursorPosition = this.findCursorPosition(number - 1);\n        this.cursor = {\n          number: number - 1,\n          ...cursorPosition,\n        };\n      }\n    } else if (number < this.textareaContent.length) {\n      this.textareaContent = this.textareaContent.slice(0, number)\n        + this.textareaContent.slice(number + 1);\n      this.textareaRow = this.prepareTextareaRow(this.textareaContent);\n      this.cursor = {\n        number,\n        line,\n        pos,\n      };\n    }\n  };\n\n  replaceSelect(startSelect, endSelect, part) {\n    const start = Math.min(startSelect, endSelect);\n    const end = Math.max(startSelect, endSelect);\n    this.textareaContent = this.textareaContent.slice(0, start)\n      + part + this.textareaContent.slice(end);\n    this.textareaRow = this.prepareTextareaRow(this.textareaContent);\n\n    const cursorPosition = this.findCursorPosition(start + part.length);\n    this.cursor = {\n      number: start + part.length,\n      ...cursorPosition,\n    };\n  }\n\n  saveSelect = (startSelect, endSelect) => {\n    const start = Math.min(startSelect, endSelect);\n    const end = Math.max(startSelect, endSelect);\n    const copyText = this.textareaContent.slice(start, end);\n    this.buffer.push(copyText);\n  };\n\n  cutSelect = (startSelect, endSelect) => {\n    const start = Math.min(startSelect, endSelect);\n    const end = Math.max(startSelect, endSelect);\n    const cutText = this.textareaContent.slice(start, end);\n    this.buffer.push(cutText);\n    this.textareaContent = this.textareaContent.slice(0, start)\n      + this.textareaContent.slice(end);\n    this.textareaRow = this.prepareTextareaRow(this.textareaContent);\n\n    const cursorPosition = this.findCursorPosition(start);\n    this.cursor = {\n      number: start,\n      ...cursorPosition,\n    };\n  };\n}\n\nexport { Editor };\n","class Command {\n  constructor(controller, editor, onExecute) {\n    this.controller = controller;\n    this.editor = editor;\n    this.backupTextareaContent = '';\n    this.backupCursor = { line: 0, pos: 0, number: 0 };\n    this.textareaRow = [''];\n    this.execute = () => onExecute();\n  }\n\n  saveBackup() {\n    this.backupTextareaContent = this.editor.textareaContent;\n    this.backupCursor = this.editor.cursor;\n    this.textareaRow = this.editor.textareaRow;\n  }\n\n  undo() {\n    this.editor = this.backupTextareaContent;\n  }\n}\n\nexport { Command };\n","import { Command } from './Command';\n\nclass Add extends Command {\n  constructor(controller, editor) {\n    super(controller, editor, () => {\n      editor.addSymbol(controller.newSymbol);\n      this.saveBackup();\n      return true;\n    });\n  }\n}\n\nexport { Add };\n","import { Command } from './Command';\n\nclass Delete extends Command {\n  constructor(controller, editor) {\n    super(controller, editor, () => {\n      editor.deleteSymbol(controller.deleteDirection);\n      this.saveBackup();\n      return true;\n    });\n  }\n}\n\nexport { Delete };\n","class History {\n  constructor(initialData) {\n    this.history = [initialData];\n    this.activeCommandIndex = 0;\n  }\n\n  save(command) {\n    this.activeCommandIndex += 1;\n    if (this.history.length > this.activeCommandIndex) {\n      this.history = this.history.slice(0, this.activeCommandIndex);\n    }\n    this.history[this.activeCommandIndex] = command;\n  }\n\n  back() {\n    if (this.activeCommandIndex === 0) return false;\n    this.activeCommandIndex -= 1;\n    return this.history[this.activeCommandIndex];\n  }\n\n  next() {\n    if (this.activeCommandIndex + 1 === this.history.length) return false;\n    this.activeCommandIndex += 1;\n    return this.history[this.activeCommandIndex];\n  }\n}\n\nexport { History };\n","import { Command } from './Command';\n\nclass Copy extends Command {\n  constructor(controller, editor) {\n    super(controller, editor, () => {\n      editor.saveSelect(\n        controller.selectedTextRange.start,\n        controller.selectedTextRange.end,\n      );\n      return false;\n    });\n  }\n}\n\nexport { Copy };\n","import { Command } from './Command';\n\nclass Replace extends Command {\n  constructor(controller, editor) {\n    super(controller, editor, () => {\n      editor.replaceSelect(\n        controller.selectedTextRange.start,\n        controller.selectedTextRange.end,\n        controller.newSymbol,\n      );\n      this.saveBackup();\n      return true;\n    });\n  }\n}\n\nexport { Replace };\n","import { Command } from './Command';\n\nclass Cut extends Command {\n  constructor(controller, editor) {\n    super(controller, editor, () => {\n      editor.cutSelect(\n        controller.selectedTextRange.start,\n        controller.selectedTextRange.end,\n      );\n      this.saveBackup();\n      return true;\n    });\n  }\n}\n\nexport { Cut };\n","import { Command } from './Command';\n\nclass Paste extends Command {\n  constructor(controller, editor) {\n    super(controller, editor, () => {\n      editor.addSymbol(controller.newSymbol);\n      this.saveBackup();\n      return true;\n    });\n  }\n}\n\nexport { Paste };\n","class LocalStorageData {\n  constructor({\n    lang = 'en',\n    textareaContent = '',\n    textareaRow = [''],\n    cursor = { number: 0, line: 0, pos: 0 },\n  }) {\n    this.lang = lang;\n    this.textareaContent = textareaContent;\n    this.textareaRow = textareaRow;\n    this.cursor = cursor;\n  }\n\n  static toJson(data) {\n    return JSON.stringify(data);\n  }\n\n  static instanceOfISourcesLStorage(object, key) {\n    return key in object;\n  }\n\n  static fromJson(data) {\n    const initData = {};\n\n    if (data === null || typeof data !== 'object') {\n      throw new Error('Not object in localstorage');\n    }\n\n    if (this.instanceOfISourcesLStorage(data, 'lang')) {\n      initData.lang = data.lang;\n    }\n\n    if (this.instanceOfISourcesLStorage(data, 'textareaContent')) {\n      initData.textareaContent = data.textareaContent;\n    }\n\n    if (this.instanceOfISourcesLStorage(data, 'textareaRow')) {\n      initData.textareaRow = data.textareaRow;\n    }\n\n    if (this.instanceOfISourcesLStorage(data, 'cursor')) {\n      initData.cursor = data.cursor;\n    }\n\n    return new LocalStorageData(initData);\n  }\n}\n\nexport { LocalStorageData };\n","import { Editor } from './Editor';\nimport { Add } from './command/Add';\nimport { Delete } from './command/Delete';\nimport { History } from './EditHistory';\nimport { Copy } from './command/Copy';\nimport { Replace } from './command/Replace';\nimport { Cut } from './command/Cut';\nimport { Paste } from './command/Paste';\nimport { LocalStorageData } from './LocalStorage';\n\nclass Controller {\n  constructor(store) {\n    this.store = store;\n    this.editor = new Editor();\n\n    this.history = new History({\n      backupTextareaContent: '',\n      backupCursor: { line: 0, pos: 0, number: 0 },\n      backupTextareaRow: [''],\n    });\n    this.localStorageData = this.getLocalStorageData();\n    this.maxLengthOfTextarea = window.innerWidth >= 1080 ? 77 : window.innerWidth >= 851 ? 60 : window.innerWidth >= 768 ? 52 : 30;\n    this.activeBtns = {};\n    this.lastControl = { id: null, time: null };\n    this.activeControls = {};\n    this.lastKey = null;\n    this.newSymbol = null;\n    this.selectedTextRange = null;\n\n    this.store.onChangeLocalStorageData.add((data) => this.toLocalStorageData(data));\n  }\n\n  controlCombinations = [\n    ['Control', 'KeyX'],\n    ['Control', 'KeyC'],\n    ['Control', 'KeyV'],\n    ['Control', 'KeyZ'],\n    ['Control', 'KeyY'],\n    ['Control', 'Shift'],\n  ];\n\n  excludeKey = ['F1', 'F2', 'F3', 'F4', 'F5', 'F6', 'F7', 'F8', 'F9', 'F10', 'F11', 'F12'];\n\n  toLocalStorageData = (dataFromLocalSorage) => {\n    localStorage.setItem('virtual_keyboard_by_Mi', LocalStorageData.toJson(dataFromLocalSorage));\n  };\n\n  getLocalStorageData = () => {\n    try {\n      const data = LocalStorageData.fromJson(JSON.parse(localStorage.getItem('virtual_keyboard_by_Mi') || ''));\n      return data;\n    } catch (e) {\n      return new LocalStorageData({\n        lang: 'en',\n        textareaContent: '',\n        textareaRow: [''],\n        cursor: { number: 0, line: 0, pos: 0 },\n      });\n    }\n  };\n\n  hasActiveShift = () => {\n    const activeKeys = Object.keys(this.activeControls)\n      .filter((i) => this.activeControls[i] !== 0);\n    return activeKeys.length === 1 && (activeKeys.includes('ShiftLeft') || activeKeys.includes('ShiftRight'));\n  };\n\n  symbol = (code, { value, value_shift: shiftValue }) => {\n    let symbol = '';\n    if (code.includes('Key')) {\n      symbol = (\n        (this.hasActiveShift() && !this.store.capsLock)\n        || (!this.hasActiveShift() && this.store.capsLock)\n      ) ? shiftValue : value;\n    } else symbol = this.hasActiveShift() ? shiftValue : value;\n    this.resetControls();\n\n    this.add(symbol);\n  };\n\n  delete = (code) => {\n    this.deleteDirection = code === 'Backspace' ? 'prev' : 'next';\n    this.editor.textareaContent = this.store.textareaContent;\n    this.editor.textareaRow = this.store.textareaRow;\n    this.editor.cursor = this.store.cursor;\n    this.editor.maxRowLength = this.store.maxLengthOfTextarea;\n    this.executeCommand(new Delete(this, this.editor));\n    this.store.textareaContent = this.editor.textareaContent;\n    this.store.textareaRow = this.editor.textareaRow;\n    this.store.cursor = this.editor.cursor;\n    this.deleteDirection = null;\n  };\n\n  space = (code, { value }) => {\n    this.add(value);\n  };\n\n  capsLock = () => {\n    const caps = this.store.capsLock;\n    this.store.capsLock = !caps;\n  };\n\n  moveCursor = (code) => {\n    const direction = code.slice(5).toLowerCase();\n    if (this.isSelectedText) {\n      const start = Math.min(this.selectedTextRange.start, this.selectedTextRange.end);\n      const end = Math.max(this.selectedTextRange.start, this.selectedTextRange.end);\n\n      this.editor.textareaContent = this.store.textareaContent;\n      this.editor.textareaRow = this.store.textareaRow;\n      this.editor.cursor = this.store.cursor;\n      this.editor.maxRowLength = this.store.maxLengthOfTextarea;\n      this.editor.setCursorPosition(\n        (direction === 'left' || direction === 'up')\n          ? start : end,\n      );\n      this.store.cursor = this.editor.cursor;\n      this.isSelectedText = false;\n      this.isCopiedText = false;\n      this.selectedTextRange = null;\n      if (direction === 'left' || direction === 'right') return true;\n    }\n\n    this.cursorHandler[direction]();\n    return true;\n  };\n\n  add = (symbol) => {\n    this.newSymbol = symbol;\n\n    if (this.isSelectedText) {\n      this.editor.textareaContent = this.store.textareaContent;\n      this.editor.textareaRow = this.store.textareaRow;\n      this.editor.cursor = this.store.cursor;\n      this.editor.maxRowLength = this.store.maxLengthOfTextarea;\n      this.executeCommand(new Replace(this, this.editor));\n      this.store.textareaContent = this.editor.textareaContent;\n      this.store.textareaRow = this.editor.textareaRow;\n      this.store.cursor = this.editor.cursor;\n      this.isSelectedText = false;\n      this.isCopiedText = false;\n      this.selectedTextRange = null;\n      this.newSymbol = '';\n      return;\n    }\n\n    this.editor.textareaContent = this.store.textareaContent;\n    this.editor.textareaRow = this.store.textareaRow;\n    this.editor.cursor = this.store.cursor;\n    this.editor.maxRowLength = this.store.maxLengthOfTextarea;\n    this.executeCommand(new Add(this, this.editor));\n    this.store.textareaContent = this.editor.textareaContent;\n    this.store.textareaRow = this.editor.textareaRow;\n    this.store.cursor = this.editor.cursor;\n    this.newSymbol = '';\n  };\n\n  mouseDown = (code, time) => {\n    const lang = this.store.lang[this.store.langIndex];\n    const key = this.store.getKeyContent(code);\n    const { type } = key;\n\n    if (type === 'control') {\n      if ((this.lastControl.id && this.lastControl.id === code)\n        && (this.lastControl.time && ((time - this.lastControl.time) < 300))) {\n        this.activeControls[code] = 1;\n        this.activeBtns[code] = 1;\n        this.lastKey = code;\n      } else if (!this.hasControls()) {\n        this.lastControl = { id: code, time };\n        this.activeBtns[code] = 1;\n        this.lastKey = code;\n      } else if (this.activeControls[code]) {\n        this.activeControls[code] = 0;\n        this.activeBtns[code] = 1;\n        this.lastKey = code;\n        this.lastControl = { id: null, time: null };\n      } else if (!this.hasControlCombination(code)) {\n        this.activeControls[code] = 0;\n        this.activeBtns[code] = 1;\n        this.lastKey = code;\n        this.lastControl = { id: code, time };\n      } else {\n        this.resetControls();\n        this.lastControl = { id: null, time: null };\n        this.activeBtns[code] = 1;\n        this.lastKey = code;\n      }\n    } else if (this.hasControls()) {\n      if (this.hasControlCombination(code)) {\n        this.resetControls();\n        this.lastControl = { id: null, time: null };\n        this.lastKey = code;\n        this.activeBtns[code] = 1;\n      } else {\n        if (type === 'meta' || !this.editMap[type]);\n        else this.editMap[type](code, key[lang]);\n        this.resetControls();\n        this.lastControl = { id: null, time: null };\n        this.lastKey = code;\n        this.activeBtns[code] = 1;\n      }\n    } else {\n      this.lastControl = { id: null, time: null };\n      this.lastKey = code;\n      this.activeBtns[code] = 1;\n      if (type === 'meta' || !this.editMap[type]);\n      else this.editMap[type](code, key[lang]);\n    }\n    this.store.activeBtns = this.activeBtns;\n  };\n\n  mouseUp = (code) => {\n    this.activeBtns = this.store.activeBtns;\n    if (this.lastKey === code) {\n      if (this.hasControls()) {\n        if (this.activeControls[code] === 0) this.activeBtns[code] = 0;\n        this.lastKey = null;\n      } else {\n        const arr = Object.keys(this.activeBtns);\n        for (let i = 0; i < arr.length; i += 1) {\n          this.activeBtns[arr[i]] = 0;\n        }\n      }\n    } else if (this.lastKey !== null) {\n      if (this.hasControls()) {\n        if (this.activeControls[this.lastKey] === 0) this.activeBtns[this.lastKey] = 0;\n        this.lastKey = null;\n      } else {\n        const arr = Object.keys(this.activeBtns);\n        for (let i = 0; i < arr.length; i += 1) {\n          this.activeBtns[arr[i]] = 0;\n        }\n      }\n    }\n    this.store.activeBtns = this.activeBtns;\n  };\n\n  resetControls = () => { this.activeControls = {}; };\n\n  hasControlCombination(code) {\n    const controlsKeys = Object.keys(this.activeControls)\n      .filter((i) => (this.activeControls[i] !== 0));\n    controlsKeys.push(code);\n    const activeControlsKeys = controlsKeys\n      .map((i) => {\n        if (i === 'ShiftLeft' || i === 'ShiftRight') return 'Shift';\n        if (i === 'AltLeft' || i === 'AltRight') return 'Alt';\n        if (i === 'ControlLeft' || i === 'ControlRight') return 'Control';\n        return i;\n      });\n    for (let i = 0; i < this.controlCombinations.length; i += 1) {\n      if (this.controlCombinations[i].every((l) => (activeControlsKeys.includes(l)))) {\n        if (this.controlCombinations[i].join('') === 'ControlShift') {\n          this.store.langIndex = (this.store.langIndex + 1) % this.store.lang.length;\n        }\n        if (this.controlCombinations[i].join('') === 'ControlKeyZ') {\n          if (this.isSelectedText) {\n            this.isSelectedText = false;\n            this.isCopiedText = false;\n            this.selectedTextRange = null;\n          }\n\n          const backCommand = this.history.back();\n          if (backCommand) {\n            this.store.textareaContent = backCommand.backupTextareaContent;\n            this.store.cursor = backCommand.backupCursor;\n            this.store.textareaRow = backCommand.textareaRow;\n          }\n        }\n        if (this.controlCombinations[i].join('') === 'ControlKeyY') {\n          if (this.isSelectedText) {\n            this.isSelectedText = false;\n            this.isCopiedText = false;\n            this.selectedTextRange = null;\n          }\n\n          const backCommand = this.history.next();\n          if (backCommand) {\n            this.store.textareaContent = backCommand.backupTextareaContent;\n            this.store.cursor = backCommand.backupCursor;\n            this.store.textareaRow = backCommand.textareaRow;\n          }\n        }\n        if (this.controlCombinations[i].join('') === 'ControlKeyX' && this.isSelectedText) {\n          this.editor.textareaContent = this.store.textareaContent;\n          this.editor.selectPosition = this.selectedTextRange;\n          this.editor.maxRowLength = this.store.maxLengthOfTextarea;\n          this.executeCommand(new Cut(this, this.editor));\n          this.store.textareaContent = this.editor.textareaContent;\n          this.store.textareaRow = this.editor.textareaRow;\n          this.store.cursor = this.editor.cursor;\n\n          this.isSelectedText = false;\n          this.isCopiedText = false;\n          this.selectedTextRange = null;\n        }\n        if (this.controlCombinations[i].join('') === 'ControlKeyV') {\n          this.newSymbol = this.editor.buffer.getLast();\n          if (this.newSymbol === '') return true;\n          this.editor.textareaContent = this.store.textareaContent;\n          this.editor.textareaRow = this.store.textareaRow;\n          this.editor.cursor = this.store.cursor;\n          this.editor.maxRowLength = this.store.maxLengthOfTextarea;\n\n          if (this.isSelectedText) {\n            this.executeCommand(new Replace(this, this.editor));\n            this.store.textareaContent = this.editor.textareaContent;\n            this.store.textareaRow = this.editor.textareaRow;\n            this.store.cursor = this.editor.cursor;\n            this.isSelectedText = false;\n            this.isCopiedText = false;\n            this.selectedTextRange = null;\n            return true;\n          }\n\n          this.executeCommand(new Paste(this, this.editor));\n          this.store.textareaContent = this.editor.textareaContent;\n          this.store.textareaRow = this.editor.textareaRow;\n          this.store.cursor = this.editor.cursor;\n\n          this.isSelectedText = false;\n          this.isCopiedText = false;\n          this.selectedTextRange = null;\n          this.newSymbol = '';\n        }\n        if (this.controlCombinations[i].join('') === 'ControlKeyC' && this.isSelectedText) {\n          this.editor.textareaContent = this.store.textareaContent;\n          this.executeCommand(new Copy(this, this.editor));\n          this.isCopiedText = true;\n        }\n        return true;\n      }\n    }\n    return false;\n  }\n\n  hasControls = () => Object.keys(this.activeControls)\n    .filter((i) => this.activeControls[i] !== 0).length !== 0;\n\n  keyDown = (code) => {\n    if (this.excludeKey.includes(code)) return;\n    const lang = this.store.lang[this.store.langIndex];\n    const key = this.store.getKeyContent(code);\n    if (!key) {\n      if (this.isSelectedText) {\n        this.isSelectedText = false;\n        this.isCopiedText = false;\n        this.editor.maxRowLength = this.store.maxLengthOfTextarea;\n        this.setCursorFromTextarea(this.selectedTextRange.end);\n        this.store.cursor = this.editor.cursor;\n        this.selectedTextRange = null;\n        this.isSelectedText = false;\n        this.isCopiedText = false;\n      }\n      return;\n    }\n    const { type } = key;\n\n    this.activeBtns = this.store.activeBtns;\n    if (type === 'control') {\n      if (!this.hasControls()) {\n        this.activeControls[code] = 1;\n        this.activeBtns[code] = 1;\n      }\n      if (this.hasControls()) {\n        if (this.activeControls[code]) {\n          this.activeBtns[code] = 1;\n        } else if (!this.hasControlCombination(code)) {\n          this.activeControls[code] = 1;\n          this.activeBtns[code] = 1;\n        } else {\n          this.activeBtns[code] = 1;\n        }\n      }\n    } else if (this.hasControls()) {\n      if (this.hasControlCombination(code)) {\n        this.activeBtns[code] = 1;\n      } else {\n        if (type === 'meta' || !this.editMap[type]) {\n          if (this.isSelectedText) {\n            this.isSelectedText = false;\n            this.isCopiedText = false;\n            this.editor.maxRowLength = this.store.maxLengthOfTextarea;\n            this.setCursorFromTextarea(this.selectedTextRange.end);\n            this.store.cursor = this.editor.cursor;\n            this.selectedTextRange = null;\n            this.isSelectedText = false;\n            this.isCopiedText = false;\n          }\n        } else this.editMap[type](code, key[lang]);\n        this.activeBtns[code] = 1;\n      }\n    } else {\n      this.activeBtns[code] = 1;\n      if (type === 'meta' || !this.editMap[type]) {\n        if (this.isSelectedText) {\n          this.isSelectedText = false;\n          this.isCopiedText = false;\n          this.editor.maxRowLength = this.store.maxLengthOfTextarea;\n          this.setCursorFromTextarea(this.selectedTextRange.end);\n          this.store.cursor = this.editor.cursor;\n          this.selectedTextRange = null;\n          this.isSelectedText = false;\n          this.isCopiedText = false;\n        }\n      } else this.editMap[type](code, key[lang]);\n    }\n    this.store.activeBtns = this.activeBtns;\n  };\n\n  keyUp = (code) => {\n    if (this.excludeKey.includes(code)) return;\n\n    const key = this.store.getKeyContent(code);\n    if (!key) {\n      if (this.isSelectedText) {\n        this.isSelectedText = false;\n        this.isCopiedText = false;\n        this.editor.maxRowLength = this.store.maxLengthOfTextarea;\n        this.setCursorFromTextarea(this.selectedTextRange.end);\n        this.store.cursor = this.editor.cursor;\n        this.selectedTextRange = null;\n        this.isSelectedText = false;\n        this.isCopiedText = false;\n      }\n      return;\n    }\n\n    this.activeBtns = this.store.activeBtns;\n    if (this.hasControls()) {\n      this.activeBtns[code] = 0;\n      if (this.activeControls[code] === 1) {\n        this.activeControls[code] = 0;\n      }\n    } else {\n      if (this.activeControls[code] === 1) this.activeControls[code] = 0;\n      const arr = Object.keys(this.activeBtns);\n      for (let i = 0; i < arr.length; i += 1) {\n        this.activeBtns[arr[i]] = 0;\n      }\n    }\n    this.store.activeBtns = this.activeBtns;\n  };\n\n  upCursor = () => {\n    const { line, pos } = this.store.cursor;\n    const textareaRow = [...this.store.textareaRow];\n    if (line !== 0) {\n      const newLine = line - 1;\n      let newNumber = 0;\n\n      if (newLine > 0) {\n        for (let i = 0; i < newLine; i += 1) {\n          newNumber += textareaRow[i].length;\n        }\n      }\n\n      if (textareaRow[newLine].length > pos) {\n        newNumber += pos;\n        this.store.cursor = {\n          number: newNumber,\n          line: newLine,\n          pos,\n        };\n      } else {\n        newNumber += textareaRow[newLine].length - 1;\n        this.store.cursor = {\n          number: newNumber,\n          line: newLine,\n          pos: textareaRow[newLine].length - 1,\n        };\n      }\n    }\n  };\n\n  downCursor = () => {\n    const { line, pos } = this.store.cursor;\n    const textareaRow = [...this.store.textareaRow];\n\n    if (line !== textareaRow.length - 1) {\n      const newLine = line + 1;\n      let newNumber = 0;\n      for (let i = 0; i < newLine; i += 1) {\n        newNumber += textareaRow[i].length;\n      }\n      if (textareaRow[newLine].length > pos) {\n        newNumber += pos;\n        this.store.cursor = {\n          number: newNumber,\n          line: newLine,\n          pos,\n        };\n      } else {\n        newNumber += textareaRow[newLine].length - 1;\n        const newPos = textareaRow[newLine].length - 1;\n        this.store.cursor = {\n          number: newNumber,\n          line: newLine,\n          pos: newPos,\n        };\n      }\n    }\n  };\n\n  leftCursor = () => {\n    const { line, pos, number } = this.store.cursor;\n    const textareaRow = [...this.store.textareaRow];\n    if (pos === 0 && line === 0) return;\n    if (pos - 1 === 0) {\n      let newNumber = 0;\n      if (line !== 0) {\n        for (let i = 0; i < line; i += 1) {\n          newNumber += textareaRow[i].length;\n        }\n      }\n      this.store.cursor = {\n        number: newNumber,\n        line,\n        pos: 0,\n      };\n    } else if (pos === 0) {\n      let newNumber = 0;\n      const newLine = line - 1;\n      for (let i = 0; i < line; i += 1) {\n        newNumber += textareaRow[i].length;\n      }\n      this.store.cursor = {\n        number: newNumber - 1,\n        line: newLine,\n        pos: textareaRow[newLine].length - 1,\n      };\n    } else {\n      const newNumber = number - 1;\n      const newPos = pos - 1;\n      this.store.cursor = {\n        number: newNumber,\n        line,\n        pos: newPos,\n      };\n    }\n  };\n\n  rightCursor = () => {\n    const { line, pos, number } = this.store.cursor;\n    const textareaRow = { ...this.store.textareaRow };\n\n    if (number === this.store.textareaContent.length) return;\n    if (pos + 1 === textareaRow[line].length) {\n      this.store.cursor = {\n        number: number + 1,\n        line: line + 1,\n        pos: 0,\n      };\n    } else {\n      this.store.cursor = {\n        number: number + 1,\n        line,\n        pos: pos + 1,\n      };\n    }\n  };\n\n  setCursorFromTextarea = (number) => {\n    this.editor.textareaContent = this.store.textareaContent;\n    this.editor.textareaRow = this.store.textareaRow;\n    this.editor.cursor = this.store.cursor;\n    this.editor.maxRowLength = this.store.maxLengthOfTextarea;\n    this.editor.setCursorPosition(number);\n    this.store.cursor = this.editor.cursor;\n    if (this.isSelectedText) {\n      this.selectedTextRange = null;\n      this.isSelectedText = false;\n      this.isCopiedText = false;\n    }\n  };\n\n  selectTextRange = (start, end) => {\n    if (this.selectedTextRange) this.selectedTextRange = null;\n    this.selectedTextRange = { start, end };\n    this.isSelectedText = true;\n  };\n\n  editMap = {\n    symbol: this.symbol,\n    delete: this.delete,\n    move: this.moveCursor,\n    capslock: this.capsLock,\n    space: this.space,\n  };\n\n  textareaHandler = {\n    setCursorPosition: this.setCursorFromTextarea,\n    selectTextRange: this.selectTextRange,\n  };\n\n  cursorHandler = {\n    up: this.upCursor,\n    down: this.downCursor,\n    left: this.leftCursor,\n    right: this.rightCursor,\n  };\n\n  keyHandler = {\n    mouseDown: this.mouseDown,\n    mouseUp: this.mouseUp,\n  };\n\n  boardHandler = {\n    keyHandler: this.keyHandler,\n  };\n  \n  onResize = (maxLengthOfTextarea) => {\n    this.maxLengthOfTextarea = maxLengthOfTextarea;\n    this.store.maxLengthOfTextarea = maxLengthOfTextarea;\n    this.editor.textareaContent = this.store.textareaContent;\n    this.editor.maxRowLength = this.store.maxLengthOfTextarea;\n    this.store.textareaRow = this.editor.prepareTextareaRow(this.store.textareaContent);\n    this.editor.textareaRow = this.store.textareaRow;\n    this.editor.setCursorPosition(this.store.cursor.number);\n    this.store.cursor = this.editor.cursor;\n    if (this.isSelectedText) {\n      this.selectedTextRange = null;\n      this.isSelectedText = false;\n      this.isCopiedText = false;\n    }\n  }\n\n  initKeyboard = (data) => {\n    const keys = {};\n    data.forEach((key) => {\n      keys[`${key.code}`] = {\n        ...key,\n      };\n    });\n    const langIndexInStore = this.store.lang.indexOf(this.localStorageData.lang);\n    this.store.setInitState({\n      keys,\n      langIndex: langIndexInStore > -1 ? langIndexInStore : 0,\n      maxLengthOfTextarea: this.maxLengthOfTextarea,\n    });\n  };\n\n  executeCommand(command) {\n    if (command.execute()) {\n      this.history.save(command);\n    }\n  }\n\n  setActiveKey = () => {\n    Object.keys(this.activeBtns).forEach((btn) => {\n      if (this.activeBtns[btn] === 0) {\n        delete this.activeBtns[btn];\n      }\n    });\n    this.store.activeBtns = this.activeBtns;\n  };\n}\n\nexport { Controller };\n","class Element {\n  constructor({\n    parent = null,\n    tagName = 'div',\n    className = '',\n    content = '',\n  }) {\n    const element = document.createElement(tagName);\n    element.classList = className;\n    element.innerHTML = content;\n    if (parent) parent.append(element);\n    this.node = element;\n  }\n\n  destroy() {\n    this.node.remove();\n  }\n}\n\nexport { Element };\n","import { Element } from './helper/element';\n\nclass Header extends Element {\n  constructor({\n    parent,\n    className,\n    lang,\n    controller,\n  }) {\n    super({\n      parent,\n      tagName: 'header',\n      className: `${className}__header header`,\n    });\n    this.controller = controller;\n    this.activeLang = lang;\n    this.container = new Element({\n      parent: this.node,\n      className: 'header__container container',\n    });\n    this.lang = new Element({\n      parent: this.container.node,\n      className: 'header__lang lang',\n      content: this.activeLang,\n    });\n    this.description = new Element({\n      parent: this.container.node,\n      className: 'header__description description',\n      content: `\n        <span>Virtual Keyboard реализована для Window OS</span>\n        <span>Для зажатия контрольной кнопки используйте двойной клик</span>\n      `,\n    });\n  }\n\n  onChangeLang = (lang) => {\n    this.activeLang = lang;\n    this.lang.node.textContent = this.activeLang;\n  };\n}\n\nexport { Header };\n","import { Element } from './helper/element';\n\nclass Textarea extends Element {\n  constructor({\n    parent,\n    className,\n    controller,\n  }) {\n    super({\n      parent,\n      tagName: 'textarea',\n      className: `${className}__textarea textarea`,\n    });\n    this.controller = controller;\n    this.node.addEventListener('keydown', (event) => { event.preventDefault(); });\n    this.node.addEventListener('keyup', (event) => { event.preventDefault(); });\n\n    this.node.focus();\n\n    this.node.onmouseup = () => {\n      if (this.node.selectionEnd === this.node.selectionStart) {\n        this.controller.setCursorPosition(this.node.selectionEnd);\n      } else {\n        this.controller.selectTextRange(this.node.selectionStart, this.node.selectionEnd);\n      }\n    };\n  }\n\n  setContent = (content) => {\n    this.node.textContent = content;\n    this.node.focus();\n  };\n}\n\nexport { Textarea };\n","import { Element } from '../helper/element';\n\nclass Key extends Element {\n  constructor({\n    parent,\n    className,\n    code,\n    content,\n    controller,\n  }) {\n    super({\n      parent,\n      tagName: 'button',\n      className: `${className}__btn btn ${code}`,\n    });\n    this.code = code;\n    this.content = content;\n    this.controller = controller;\n    this.node.tabIndex = '-1';\n    this.beforeContent = new Element({\n      parent: this.node,\n      tagName: 'span',\n      className: 'btn__content btn__content--before',\n    });\n    this.mainContent = new Element({\n      parent: this.node,\n      tagName: 'span',\n      className: 'btn__content btn__content--main',\n    });\n    this.update(this.content);\n    this.node.onmousedown = (event) => {\n      event.preventDefault();\n      this.controller.mouseDown(this.code, event.timeStamp);\n      this.node.onmouseover = (e) => this.node.onmouseup(e);\n    };\n    this.node.onmouseup = (event) => {\n      this.controller.mouseUp(this.code, event.timeStamp);\n      this.node.onmouseover = null;\n    };\n  }\n\n  update = (content) => {\n    if (this.content !== content) this.content = content;\n    [this.mainContent.node.textContent] = this.content;\n    this.beforeContent.node.textContent = `${this.content.length === 2 ? this.content[1] : ''}`;\n  };\n}\n\nexport { Key };\n","import { Key } from './Key';\n\nclass KeyAlt extends Key {\n  constructor({\n    parent,\n    className,\n    code,\n    content,\n    controller,\n  }) {\n    super({\n      parent,\n      className,\n      code,\n      content,\n      controller,\n    });\n  }\n}\n\nexport { KeyAlt };\n","import { Key } from './Key';\n\nclass KeyArrow extends Key {\n  constructor({\n    parent,\n    className,\n    code,\n    content,\n    controller,\n  }) {\n    super({\n      parent,\n      className,\n      code,\n      content,\n      controller,\n    });\n  }\n}\n\nexport { KeyArrow };\n","import { Key } from './Key';\n\nclass KeyCapsLook extends Key {\n  constructor({\n    parent,\n    className,\n    code,\n    content,\n    controller,\n  }) {\n    super({\n      parent,\n      className,\n      code,\n      content,\n      controller,\n    });\n  }\n}\n\nexport { KeyCapsLook };\n","import { Key } from './Key';\n\nclass KeyControl extends Key {\n  constructor({\n    parent,\n    className,\n    code,\n    content,\n    controller,\n  }) {\n    super({\n      parent,\n      className,\n      code,\n      content,\n      controller,\n    });\n  }\n}\n\nexport { KeyControl };\n","import { Key } from './Key';\n\nclass KeyMeta extends Key {\n  constructor({\n    parent,\n    className,\n    code,\n    content,\n    controller,\n  }) {\n    super({\n      parent,\n      className,\n      code,\n      content,\n      controller,\n    });\n  }\n}\n\nexport { KeyMeta };\n","import { Key } from './Key';\n\nclass KeyShift extends Key {\n  constructor({\n    parent,\n    className,\n    code,\n    content,\n    controller,\n  }) {\n    super({\n      parent,\n      className,\n      code,\n      content,\n      controller,\n    });\n  }\n}\n\nexport { KeyShift };\n","import { Element } from './helper/element';\nimport { Key } from './key/Key';\nimport { KeyAlt } from './key/KeyAlt';\nimport { KeyArrow } from './key/KeyArrow';\nimport { KeyCapsLook } from './key/KeyCapsLook';\nimport { KeyControl } from './key/KeyControl';\nimport { KeyMeta } from './key/KeyMeta';\nimport { KeyShift } from './key/KeyShift';\n\nconst KeyMap = {\n  ShiftLeft: KeyShift,\n  ShiftRight: KeyShift,\n  ControlLeft: KeyControl,\n  ControlRight: KeyControl,\n  MetaLeft: KeyMeta,\n  AltLeft: KeyAlt,\n  AltRight: KeyAlt,\n  ArrowLeft: KeyArrow,\n  ArrowRight: KeyArrow,\n  CapsLook: KeyCapsLook,\n};\n\nclass Board extends Element {\n  constructor({\n    parent,\n    className,\n    lang,\n    controller,\n  }) {\n    super({\n      parent, className: `${className}__board board`,\n    });\n    this.lang = lang;\n    this.controller = controller;\n    this.rows = {};\n    this.keys = {};\n    this.btns = {};\n    for (let i = 0; i < 5; i += 1) {\n      this.rows[i] = new Element({\n        parent: this.node,\n        className: 'board__row row',\n      });\n    }\n  }\n\n  onChangeActiveBtns = (activeBtnsMap) => {\n    Object.keys(this.btns).forEach((code) => {\n      if (this.btns[code].node.classList.contains('active')) this.btns[code].node.classList.remove('active');\n    });\n    Object.keys(activeBtnsMap).forEach((code) => {\n      if (activeBtnsMap[code]) this.btns[code].node.classList.add('active');\n    });\n  };\n\n  onChangeLang = (lang) => {\n    this.lang = lang;\n    Object.keys(this.btns).forEach((code) => {\n      this.btns[code].update(this.keys[code][`${this.lang}`].name);\n    });\n  };\n\n  init = ({ keys, lang }) => {\n    this.lang = lang;\n    this.keys = keys;\n    Object.keys(this.keys).forEach((key) => {\n      const keyData = this.keys[key];\n      const { row, code } = keyData;\n      const KeyConstructor = KeyMap[code] || Key;\n      this.btns[code] = new KeyConstructor({\n        parent: this.rows[row - 1].node,\n        className: 'board',\n        code,\n        content: keyData[`${this.lang}`].name,\n        controller: this.controller.keyHandler,\n      });\n    });\n  };\n}\n\nexport { Board };\n","import { Element } from './helper/element';\nimport { Textarea } from './Textarea';\nimport { Board } from './Board';\n\nclass Main extends Element {\n  constructor({ parent, className, controller }) {\n    super({\n      parent,\n      tagName: 'main',\n      className: `${className}__main main`,\n    });\n    this.controller = controller;\n    this.container = new Element({\n      parent: this.node,\n      className: 'main__container container',\n    });\n    this.textarea = new Textarea({\n      parent: this.container.node,\n      className,\n      controller: controller.textareaHandler,\n    });\n    this.board = new Board({\n      parent: this.container.node,\n      className,\n      lang: 'en',\n      controller: this.controller.boardHandler,\n    });\n  }\n\n  setFocusOnTextarea = () => this.textarea.node.focus();\n\n  init = (keys) => {\n    this.board.init(keys);\n  };\n\n  onChangeActiveBtns = (activeBtnsMap) => this.board.onChangeActiveBtns(activeBtnsMap);\n\n  onChangeLang = (lang) => {\n    this.board.onChangeLang(lang);\n  };\n\n  onChangeTextareaContent = (content) => {\n    this.textarea.setContent(content);\n  };\n\n  onChangeCursorPosition = ({ start, end }) => {\n    this.textarea.node.setSelectionRange(start, end);\n  };\n\n  onInitState = ({ keys, lang }) => {\n    this.board.init({ keys, lang });\n  };\n}\n\nexport { Main };\n","class DataApi {\n  constructor() {\n    this.data = [];\n  }\n\n  getKeysData() {\n    return fetch('./data/keys.json').then((res) => res.json()).then((data) => {\n      if (!Array.isArray(data)) {\n        throw new Error('Data load error');\n      }\n      this.data = data;\n      return this.data;\n    });\n  }\n}\n\nexport { DataApi };\n","import { Header } from './Header';\nimport { Element } from './helper/element';\nimport { Main } from './Main';\nimport { DataApi } from './helper/data-api';\n\nclass View extends Element {\n  constructor({ parent, controller, store }) {\n    super({ parent, className: 'keyboard' });\n    this.controller = controller;\n    this.store = store;\n    this.node.onresize = () => {\n      const maxLengthOfTextarea = window.innerWidth >= 1080 ? 77 : window.innerWidth >= 851 ? 60 : window.innerWidth >= 768 ? 52 : 30;\n      this.controller.onResize(maxLengthOfTextarea);\n      this.main.setFocusOnTextarea();\n    };\n\n    this.data = [];\n    this.keys = [];\n    this.header = new Header({\n      parent: this.node,\n      className: 'keyboard',\n      lang: 'en',\n      controller,\n    });\n    this.main = new Main({\n      parent: this.node,\n      className: 'keyboard',\n      controller: this.controller,\n    });\n    document.addEventListener('keydown', (event) => this.controller.keyDown(event.code), true);\n    document.addEventListener('keyup', (event) => this.controller.keyUp(event.code), true);\n    document.addEventListener('click', () => this.main.setFocusOnTextarea());\n\n    this.store.onChangeTextareaContent.add((content) => this.main.onChangeTextareaContent(content));\n    this.store.onChangeLang.add((lang) => {\n      this.header.onChangeLang(lang);\n      this.main.onChangeLang(lang);\n    });\n    this.store.onChangeActiveBtns.add(\n      (activeBtnsMap) => this.main.onChangeActiveBtns(activeBtnsMap),\n    );\n    this.store.onChangeCursorPosition.add(\n      (position) => this.main.onChangeCursorPosition(position),\n    );\n    this.store.onInitState.add(({ keys, lang }) => {\n      this.header.onChangeLang(lang);\n      this.main.onInitState({ keys, lang });\n    });\n  }\n\n  init = () => {\n    const data = new DataApi();\n    data.getKeysData().then((loaded) => {\n      this.data = loaded;\n      this.controller.initKeyboard(this.data);\n    });\n  };\n}\n\nexport { View };\n","import { Store } from './Store';\nimport { Controller } from './Controller';\nimport { View } from './View';\n\nimport '../assets/css/style.scss';\n\nconst Keyboard = (parent) => {\n  const store = new Store();\n  const controller = new Controller(store);\n  const view = new View({\n    parent,\n    controller,\n    store,\n  });\n  view.init();\n};\n\nexport { Keyboard };\n","import { Keyboard } from './component/Keyboard';\n\nconst keyboard = Keyboard(document.body);\nwindow.keyboard = keyboard;\n"],"names":["Signal","_createClass","_this","_classCallCheck","_defineProperty","listener","_listener","push","filter","elem","params","forEach","this","Store","_langIndex","_langMap","_textareaContent","_textareaRow","_cursor","line","pos","number","_keys","_activeBtns","_lastControl","id","time","_activeControls","_lastKey","_capsLock","_maxLengthOfTextarea","key","value","_ref","keys","langIndex","onInitState","emit","lang","get","set","newLength","onChangeLengthOfTextarea","newPosition","onChangeCursorPosition","start","end","textareaRow","content","onChangeTextareaContent","keysMap","onChangeLang","onChangeLocalStorageData","textareaContent","cursor","langMap","code","btnsMap","onChangeActiveBtns","newLastControl","newActiveControls","newLastKey","flag","DataBuffer","buffer","length","string","Editor","split","map","row","concat","maxRowLength","arr","restString","rows","match","lastSpaceIndex","lastIndexOf","slice","flat","_objectSpread","findCursorPosition","sumOfRowsLengths","position","i","direction","_this$cursor","newTextareaContent","prepareTextareaRow","cursorPosition","startSelect","endSelect","Math","min","max","copyText","cutText","selectPosition","symbol","part","Command","controller","editor","onExecute","backupTextareaContent","backupCursor","execute","Add","_Command","_inherits","_super","call","addSymbol","newSymbol","saveBackup","Delete","deleteSymbol","deleteDirection","History","initialData","history","activeCommandIndex","command","Copy","saveSelect","selectedTextRange","Replace","replaceSelect","Cut","cutSelect","Paste","LocalStorageData","_ref$lang","_ref$textareaContent","_ref$textareaRow","_ref$cursor","data","JSON","stringify","object","initData","_typeof","Error","instanceOfISourcesLStorage","Controller","store","dataFromLocalSorage","localStorage","setItem","toJson","fromJson","parse","getItem","e","activeKeys","Object","activeControls","includes","shiftValue","value_shift","hasActiveShift","capsLock","resetControls","add","maxLengthOfTextarea","executeCommand","_ref2","caps","toLowerCase","isSelectedText","setCursorPosition","isCopiedText","cursorHandler","getKeyContent","type","lastControl","activeBtns","lastKey","hasControls","hasControlCombination","editMap","excludeKey","setCursorFromTextarea","_this$store$cursor","_toConsumableArray","newLine","newNumber","_this$store$cursor2","newPos","_this$store$cursor3","_this$store$cursor4","delete","move","moveCursor","capslock","space","selectTextRange","up","upCursor","down","downCursor","left","leftCursor","right","rightCursor","mouseDown","mouseUp","keyHandler","langIndexInStore","indexOf","localStorageData","setInitState","btn","backupTextareaRow","getLocalStorageData","window","innerWidth","toLocalStorageData","_this2","controlsKeys","activeControlsKeys","controlCombinations","every","l","join","backCommand","back","next","getLast","save","Element","_ref$parent","parent","_ref$tagName","tagName","_ref$className","className","_ref$content","element","document","createElement","classList","innerHTML","append","node","remove","Header","_Element","_assertThisInitialized","activeLang","textContent","container","description","Textarea","focus","addEventListener","event","preventDefault","onmouseup","selectionEnd","selectionStart","Key","_this$content","mainContent","beforeContent","tabIndex","update","onmousedown","timeStamp","onmouseover","KeyAlt","_Key","KeyArrow","KeyCapsLook","KeyControl","KeyMeta","KeyShift","KeyMap","ShiftLeft","ShiftRight","ControlLeft","ControlRight","MetaLeft","AltLeft","AltRight","ArrowLeft","ArrowRight","CapsLook","Board","activeBtnsMap","btns","contains","name","keyData","KeyConstructor","Main","textarea","board","init","setContent","setSelectionRange","_ref3","textareaHandler","boardHandler","DataApi","fetch","then","res","json","Array","isArray","View","getKeysData","loaded","initKeyboard","onresize","onResize","main","setFocusOnTextarea","header","keyDown","keyUp","keyboard","body"],"sourceRoot":""}